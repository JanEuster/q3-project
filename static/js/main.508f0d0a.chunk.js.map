{"version":3,"sources":["logo.svg","Navbar.js","components/Canvas/Artboard.js","components/Canvas/Objects/BoundingBox.js","components/Canvas/Panels/PanelComponents.js","components/Canvas/Panels/BasePanel.js","components/Canvas/Panels/Toolbox.js","components/Canvas/Objects/BasicShapes.js","components/Canvas/Objects/Paths.js","components/Canvas/Objects/Text.js","components/Canvas/Panels/ToolSettings.js","components/Canvas/Tools.js","components/Canvas/Canvas.jsx","components/Home/Modals/BaseModal.jsx","components/Home/Modals/components/DropDown.jsx","components/Home/Modals/components/HVSelector.jsx","components/Home/Modals/components/DocTypes.jsx","components/Home/Modals/NewFileModal.jsx","components/Home/Modals/ImportFileModal.jsx","components/Home/Modals/OpenFileModal.jsx","components/Home/Home.jsx","App.js","index.js"],"names":["module","exports","NavItem","props","right","Fragment","className","to","link","title","Navbar","side","Artboard","width","height","content","bgColor","this","margin","objects","draw","bind","obj","push","objs","forEach","splice","indexOf","x","y","artMeta","getArtboardMetadata","pixelRatio","baseCoord","w","h","scrW","window","innerWidth","scrH","innerHeight","m","orient","artH","baseW","artW","baseH","context","fillStyle","fillRect","render","clearRect","canvas","drawArtboard","drawObjects","BoundingBox","xCoord","yCoord","coords","wh","endCoords","xEnd","yEnd","setCoords","setEndCoords","setWH","offset","strokeStyle","lineWidth","strokeRect","colors","require","BasePanelComponent","boundingBox","console","log","panelOffset","PanelButton","fS","grey","sS","darkgrey","lW","PanelText","text","size","fixBoundY","length","font","fillText","PanelFunctionalText","textFunc","PanelTitle","PanelTextSwitch","state","switchFill","off","on","midblue","switchDiameter","textXOffset","PanelSlider","func","undefined","sliderPosition","knobWidth","setSliderPos","xPercent","pos","beginPath","moveTo","lineTo","stroke","closePath","Panel","border","bhalf","components","panelXY","getXY","checkCollision","map","comp","handleColission","renderComponents","PanelToolButton","tool","lightgrey","activeSS","midorange","active","icon","Image","src","drawImage","Toolbox","toolManager","Math","ceil","tools","toolWidth","componenets","i","offsetX","offsetY","toolDeselect","activeTool","toolSelect","BaseShape","getCoords","getEndCoords","setBounds","moveBounds","Rectangle","fillColor","borderColor","borderWidth","mode","abs","xOffset","yOffset","Circle","radius","Offset","arc","PI","fill","Triangle","Point","Path","points","strokeWidth","strokeColor","addPoints","addPoint","determineNewBounds","p","minX","minY","maxX","maxY","point","p1","p2","deltaX","deltaY","sqrt","pow","pointsLength","pointsRemoved","pointDistance","Text","fontSize","setWidthHeight","slice","fontfamily","measureText","PanelColorButton","d","color","selectorComponent","PanelColorSelectorComponent","elementsX","diameter","round","elementsY","activeColor","subComponents","floor","setActiveColor","ToolSettingsPanel","name","toolSettings","SelectionTool","selectedObject","NaN","moving","lastPos","lastEventUp","Doc","reverse","e","type","key","removeObject","localCoords","pageX","pageY","collisionOnObjects","xDelta","yDelta","move","PencilTool","currentPath","lastPath","eventCount","pointsToAdd","lastMoveEvent","Date","inUse","addObject","cleanUp","EraserTool","getBackgroundColour","TextTool","activeObject","addText","removeLastChar","ShapeTool","shapes","currentShape","lastShape","shape","x1","y1","selectionT","pencilT","eraserT","textT","shapeT","ToolManager","toolUse","lastObj","panel","settingsPanel","select","use","deselect","graphic","Tools","testPanel","Panels","addObjects","Canvas","canvasRef","useRef","useEffect","current","getContext","updateCanvas","toolGraphic","handleResize","handleMouseEvent","checkBoundsCollision","updateInterval","setInterval","addEventListener","document","_","clearInterval","removeEventListener","ref","id","ModalBox","styled","div","ModalTitle","ModalTextButtonStyle","button","lightorange","ModalTextButton","redirect","style","fontFamily","onClick","DropDownStyle","OptionsDiv","isOpen","OptionButton","OptionButtonText","SelectedOptionButton","Option","onMouseDown","event","preventDefault","SelectedOption","toggle","onBlur","setOff","currentOption","Dropdown","defaultOption","default","prevProps","prevState","onChange","option","setState","toggleOpen","activeElement","blur","options","opt","showAllOptions","setCurrent","setOFF","Component","HVButtons","horizontal","HVSelector","hv","display","justifyContent","alignItems","SVGImage","img","DocTypeSelector","docType","docTypes","setDocType","process","gridColumn","FilesTypesSelection","formats","orientation","justifyItems","position","float","transform","marginRight","userSelect","userDrag","setFormat","setOrientation","ButtonContainerDiv","NewFileModal","orientations","useState","overflowY","flexDirection","textAlign","modalRef","ImportFileModal","OpenFileModal","Blurred","MainButton","subtitle","SmallButton","Home","isOpenNew","setOpenNew","isOpenImport","setOpenImport","isOpenOpen","setOpenOpen","isOpenAny","setOpenAny","App","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.508f0d0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ea09f389.svg\";","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction NavItem(props) {\r\n\tconst right = props.right;\r\n\treturn (\r\n\t<React.Fragment>\t\r\n\t\t{ right ? \r\n\t\t<li className=\"right-nav\">\r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li>\r\n\t\t:\r\n\t\t<li> \r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li> }\r\n\t</React.Fragment>\t\r\n\t)\r\n}\r\n\r\nfunction Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={props.side}>\r\n\t\t\t<ul className=\"Navbar\">\r\n\t\t\t\t<NavItem link=\"/\" title=\"Home\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document1\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document2\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document3\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Settings\" right=\"true\" />\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","class Artboard {\r\n  //\r\n  constructor(width, height, content, bgColor) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.content = content;\r\n    this.bgColor = bgColor;\r\n\r\n    this.margin = 10; // margin to be set around the artboard\r\n\r\n    // variable to store all objects in document\r\n    // objects at the end of the list are on top of the other ones --> layer system\r\n    this.objects = [];\r\n    this.draw = this.draw.bind(this);\r\n  }\r\n\r\n  addObject(obj) {\r\n    this.objects.push(obj);\r\n  }\r\n\r\n  addObjects(objs) {\r\n    objs.forEach((obj) => {\r\n      this.objects.push(obj);\r\n    });\r\n  }\r\n\r\n  removeObject(obj) {\r\n    this.objects.splice(this.objects.indexOf(obj), 1)\r\n  }\r\n\r\n  getBackgroundColour() {\r\n    return this.bgColor;\r\n  }\r\n\r\n  ratioedCoords(x, y) {\r\n    // convert canvas coordinates to artboard coordinates\r\n    //-> scaled by pixelRatio\r\n    var artMeta = this.getArtboardMetadata();\r\n    return { x: x / artMeta.pixelRatio, y: y / artMeta.pixelRatio };\r\n  }\r\n  relativeCoords(x, y) {\r\n    // converts global coordinates to ones that are relative to the artboard\r\n    //-> i.e.if coord is left of artboard relative coord is negative\r\n    var artMeta = this.getArtboardMetadata();\r\n    return { x: x - artMeta.baseCoord.w, y: y - artMeta.baseCoord.h };\r\n  }\r\n  localCoords(x, y) {\r\n    // ratioedCoords + relativeCoords\r\n    var artMeta = this.getArtboardMetadata();\r\n    return {\r\n      x: (x - artMeta.baseCoord.w) / artMeta.pixelRatio,\r\n      y: (y - artMeta.baseCoord.h) / artMeta.pixelRatio,\r\n    };\r\n  }\r\n\r\n  getArtboardMetadata() {\r\n    let scrW = window.innerWidth\r\n    let scrH = window.innerHeight\r\n    var m = this.margin * 6;\r\n\r\n    if (scrW / scrH > this.width / this.height) {\r\n      var orient = \"v\";\r\n      var artH = scrH - m;\r\n      var artW = this.width * (artH / this.height);\r\n      var baseW = (scrW - artW) / 2;\r\n      var baseH = this.margin;\r\n    } else if (scrW / scrH < this.width / this.height) {\r\n      var orient = \"h\";\r\n      var artW = scrW - m;\r\n      var artH = this.height * (artW / this.width);\r\n      var baseW = this.margin;\r\n      var baseH = (scrH - artH) / 2;\r\n    } else {\r\n      var orient = \"sq\";\r\n      if (scrW >= scrH) {\r\n        var artW = scrW - m;\r\n        var artH = this.height * (this.width / scrW);\r\n      } else {\r\n        var artH = scrH - m;\r\n        var artW = this.width * (this.height / scrH);\r\n      }\r\n    }\r\n\r\n    if (orient === \"v\") {\r\n      var pixelRatio = artW / this.width;\r\n    } else {\r\n      var pixelRatio = artH / this.height;\r\n    }\r\n\r\n    return {\r\n      width: artW,\r\n      height: artH,\r\n      orient: orient,\r\n      baseCoord: { w: baseW, h: baseH },\r\n      pixelRatio: pixelRatio,\r\n    };\r\n  }\r\n\r\n  drawArtboard(context, artMeta) {\r\n\r\n    context.fillStyle = this.bgColor;\r\n    context.fillRect(\r\n      artMeta.baseCoord.w,\r\n      artMeta.baseCoord.h,\r\n      artMeta.width,\r\n      artMeta.height\r\n    );\r\n  }\r\n\r\n  drawObjects(context, artMeta) {\r\n\r\n    this.objects.forEach((obj) => {\r\n      obj.render(context, artMeta.pixelRatio, artMeta.baseCoord);\r\n    });\r\n  }\r\n\r\n  draw(context, artMeta) {\r\n    // console.log(this.objects);\r\n    // reset canvas\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n\r\n    this.drawArtboard(context, artMeta);\r\n    this.drawObjects(context, artMeta);\r\n\r\n  }\r\n}\r\n\r\nexport default Artboard;\r\n","class BoundingBox {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    this.coords = [xCoord, yCoord];\r\n    this.wh = [width, height];\r\n    this.endCoords = [xCoord + width, yCoord + height];\r\n  }\r\n\r\n  // dont know if i actually should define basic getters and setters\r\n  getCoords() {\r\n    return this.coords;\r\n  }\r\n  setCoords(x, y) {\r\n    this.coords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getEndCoords() {\r\n    return this.endCoords;\r\n  }\r\n  setEndCoords(x, y) {\r\n    this.endCoords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getWH() {\r\n    return this.coords;\r\n  }\r\n  setWH(w, h) {\r\n    this.wh = [w, h];\r\n    //also define new endCoords values\r\n    this.endCoords = [this.coords[0] + w, this.coords[1] + h];\r\n  }\r\n\r\n  setBounds(x, y, xEnd, yEnd) {\r\n    this.setCoords(x, y);\r\n    this.setEndCoords(xEnd, yEnd);\r\n    this.setWH(this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]);\r\n  }\r\n\r\n  checkCollision(x, y) {\r\n\r\n    if (\r\n      x >= this.coords[0] &&\r\n      x <= this.endCoords[0] &&\r\n      y >= this.coords[1] &&\r\n      y <= this.endCoords[1]\r\n\r\n    ) {\r\n      // collison\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render(context, offset={x:0, y:0}, pixelRatio = 1) {\r\n    // render bounding box for testing\r\n    context.strokeStyle = \"#FF0000\"\r\n    context.lineWidth = 3\r\n\r\n    context.strokeRect(\r\n      offset.x + pixelRatio * this.coords[0],\r\n      offset.y + pixelRatio * this.coords[1],\r\n      pixelRatio * this.wh[0],\r\n      pixelRatio * this.wh[1]\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoundingBox;\r\n","import BoundingBox from \"../Objects/BoundingBox\"\r\nconst colors = require(\"../../colors.json\");\r\n\r\nclass BasePanelComponent {\r\n    constructor(x, y) {\r\n        this.coords = {x: x, y: y}\r\n\r\n        this.boundingBox = new BoundingBox(0, 0, 0, 0)\r\n    }\r\n\r\n    handleColission() {\r\n        console.log(\"clicked\", this)\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n\r\n    }\r\n}\r\n\r\nclass PanelButton extends BasePanelComponent {\r\n    constructor(x, y, w, h) {\r\n        super(x, y)\r\n\r\n        this.width = w\r\n        this.height = h\r\n        \r\n        this.fS = colors.grey\r\n        this.sS = colors.darkgrey\r\n        this.lW = 5\r\n\r\n        this.boundingBox = new BoundingBox(x, y -this.lW, w +this.lW, h +this.lW) // NOTE: this expands boundingBox by 5px for all PanelButton derivatives as well\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.fillStyle = this.fS\r\n        context.strokeStyle = this.sS\r\n        context.lineWidth = this.lW\r\n\r\n        // console.log(\r\n        //                 panelOffset.x + this.coords.x,\r\n        //     panelOffset.y + this.coords.y,\r\n        // )\r\n        context.fillRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y,\r\n            this.width,\r\n            this.height\r\n        )\r\n        context.strokeRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y,\r\n            this.width,\r\n            this.height\r\n        )\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nclass PanelText extends BasePanelComponent {\r\n    constructor(x, y, text, size=15) {\r\n        \r\n        super(x, y)\r\n        \r\n        this.text = text\r\n        // this.width = w\r\n        // this.height = h\r\n        this.height = size\r\n        this.fixBoundY = this.height * 4/5\r\n        \r\n        this.width = this.height * this.text.length/2\r\n\r\n        this.font = `${this.height}px iosevka semibold`\r\n        this.fS = colors.darkgrey\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.font = this.font\r\n        context.fillStyle = this.fS\r\n\r\n        context.fillText(this.text, panelOffset.x + this.coords.x, panelOffset.y + this.coords.y)\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nclass PanelFunctionalText extends PanelText {\r\n    constructor(x, y, textFunc, size) {\r\n        super(x, y, textFunc, size)\r\n    }\r\n    render(context, panelOffset) {\r\n    context.font = this.font\r\n    context.fillStyle = this.fS\r\n\r\n    context.fillText(this.text(), panelOffset.x + this.coords.x, panelOffset.y + this.coords.y)\r\n    // this.boundingBox.render(context, panelOffset)\r\n}\r\n}\r\n\r\nclass PanelTitle extends PanelText {\r\n    constructor(x, y, text, size=25) {\r\n        super(x, y, text, size)\r\n\r\n        this.height = size\r\n        this.fixBoundY = this.height * 4/5\r\n        \r\n        this.width = this.height * this.text.length / 2\r\n        this.font = `${this.height}px iosevka bold`\r\n\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n}\r\n\r\n\r\nclass PanelTextSwitch extends PanelText {\r\n    constructor(x, y, text) {\r\n        \r\n        super(x, y, text)\r\n\r\n        this.state = false\r\n        this.switchFill = {off: colors.grey, on: colors.midblue}\r\n        this.switchDiameter = this.height\r\n        this.textXOffset = 1.5 * this.switchDiameter\r\n        this.width = this.width + this.textXOffset\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n\r\n    handleColission() {\r\n        this.state = !this.state\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.font = this.font\r\n        context.fillStyle = this.fS\r\n\r\n        context.strokeStyle = this.fS\r\n        context.lineWidth = 3\r\n\r\n        context.fillText(\r\n            this.text,\r\n            panelOffset.x + this.coords.x + this.textXOffset,\r\n            panelOffset.y + this.coords.y\r\n        )\r\n\r\n        if (this.state) {\r\n            context.fillStyle = this.switchFill.on\r\n        } else {\r\n            context.fillStyle = this.switchFill.off\r\n        }\r\n\r\n        context.fillRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y - this.fixBoundY,\r\n            this.switchDiameter,\r\n            this.switchDiameter\r\n        )\r\n\r\n        context.strokeRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y - this.fixBoundY,\r\n            this.switchDiameter,\r\n            this.switchDiameter\r\n        )\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nclass PanelSlider extends BasePanelComponent {\r\n\r\n    constructor(x, y, w, h=28, func=undefined) {\r\n        super(x, y)\r\n\r\n        this.width = w\r\n        this.height = h\r\n\r\n        this.func = func\r\n        \r\n        this.fS = colors.darkgrey\r\n        this.sS = colors.darkgrey\r\n        this.lW = 5\r\n\r\n        this.sliderPosition = 0.5 // number 0-1 position of knob along slider\r\n        this.knobWidth = this.height/2\r\n\r\n        this.boundingBox = new BoundingBox(x, y -this.lW, w +this.lW, h +this.lW) // NOTE: this expands boundingBox by 5px for all PanelButton derivatives as well\r\n\r\n        this.setSliderPos(this.sliderPosition)\r\n    }\r\n\r\n    handleColission(x, y) {\r\n        let xPercent = (x - this.coords.x) / this.width\r\n        console.log(xPercent)\r\n        this.setSliderPos(xPercent)\r\n    }\r\n\r\n    getSliderPos() {\r\n        return this.sliderPosition\r\n    }\r\n    setSliderPos(pos) {\r\n        if (pos < 0) {\r\n            this.sliderPosition = 0\r\n        } else if (pos > 1) {\r\n            this.sliderPosition = 1\r\n        } else {\r\n            this.sliderPosition = pos\r\n        }\r\n        if (this.func) {\r\n            this.func(this.sliderPosition)\r\n        }\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.fillStyle = this.fS\r\n        context.strokeStyle = this.sS\r\n        context.lineWidth = this.lW\r\n\r\n\r\n        // \r\n        context.beginPath()\r\n        context.moveTo(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y + this.height / 2\r\n        )\r\n        context.lineTo(\r\n            panelOffset.x + this.coords.x + this.width,\r\n            panelOffset.y + this.coords.y + this.height / 2\r\n        )\r\n        context.stroke()\r\n        context.closePath()\r\n        \r\n        context.fillRect(\r\n            panelOffset.x + this.coords.x + this.sliderPosition * (this.width - this.knobWidth),\r\n            panelOffset.y + this.coords.y,\r\n            this.knobWidth,\r\n            this.height\r\n        )\r\n        context.strokeStyle = colors.grey\r\n        context.strokeRect(\r\n            panelOffset.x + this.coords.x + this.sliderPosition * (this.width - this.knobWidth),\r\n            panelOffset.y + this.coords.y,\r\n            this.knobWidth,\r\n            this.height\r\n        )\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nexport default BasePanelComponent\r\nexport { PanelButton, PanelText, PanelFunctionalText, PanelTitle, PanelTextSwitch, PanelSlider }\r\n","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport { PanelButton, PanelText, PanelTitle, PanelTextSwitch } from \"./PanelComponents\";\r\n\r\nconst colors = require(\"../../colors.json\");\r\n\r\n\r\n\r\n\r\nclass Panel {\r\n    constructor(x, y, width, height, margin, border, rightSided=false) {\r\n        this.x = x\r\n        this.y = y\r\n        this.width = width;\r\n        this.height = height;\r\n        this.margin = margin;\r\n        this.border = border\r\n        this.bhalf = this.border/2\r\n\r\n        this.components = [ ]\r\n\r\n        this.boundingBox = new BoundingBox(this.x - this.bhalf, this.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n    }\r\n    \r\n    checkBoundsCollision(x, y) { \r\n        let panelXY = this.getXY()\r\n\r\n        this.boundingBox = new BoundingBox(panelXY.x - this.bhalf, panelXY.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n        if (this.boundingBox.checkCollision(x, y)) {\r\n            this.components.map(comp => {\r\n                if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) comp.handleColission(x - panelXY.x, y - panelXY.y)\r\n            })\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n    getXY() {\r\n        // if panel x or y coords are negative, the panel is sticky towards that bottom/ right side\r\n        let x, y;\r\n\r\n        if (this.x < 0) {\r\n            x = window.innerWidth + this.x\r\n        } else x = this.x \r\n        if (this.y < 0) {\r\n            y = window.innerHeight + this.y\r\n        } else y = this.y\r\n        return {x: x, y: y}\r\n    }\r\n\r\n\r\n    renderComponents(context, panelXY) {\r\n        this.components.map(comp => {\r\n            let panelOffset = panelXY // {x: x, y: y} panel offset to \r\n            comp.render(context, panelOffset)\r\n        })\r\n    }\r\n    render(context) {\r\n        context.fillStyle = colors.grey\r\n        context.strokeStyle = colors.darkgrey\r\n        context.lineWidth = this.border\r\n\r\n        let panelXY = this.getXY()\r\n\r\n        context.fillRect(panelXY.x, panelXY.y, this.width, this.height)\r\n        context.strokeRect(panelXY.x, panelXY.y, this.width, this.height)\r\n\r\n        this.renderComponents(context, panelXY)\r\n    }\r\n}\r\n\r\n\r\nexport default Panel;","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport Panel from \"./BasePanel\";\r\nimport { PanelButton } from \"./PanelComponents\";\r\nconst colors = require(\"../../colors.json\");\r\n\r\nclass PanelToolButton extends PanelButton {\r\n  constructor(x, y, w, h, tool) {\r\n    super(x, y, w, h)\r\n\r\n    this.tool = tool\r\n    this.fS = colors.lightgrey\r\n    this.activeSS = colors.midorange\r\n    this.lW = 6\r\n  }\r\n\r\n  render(context, panelOffset, active=false) {\r\n    context.fillStyle = this.fS\r\n    context.strokeStyle = this.sS\r\n    if (active) context.strokeStyle = this.activeSS\r\n    context.lineWidth = this.lW\r\n\r\n    context.fillRect(\r\n        panelOffset.x + this.coords.x,\r\n        panelOffset.y + this.coords.y,\r\n        this.width,\r\n        this.height\r\n    )\r\n    \r\n    let icon = new Image()\r\n    icon.src = this.tool.icon\r\n    context.drawImage(\r\n      icon,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    )\r\n    \r\n    context.strokeRect(\r\n        panelOffset.x + this.coords.x,\r\n        panelOffset.y + this.coords.y,\r\n        this.width,\r\n        this.height\r\n    )\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass Toolbox extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = width/2 * Math.ceil(toolManager.tools.length / 2);\r\n    let margin = 16;\r\n    let border = 8;\r\n    \r\n    super(-150, -(70 + height), width, height, margin, border)\r\n    this.toolManager = toolManager;\r\n    \r\n    this.toolWidth = 36;\r\n    \r\n    this.componenets = []\r\n    for (let i = 0; i < this.toolManager.tools.length; i++) {\r\n      let offsetX = this.margin + (this.margin + this.toolWidth) * (i % 2);\r\n      let offsetY = this.margin + (this.margin + this.toolWidth) * Math.ceil((i + 0.5) / 2 - 1);\r\n      this.components.push(new PanelToolButton(offsetX, offsetY, this.toolWidth, this.toolWidth, this.toolManager.tools[i]))\r\n    }\r\n  }\r\n\r\n  handleColission(tool) {\r\n    this.toolManager.toolDeselect()\r\n    this.toolManager.activeTool = tool\r\n    this.toolManager.toolSelect()\r\n  }\r\n\r\n\r\n  checkBoundsCollision(x, y) { \r\n      let panelXY = this.getXY()\r\n\r\n      this.boundingBox = new BoundingBox(panelXY.x - this.bhalf, panelXY.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n      if (this.boundingBox.checkCollision(x, y)) {\r\n          this.components.map(comp => {\r\n              if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) this.handleColission(comp.tool)\r\n          })\r\n          return true\r\n      }\r\n      return false\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    let panelOffset = panelXY // {x: x, y: y} panel offset to \r\n    this.components.map(comp => {\r\n\r\n      let active = false\r\n      if (comp.tool === this.toolManager.activeTool) active = true // if tool is the active tool it needs to rendered distictively\r\n    \r\n      comp.render(context, panelOffset, active)\r\n    })\r\n  }\r\n}\r\n\r\nexport default Toolbox;\r\n","import BoundingBox from \"./BoundingBox\";\r\n\r\nclass BaseShape {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    // every object inherits a boundingbox\r\n    this.boundingBox = new BoundingBox(xCoord, yCoord, width, height);\r\n\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n  }\r\n  moveBounds(x, y) {\r\n    let coords = this.boundingBox.getCoords()\r\n    let endCoords = this.boundingBox.getEndCoords()\r\n\r\n    this.boundingBox.setBounds(coords[0] + x, coords[1] + y, endCoords[0] + x, endCoords[1] + y)\r\n  }\r\n  move(x, y) {\r\n    this.moveBounds(x, y)\r\n\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n  }\r\n\r\n  render() { }\r\n}\r\n\r\nclass Rectangle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    width,\r\n    height,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n\r\n    super(xCoord, yCoord, Math.abs(width), Math.abs(height))\r\n    //super(bCoords[0], bCoords[1], bCoords[2], bCoords[3]);\r\n\r\n    if (mode === \"centered\") {\r\n      this.xOffset = -width / 2;\r\n      this.yOffset = -height / 2;\r\n    } else {\r\n      this.xOffset = 0;\r\n      this.yOffset = 0;\r\n    }\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.fillRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * Math.abs(this.width), //width and height cant take on negative values\r\n      pixelRatio * Math.abs(this.height)\r\n    );\r\n    context.strokeRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * Math.abs(this.width),\r\n      pixelRatio * Math.abs(this.height)\r\n    );\r\n  }\r\n}\r\n\r\nclass Circle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    radius,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n    super(xCoord-radius, yCoord-radius, radius*2, radius*2);\r\n    \r\n    //console.log(\"CIRCLE: \" + xCoord, yCoord, radius);\r\n    if (mode === \"centered\") {\r\n      this.Offset = 0;\r\n    } else {\r\n      this.Offset = radius;\r\n    }\r\n\r\n    this.radius = radius;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.beginPath();\r\n    context.arc(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.Offset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.Offset),\r\n      this.radius * pixelRatio,\r\n      0 * Math.PI, // starting point\r\n      2 * Math.PI // end point -> 2pi=360°\r\n    );\r\n    context.fill();\r\n    if (this.borderWidth > 0) context.stroke();\r\n\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nclass Triangle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    width,\r\n    height,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined\r\n  ) {\r\n    super(xCoord, yCoord, Math.abs(width), Math.abs(height)); //width and height cant take on negative values\r\n\r\n    if (mode === \"centered\") {\r\n      this.xOffset = -width/2;\r\n      this.yOffset = -height/2;\r\n    } else {\r\n      this.xOffset = 0;\r\n      this.yOffset = 0;\r\n    }\r\n\r\n\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n    context.lineWidth = pixelRatio * this.borderWidth;\r\n    context.strokeStyle = this.borderColor;\r\n    \r\n    let xCoord = baseCoord.w + pixelRatio * (this.xCoord + this.xOffset);\r\n    let yCoord = baseCoord.h + pixelRatio * (this.yCoord + this.yOffset);\r\n    let width = pixelRatio * this.width\r\n    let height = pixelRatio * this.height\r\n\r\n    context.beginPath();\r\n    context.moveTo(xCoord, yCoord);\r\n    context.lineTo(xCoord + width, yCoord);\r\n    context.lineTo(xCoord + width/2, yCoord + height);\r\n    context.lineTo(xCoord, yCoord);\r\n\r\n    context.fill();\r\n\r\n    if (this.borderWidth > 0) {context.stroke();}\r\n\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nexport default BaseShape;\r\nexport { Rectangle, Circle, Triangle };\r\n","import BaseShape from \"./BasicShapes\";\r\n\r\nfunction Point(x, y) {\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\n// TODO: smoothed paths: quadratic curves\r\nclass Path extends BaseShape {\r\n  constructor(points = [], strokeWidth = 10, strokeColor = \"#0D79F2\") {\r\n    super(0, 0, 0, 0);\r\n\r\n    this.points = []; // ...splits x and y into separate parameters\r\n    this.addPoints(points);\r\n\r\n    this.strokeWidth = strokeWidth;\r\n    this.strokeColor = strokeColor;\r\n\r\n    this.addPoint = this.addPoint.bind(this);\r\n    this.addPoints = this.addPoint.bind(this);\r\n  }\r\n\r\n  addPoint(x, y) {\r\n    this.points.push(new Point(x, y));\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n  addPoints(points) {\r\n    points.forEach((p) => {\r\n      this.points.push(new Point(p[0], p[1]));\r\n    });\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n\r\n  }\r\n\r\n  determineNewBounds() {\r\n    // determine min and mix coordinates for selecting boundingBox\r\n    let minX = this.points[0].x;\r\n    let minY = this.points[0].y;\r\n    let maxX = this.points[0].x;\r\n    let maxY = this.points[0].y;\r\n    this.points.map(point => {\r\n      if (point.x < minX) minX = point.x;\r\n      if (point.y < minY) minY = point.y;\r\n      if (point.x > maxX) maxX = point.x;\r\n      if (point.y > maxY) maxY = point.y;\r\n    }) \r\n    return [\r\n      minX, minY,\r\n      maxX, maxY,\r\n    ];\r\n  }\r\n\r\n  // TODO: move Method for Path Objects \r\n  move(x, y) {\r\n    this.points.map(point => {\r\n      point.x += x\r\n      point.y += y\r\n    })\r\n    \r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n\r\n  pointDistance(p1, p2) {\r\n    let deltaX = p1.x - p2.x \r\n    let deltaY = p1.y - p2.y\r\n    let dist = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2))\r\n    return dist\r\n  }\r\n  cleanUp() {\r\n    // remove points from path that are too close together, therefore enforce straighter, cleaner lines \r\n    var pointsAmount = 5\r\n    var pointsLength = this.points.length\r\n    var pointsRemoved = 0;\r\n    var distCutoff = 2.45\r\n\r\n\r\n    for (let i = 1; i < this.points.length; i++) {\r\n      if (this.pointDistance(this.points[i - 1], this.points[i]) < distCutoff) {\r\n\r\n        if (i < this.points.length - pointsAmount) {\r\n          pointsRemoved += pointsAmount\r\n          this.points.splice(i, pointsAmount)\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(`[path cleanup] ${pointsRemoved} points removed of ${pointsLength}` )\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.lineWidth = pixelRatio * this.strokeWidth;\r\n    context.strokeStyle = this.strokeColor;\r\n\r\n    context.beginPath();\r\n    this.points.forEach((p) => {\r\n      context.lineTo(\r\n        baseCoord.w + pixelRatio * p.x,\r\n        baseCoord.h + pixelRatio * p.y\r\n      );\r\n    });\r\n    context.stroke();\r\n    context.closePath();\r\n\r\n    // context.beginPath();\r\n    // context.strokeStyle = \"#00FF00\";\r\n    // context.moveTo(baseCoord.w + pixelRatio * this.points[0].x, baseCoord.h + pixelRatio * this.points[0].y)\r\n    // for (var i = 1; i < this.points.length; i ++)\r\n    // {\r\n    //   var controlX = (baseCoord.w + pixelRatio * this.points[i - 1].x + baseCoord.w + pixelRatio * this.points[i].x) / 2;\r\n    //   var controlY = (baseCoord.h + pixelRatio * this.points[i - 1].y + baseCoord.h + pixelRatio * this.points[i].y) / 2;\r\n    //   context.quadraticCurveTo(\r\n    //     baseCoord.w + pixelRatio * this.points[i].x,\r\n    //     baseCoord.h + pixelRatio * this.points[i].y,\r\n    //     controlX,\r\n    //     controlY\r\n    //   );\r\n    // }\r\n    \r\n    // context.stroke();\r\n    // context.closePath();\r\n\r\n    // show points\r\n    // this.points.forEach((p) => {\r\n    //   context.fillRect(\r\n    //     baseCoord.w + pixelRatio * p.x,\r\n    //     baseCoord.h + pixelRatio * p.y,\r\n    //     7,\r\n    //     7\r\n    //   )\r\n    // });\r\n  }\r\n}\r\n\r\nexport default Path;\r\n","import BaseShape from \"./BasicShapes\";\r\nimport BoundingBox from \"./BoundingBox\";\r\n\r\n\r\nclass Text extends BaseShape {\r\n    constructor(x, y, text = \"\", font = \"Iosevka Bold\", fontSize = 100, fillStyle = \"#393939\") {\r\n        super(x, y, 0, 0)\r\n        this.text = text\r\n        this.font = font\r\n        this.fontSize = fontSize\r\n        this.fillStyle = fillStyle\r\n\r\n        this.setWidthHeight()\r\n\r\n        this.setBounds(x, y)\r\n    }\r\n\r\n    setBounds(x=this.xCoord, y=this.yCoord) {\r\n        this.boundingBox.setBounds(x, y - this.height, x + this.width, y)\r\n    }\r\n\r\n    move(x, y) {\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n    this.setBounds(this.xCoord, this.yCoord)\r\n\r\n    }\r\n\r\n\r\n    setWidthHeight() {\r\n        this.width = this.text.length * this.fontSize / 2\r\n        this.height = this.fontSize\r\n    }\r\n\r\n    setText(text) {\r\n        this.text = text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    addText(text) {\r\n        this.text += text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    removeLastChar() {\r\n        this.text = this.text.slice(0, -1)\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    clearText() {\r\n        this.text = \"\"\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n\r\n\r\n    setFont(fontfamily) {\r\n        this.font = fontfamily\r\n    }\r\n    setFontSize(fontSize) {\r\n        this.fontSize = fontSize\r\n    }\r\n\r\n    render(context, pixelRatio, baseCoord) {\r\n        context.font = `${this.fontSize * pixelRatio}px ${this.font}` // i.e. 30px iosevka demibold\r\n        context.fillStyle = this.fillStyle\r\n\r\n        this.width = context.measureText(this.text).width / pixelRatio\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n\r\n        context.fillText(\r\n            this.text,\r\n            baseCoord.w + pixelRatio * this.xCoord,\r\n            baseCoord.h + pixelRatio * this.yCoord\r\n        )\r\n\r\n        // this.boundingBox.render(context, {x : baseCoord.w, y: baseCoord.h}, pixelRatio)\r\n    }\r\n\r\n}\r\n\r\nexport default Text","import Panel from './BasePanel';\r\nimport BoundingBox from './../Objects/BoundingBox';\r\nimport BasePanelComponent, { PanelButton, PanelFunctionalText, PanelSlider, PanelText, PanelTitle } from \"./PanelComponents\"\r\nimport { selectionT, pencilT, eraserT, textT } from '../Tools';\r\nconst colors = require(\"../../colors.json\")\r\n\r\n\r\nclass PanelColorButton extends PanelButton {\r\n  constructor(x, y, d, color, selectorComponent) {\r\n    super(x, y, d, d)\r\n  \r\n    this.fS = color\r\n    this.sS = colors.darkgrey\r\n    this.lW = 3\r\n\r\n    this.selectorComponent = selectorComponent\r\n  }\r\n}\r\n\r\nclass PanelColorSelectorComponent extends BasePanelComponent {\r\n  constructor(x, y, elementsX, diameter = 10, toolManager) {\r\n    let colors = [\r\n      \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\",\r\n      \"#FF8000\", \"#FF0080\", \"#FF8080\",\r\n      \"#80FF00\", \"#00FF80\", \"#80FF80\",\r\n      \"#8000FF\", \"#0080FF\", \"#8080FF\",\r\n      \"#FFFFFF\", \"#BFBFBF\", \"#808080\", \"#404040\", \"#000000\"\r\n    ]\r\n\r\n    let margin = Math.round(diameter / 5 * 2)\r\n    let elementsY = Math.ceil(colors.length/elementsX)\r\n    let w = margin + elementsX * (margin + diameter)\r\n    let h = margin + elementsY * (margin + diameter)\r\n    super(x, y, w, h)\r\n\r\n    this.margin = margin\r\n    this.elementsX = elementsX\r\n    this.elementsY = elementsY\r\n    this.diameter = diameter\r\n\r\n    this.colors = colors\r\n    this.activeColor = colors[0]\r\n\r\n    this.toolManager = toolManager\r\n\r\n    this.boundingBox = new BoundingBox(x, y, w, h)\r\n   \r\n    this.subComponents = [new PanelColorButton(\r\n      this.coords.x + this.margin,\r\n      this.coords.y + this.margin + this.elementsY * (margin + diameter),\r\n      this.diameter * 2,\r\n      this.toolManager,\r\n      this\r\n    )]\r\n    for (let i = 0; i < colors.length; i++) {\r\n      this.subComponents.push(\r\n        new PanelColorButton(\r\n          this.coords.x + this.margin + i % this.elementsX * (margin + diameter),\r\n          this.coords.y + this.margin + Math.floor(i / this.elementsX) * (margin + diameter),\r\n          this.diameter,\r\n          this.colors[i],\r\n          this\r\n        )\r\n      ) \r\n    }\r\n\r\n    this.setActiveColor()\r\n  }\r\n\r\n  setActiveColor() {\r\n    this.subComponents[0].fS = this.activeColor\r\n    this.toolManager.strokeStyle = this.activeColor\r\n  }\r\n  getActiveColor() {\r\n    return this.activeColor\r\n  }\r\n\r\n  handleColission(x, y) {\r\n    this.subComponents.map(comp => {\r\n      if (comp.boundingBox.checkCollision(x, y)) {\r\n        this.activeColor = comp.fS\r\n\r\n        this.setActiveColor()\r\n        return comp\r\n      }\r\n    })\r\n  }\r\n\r\n  renderComponents(context, panelOffset) {\r\n    this.subComponents.map(comp => {\r\n      comp.render(context, panelOffset)\r\n    })\r\n  }\r\n  render(context, panelOffset) {\r\n    this.renderComponents(context, panelOffset)\r\n  }\r\n}\r\n\r\n\r\nclass ToolSettingsPanel extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = 160;\r\n    let margin = 16;\r\n    let border = 8;\r\n    \r\n    super(-280, -(70 + height), width, height, margin, border)\r\n    this.toolManager = toolManager;\r\n    \r\n    this.components = [\r\n      new PanelTitle(5, 20, \"Tool Settings\", 17),\r\n      new PanelFunctionalText(6, 32, () => {\r\n        return \"->\"+this.toolManager.activeTool.name\r\n      }, 12)]\r\n    this.toolSettings = {\r\n      \"select\": {\r\n        components: [\r\n\r\n         ], size: {height: 160}},\r\n      \"pencil\": {components: [\r\n        new PanelColorSelectorComponent(4, 35, 5, 15, this.toolManager),\r\n        new PanelText(10, 176, \"Line Width\", 13),\r\n        new PanelSlider(10, 180, 100, 20, (pos) => {this.toolManager.strokeWidth = pos * 40})\r\n      ], size: { height: 210 }\r\n      },\r\n      \"eraser\": {\r\n        components: [\r\n        new PanelText(10, 56, \"Line Width\", 13),\r\n        new PanelSlider(10, 60, 100, 20, (pos) => {this.toolManager.strokeWidth = pos * 40})\r\n      ], size: {height: 160}},\r\n      \"text\": {\r\n        components: [\r\n        new PanelText(10, 56, \"Font Size\", 13),\r\n        new PanelSlider(10, 60, 100, 20, (pos) => { this.toolManager.fontSize = pos * 250 })\r\n        ], size: { height: 160 }\r\n      },\r\n      \"shapes\": {\r\n        components: [\r\n        ], size: { height: 100 }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  checkBoundsCollision(x, y) { \r\n    let panelXY = this.getXY()\r\n    this.boundingBox = new BoundingBox(panelXY.x - this.bhalf, panelXY.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n    \r\n    if (this.boundingBox.checkCollision(x, y)) {\r\n      let components = [...this.components, ...this.toolSettings[this.toolManager.activeTool.name].components]\r\n\r\n      components.map(comp => {\r\n        if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) {\r\n          comp.handleColission(x - panelXY.x, y - panelXY.y)\r\n        }\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n    \r\n  renderComponents(context, panelXY) {\r\n    let panelOffset = panelXY // {x: x, y: y} panel offset to \r\n\r\n    let components = [...(this.components), ...this.toolSettings[this.toolManager.activeTool.name].components] // list of all components\r\n    components.map(comp => {\r\n      let active = false\r\n    if (comp.tool === this.toolManager.activeTool) active = true // if tool is the active tool it needs to rendered distictively\r\n  \r\n      comp.render(context, panelOffset, active)\r\n  })\r\n  }\r\n\r\n\r\n  render(context) {\r\n    this.height = this.toolSettings[this.toolManager.activeTool.name].size.height\r\n    this.y = -(70 + this.height)\r\n\r\n    context.fillStyle = colors.grey\r\n    context.strokeStyle = colors.darkgrey\r\n    context.lineWidth = this.border\r\n\r\n    let panelXY = this.getXY()\r\n\r\n    context.fillRect(panelXY.x, panelXY.y, this.width, this.height)\r\n    context.strokeRect(panelXY.x, panelXY.y, this.width, this.height)\r\n\r\n    this.renderComponents(context, panelXY)\r\n  }\r\n}\r\n\r\nexport default ToolSettingsPanel;","import Toolbox from \"./Panels/Toolbox\";\r\nimport { Circle, Rectangle, Triangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport colors from \"../colors.json\"\r\nimport Text from \"./Objects/Text\";\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport ToolSettingsPanel from './Panels/ToolSettings';\r\n\r\n\r\nlet toolSettingsPanel = new Panel()\r\n\r\n\r\n// function object\r\nclass SelectionTool {\r\n  constructor() {\r\n    this.selectedObject = NaN;\r\n    this.moving = false\r\n    this.lastPos = { x: NaN, y: NaN }\r\n    \r\n    this.lastEventUp = false // was last event mouseup -> next click event can be ignored\r\n\r\n    this.name = \"select\"\r\n    this.icon = \"assets/icons/tools/select.png\"\r\n  }\r\n\r\n  collisionOnObjects(coords, Doc) {\r\n    let objects = Doc.objects.slice(0).reverse() // create reveresed copy of objects list\r\n    let pixelRatio = Doc.getArtboardMetadata().pixelRatio\r\n\r\n    for (var i = 0; i < objects.length; i++) {\r\n      let obj = objects[i]\r\n\r\n      if (obj.boundingBox.checkCollision(coords.x, coords.y, pixelRatio)) {\r\n        return obj\r\n      }\r\n      \r\n    }\r\n    return false\r\n  }\r\n\r\n  select(obj) {\r\n    this.selectedObject = obj\r\n   }\r\n  \r\n  use(e, Doc) {\r\n    if (this.selectedObject && e.type === \"keydown\" && e.key === \"Delete\") {\r\n      Doc.removeObject(this.selectedObject)\r\n      this.selectedObject = NaN\r\n      this.moving = false\r\n    }\r\n\r\n    if (this.lastEventUp && e.type === \"click\") {\r\n      return\r\n    } // if last event was mouseup mouse move has just finished and therefore a click at the position of mouseup is not needed\r\n    this.lastEventUp = false\r\n\r\n\r\n    let coords = Doc.localCoords(\r\n    e.pageX,\r\n    e.pageY,\r\n    window.innerWidth,\r\n    window.innerHeight\r\n    );\r\n    if (e.type === \"click\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, Doc)\r\n\r\n    } else if (e.type === \"mousedown\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, Doc)\r\n      if (this.selectedObject) {\r\n        this.moving = true\r\n      }\r\n      \r\n      this.lastPos.x = coords.x\r\n      this.lastPos.y = coords.y\r\n      \r\n\r\n    } else if (this.moving && e.type === \"mousemove\") {\r\n      let xDelta = coords.x - this.lastPos.x\r\n      let yDelta = coords.y - this.lastPos.y\r\n\r\n      this.selectedObject.move(xDelta, yDelta)\r\n\r\n      this.lastPos.x = coords.x\r\n      this.lastPos.y = coords.y\r\n\r\n\r\n    } else if (this.selectedObject && e.type === \"mouseup\") {\r\n      this.moving = false\r\n      this.lastEventUp = true\r\n   }\r\n\r\n  }\r\n\r\n  deselect() { \r\n    return this.selectedObject\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.selectedObject) {\r\n      let x = this.selectedObject.boundingBox.coords[0]\r\n      let y = this.selectedObject.boundingBox.coords[1]\r\n      let w = this.selectedObject.boundingBox.wh[0]\r\n      let h = this.selectedObject.boundingBox.wh[1]\r\n\r\n      let pixelRatio = artMeta.pixelRatio\r\n      let baseCoord = artMeta.baseCoord\r\n      \r\n      let offset = 32\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = colors.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset*2),\r\n        pixelRatio * (h + offset*2)\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nclass PencilTool {\r\n  constructor() {\r\n    this.currentPath = NaN;\r\n    this.lastPath = NaN\r\n    this.eventCount = 0;\r\n    this.pointsToAdd = [];\r\n    this.lastMoveEvent = new Date();\r\n\r\n    this.toolManager = undefined\r\n\r\n    this.name = \"pencil\"\r\n    // this.use = this.use.bind(this);\r\n    this.icon = \"assets/icons/tools/pencil.png\"\r\n  }\r\n\r\n  select(obj) { \r\n  }\r\n  \r\n  use(e, Doc) {\r\n    this.eventCount += 1;\r\n    \r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n    if (e.type === \"mousedown\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        this.toolManager.strokeWidth,\r\n        this.toolManager.strokeStyle\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n\r\n    } else if (this.inUse && e.type === \"mousemove\") {\r\n      this.currentPath.addPoint(coords.x, coords.y);\r\n      // this.currentPath.cleanUp()\r\n\r\n    } else if (this.inUse && e.type === \"mouseup\") {\r\n      this.currentPath.addPoints(coords.x, coords.y);\r\n      this.currentPath.cleanUp()\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.lastPath = this.currentPath\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n\r\n  deselect() { \r\n    return this.lastPath\r\n  }\r\n  \r\n  graphic(context, artMeta) {}\r\n}\r\n\r\nclass EraserTool extends PencilTool {\r\n  constructor() {\r\n    super();\r\n\r\n    this.toolManager = undefined\r\n\r\n    this.name = \"eraser\"\r\n    this.icon = \"assets/icons/tools/eraser.png\"\r\n  }\r\n  use(e, Doc) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n\r\n    if (e.type === \"mousedown\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0)); //colour --> getBackgroundColour Artboard Class\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        this.toolManager.strokeWidth,\r\n        Doc.getBackgroundColour()\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n    } else if(this.inUse && e.type === \"mousemove\") {\r\n      this.currentPath.addPoint(coords.x,coords.y);\r\n    } else if(this.inUse && e.type === \"mouseup\") {\r\n      this.currentPath.addPoints(coords.x,coords.y);\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n}\r\n\r\nclass TextTool {\r\n  constructor() {\r\n    this.activeObject = NaN;\r\n\r\n    this.toolManager = undefined\r\n      \r\n    this.name = \"text\"\r\n    this.icon = \"assets/icons/tools/text.png\"\r\n  }\r\n\r\n  select(obj) {\r\n    if (obj instanceof Text) {\r\n      this.activeObject = obj\r\n    }\r\n   }\r\n  \r\n  use(e, Doc) {\r\n\r\n    let coords = Doc.localCoords(\r\n    e.pageX,\r\n    e.pageY,\r\n    window.innerWidth,\r\n    window.innerHeight\r\n    );\r\n\r\n    if (e.type === \"click\") {\r\n      this.activeObject = new Text(coords.x, coords.y, \"\", this.toolManager.font, this.toolManager.fontSize)\r\n\r\n    } else if (e.type === \"mousedown\") {\r\n      this.activeObject = new Text(coords.x, coords.y, \"\", this.toolManager.font, this.toolManager.fontSize)\r\n      Doc.objects.push(this.activeObject)\r\n    } else if (this.activeObject && e.type === \"keypress\") {\r\n      this.activeObject.addText(e.key)\r\n    } else if (this.activeObject && e.type === \"keydown\") {\r\n      \r\n      if (e.key === \"Escape\") {\r\n        this.activeObject = NaN\r\n      } else if (e.key === \"Backspace\") {\r\n        this.activeObject.removeLastChar()\r\n      }\r\n      \r\n    }    \r\n\r\n    if (this.activeObject) {\r\n      this.activeObject.fontSize = this.toolManager.fontSize\r\n      this.activeObject.setWidthHeight()\r\n      this.activeObject.setBounds()\r\n    }\r\n  }\r\n\r\n  deselect() { \r\n    return this.activeObject\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.activeObject) {\r\n      let x = this.activeObject.boundingBox.coords[0]\r\n      let y = this.activeObject.boundingBox.coords[1]\r\n      let w = this.activeObject.boundingBox.wh[0]\r\n      let h = this.activeObject.boundingBox.wh[1]\r\n\r\n      let pixelRatio = artMeta.pixelRatio\r\n      let baseCoord = artMeta.baseCoord\r\n      \r\n      let offset = 32\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = colors.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset * 2) + 10,\r\n        pixelRatio * (h + offset * 2)\r\n      );\r\n\r\n      // text cursor\r\n      context.fillRect(\r\n        baseCoord.w + pixelRatio * (this.activeObject.xCoord + this.activeObject.width) +4,\r\n        baseCoord.h + pixelRatio * (this.activeObject.yCoord - this.activeObject.height),\r\n        3,\r\n        pixelRatio * this.activeObject.height\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass ShapeTool {\r\n  constructor() {\r\n\t  this.icon = \"assets/icons/tools/shapes.png\";\r\n\t  this.shapes = [\"circle\", \"rectangle\", \"triangle\"]\r\n\t  \r\n    this.name = \"shapes\"\r\n\r\n\t  this.currentShape = undefined\r\n    this.lastShape = this.currentShape\r\n  }\r\n  select(){}\r\n  \r\n  use(e, Doc) {\r\n    \r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n      );\r\n      \r\n      let shape = this.shapes[2];\r\n      //console.log(this.inUse, e.type)\r\n      if (e.type === \"mousedown\") {\r\n        //console.log(coords.x, coords.y)\r\n        this.inUse = true;\r\n        this.x1 = coords.x;\r\n        this.y1 = coords.y;\r\n        \r\n        if (shape === \"circle\") {\r\n          this.currentShape = new Circle(this.x1, this.y1, 0);\r\n        } else if (shape === \"rectangle\") {\r\n          this.currentShape = new Rectangle(this.x1, this.y1, 0, 0);\r\n        } else if (shape === \"triangle\") {\r\n          this.currentShape = new Triangle(this.x1, this.y1, 0, 0);\r\n        } else { console.log(\"ERROR SHAPE-SELECTION\") }\r\n        Doc.addObject(this.currentShape)\r\n        \r\n        //console.log(this.currentShape)\r\n      } else if (this.inUse && e.type === \"mousemove\") {\r\n        \r\n        //console.log(this.currentShape)\r\n        \r\n        if (this.currentShape instanceof Triangle) {\r\n          this.currentShape.width = coords.x - this.x1\r\n          this.currentShape.height = coords.y - this.y1\r\n\r\n        } else if (this.currentShape instanceof Circle) {\r\n          this.currentShape.radius = Math.sqrt(Math.pow((this.x1 - coords.x), 2) + Math.pow((this.y1 - coords.y), 2));\r\n        \r\n        } else if (this.currentShape instanceof Rectangle) {\r\n          this.currentShape.width = coords.x - this.x1\r\n          this.currentShape.height = coords.y - this.y1\r\n\r\n          if (this.currentShape.width < 0 && this.currentShape.height > 0) {\r\n            this.currentShape.xCoord = coords.x;\r\n          } else if (this.currentShape.width > 0 && this.currentShape.height < 0) {\r\n            this.currentShape.yCoord = coords.y;\r\n          } else if (this.currentShape.width < 0 && this.currentShape.height < 0) {\r\n            this.currentShape.xCoord = coords.x;\r\n            this.currentShape.yCoord = coords.y;\r\n          } else {}\r\n        }\r\n      }\r\n      \r\n      else if (this.inUse && e.type === \"mouseup\") {\r\n        if (this.currentShape instanceof Circle) {\r\n          var x = this.currentShape.xCoord - this.currentShape.radius;\r\n          var y = this.currentShape.yCoord - this.currentShape.radius;\r\n          var width = this.currentShape.radius * 2;\r\n          var height = this.currentShape.radius * 2;\r\n          \r\n        } else {\r\n          var x = this.currentShape.xCoord;\r\n          var y = this.currentShape.yCoord;\r\n          var width = this.currentShape.width;\r\n          var height = this.currentShape.height;\r\n\r\n          if (this.currentShape instanceof Triangle) {\r\n            if (width < 0 && height > 0) {\r\n              x += width;\r\n            } else if (width > 0 && height < 0) {\r\n              y += height;\r\n            } else if (width < 0 && height < 0) {\r\n              x += width;\r\n              y += height;\r\n            } else {}\r\n          }\r\n          \r\n          \r\n        }\r\n        //console.log(\"TOOLSCOORD: \" + x, y, width, height)\r\n        this.currentShape.boundingBox.setBounds(x, y, x + Math.abs(width), y + Math.abs(height))\r\n        this.inUse = false;\r\n        this.lastShape = this.currentShape\r\n        this.currentShape = undefined\r\n      }\r\n    }\r\n    deselect(){ \r\n      return this.lastShape\r\n    }\r\n    graphic(context, artMeta){}\r\n}\r\n\r\n\r\nvar selectionT = new SelectionTool()\r\nvar pencilT = new PencilTool()\r\nvar eraserT = new EraserTool()\r\nvar textT = new TextTool()\r\nvar shapeT = new ShapeTool()\r\n\r\nclass ToolManager {\r\n  constructor(Doc) {\r\n    this.Doc = Doc;\r\n    this.tools = [];\r\n    this.tools.push(selectionT, pencilT, eraserT, textT, shapeT);\r\n    this.toolUse = this.toolUse.bind(this);\r\n    this.activeTool = this.tools[0];\r\n    this.strokeWidth = 10;\r\n    this.strokeStyle = \"#111111\";\r\n    this.font = \"Iosevka bold\"\r\n    this.fontSize = 100\r\n\r\n    this.lastObj = NaN\r\n\r\n    pencilT.toolManager = this\r\n    eraserT.toolManager = this\r\n    textT.toolManager = this\r\n\r\n    this.panel = new Toolbox(this);\r\n    this.settingsPanel = new ToolSettingsPanel(this);\r\n  }\r\n\r\n  toolSelect() {\r\n    this.activeTool.select(this.lastObj);\r\n  }\r\n  toolUse(e) {\r\n    this.activeTool.use(e, this.Doc);\r\n  }\r\n  toolDeselect() {\r\n    this.lastObj = this.activeTool.deselect();\r\n  }\r\n\r\n  toolGraphic(context, artMeta) {\r\n    // function to display tool related graphics on redraw; i.e. selection box if selection tool is this.activeTool\r\n    this.activeTool.graphic(context, artMeta)\r\n  }\r\n\r\n}\r\n\r\nexport default ToolManager;\r\nexport { selectionT, pencilT, eraserT, textT, shapeT};\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Artboard from \"./Artboard\";\r\nimport ToolManager from \"./Tools\";\r\nimport { Circle, Rectangle, Triangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport Text from \"./Objects/Text\"\r\n\r\nimport \"./Canvas.css\";\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport SettingsToolPanel from \"./Panels/ToolSettings\"\r\nimport { PanelButton, PanelSlider, PanelText, PanelTextSwitch, PanelTitle } from \"./Panels/PanelComponents\";\r\n\r\n\r\n// simport { ipcRenderer } from \"electron\";\r\n// const app = require(\"electron\").remote.app;\r\nconst appColors = require(\"../colors.json\");\r\n\r\nvar FPS = 120\r\n\r\n\r\nvar Doc = new Artboard(2100, 2970, [], \"#dddddd\");\r\nvar Tools = new ToolManager(Doc);\r\nvar useTool = Tools.toolUse; //create object bound function - when passing functions to other functions the this is lost\r\n\r\n// testing panels\r\nvar testPanel = new Panel(20, -350, 200, 300, 16, 8)\r\ntestPanel.components = [new PanelButton( 20, 100, 20, 20 ), new PanelTitle( 20, 30, \"Test\" ), new PanelText( 20, 50, \"testing testing please\" ), new PanelTextSwitch( 20, 80, \"testing\" ), new PanelSlider(15, 130, 170)]\r\nvar Panels = [Tools.panel, Tools.settingsPanel, testPanel]\r\nconsole.log(Panels)\r\n\r\n// var Panels = [Tools.panel] // actual panels\r\n\r\n\r\n\r\nDoc.addObjects([\r\n  new Rectangle(200, 200, 1200, 600, \"#FF0000\"),\r\n  new Rectangle(0, 0, 100, 100, \"#00DD00\"),\r\n  new Rectangle(1600, 2200, 400, 600, \"#3333FF\"),\r\n  new Rectangle(1000, 1000, 300, 300, \"#DD0066\"),\r\n  new Circle(1000, 1000, 300, \"#DD00DD\", \"#DD00DD\", false, null),\r\n  new Path([\r\n    [0, 100],\r\n    [500, 2970],\r\n    [1000, 100],\r\n  ]),\r\n  new Text(350, 1200, \"lalala\", \"Iosevka bold\"),\r\n  new Triangle(0, 0, 100, 100, \"#3333FF\", \"#000000\", 0, false)\r\n]);\r\n\r\nconst Canvas = (props) => {\r\n\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  \r\n  // runs after every page render -> checks for events\r\n  useEffect(() => {\r\n    // get canvas Context\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    \r\n    \r\n    function updateCanvas() {\r\n      var artMeta = Doc.getArtboardMetadata();\r\n      Doc.draw(context, artMeta);\r\n      Tools.toolGraphic(context, artMeta)\r\n\r\n      // show panels\r\n      Panels.map(panel => {\r\n        panel.render(context)\r\n      })\r\n    }\r\n\r\n\r\n    function handleResize() {\r\n      // TODO: limit the amount of resizes for performace purposes\r\n\r\n      //setMaximized({\r\n      //maximized: window.isMaximized()\r\n      //})\r\n\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      updateCanvas()\r\n    }\r\n\r\n    let lastEventType = undefined\r\n    let beforeMouseMove = undefined\r\n    function handleMouseEvent(e) {\r\n\r\n      if (e.type === \"click\") { // ignore click event after mouseup as click is always raised after holding mouse down\r\n        lastEventType = e.type\r\n        return\r\n      }\r\n      lastEventType = e.type\r\n\r\n      // if (e.type !== \"mousemove\") { beforeMouseMove = e.type }\r\n      // || (beforeMouseMove === \"mousedown\" && e.type === \"mousemove\")\r\n      // TODO: enable smooth dragging of slider panel component  with code above, without interrupting tool use/ changing panel settings\r\n\r\n      // check click / mousedown collision with panels\r\n      if (e.type === \"click\" || e.type === \"mousedown\") { \r\n        for (let i = 0; i < Panels.length; i++) {\r\n          let panel = Panels[i]\r\n          if (panel.checkBoundsCollision(e.pageX, e.pageY)) {\r\n            return\r\n          }\r\n        }\r\n      } \r\n      Tools.toolUse(e)\r\n    }\r\n\r\n    // ipcRenderer.Renderer.on(\"resize\", (e, name) => {\r\n    //   console.log(name, e);\r\n    //   handleResize();\r\n    // });\r\n\r\n    let updateInterval = setInterval(updateCanvas, 1000/FPS)\r\n\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    canvas.addEventListener(\"click\", handleMouseEvent);\r\n    canvas.addEventListener(\"mousedown\", handleMouseEvent);\r\n    canvas.addEventListener(\"mouseup\", handleMouseEvent);\r\n    canvas.addEventListener(\"mousemove\", handleMouseEvent);\r\n    document.addEventListener(\"keypress\", handleMouseEvent)\r\n    document.addEventListener(\"keydown\", handleMouseEvent)\r\n\r\n    // window.addEventListener(\"maximize\", handleResize);\r\n    return (_) => {\r\n      clearInterval(updateInterval)\r\n\r\n\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      canvas.removeEventListener(\"click\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mousedown\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mouseup\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mousemove\", handleMouseEvent);\r\n      document.addEventListener(\"keypress\", handleMouseEvent)\r\n      document.addEventListener(\"keydown\", handleMouseEvent)\r\n\r\n      //window.addEventListener(\"maximize\", handleResize);\r\n      // clean up: remove listener to avoid memory leak by making sure there is always only one listener (every time the useEffect is called because of a resize event, a nev listener would be created)\r\n      // useEffect executes function on update of the canvas\r\n      // second arguement([]): all items to be watched for changes, which result in recurring execution of the useEffect callback\r\n    };\r\n  });\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={window.innerWidth}\r\n      height={window.innerHeight}\r\n      id=\"theCanvas\"\r\n    >\r\n      {\" \"}\r\n    </canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { Component } from 'react'\r\nimport { render } from 'react-dom';\r\nimport styled from \"styled-components\"\r\nimport { Link } from 'react-router-dom';\r\nconst colors = require(\"../../colors.json\")\r\n\r\nconst ModalBox = styled.div`\r\n  position: fixed;\r\n  display: block;\r\n  z-index: 1000;\r\n  background-color: ${colors.lightgrey};\r\n  outline-style: solid;\r\n  outline-color: ${colors.darkgrey};\r\n  outline-width: 1.2vh;\r\n  width: 70vw;\r\n  heigh: 50vh;\r\n  min-width: 75vw;\r\n  max-width: 95vw;\r\n  max-height: 95vh;\r\n  aspect-ratio: 2;\r\n  top: 50vh;\r\n  left: 50vw;\r\n  transform: translate(-50%, -50%);\r\n  @media (max-aspect-ratio: 4/3) {\r\n    aspect-ratio: 1/2;\r\n  }\r\n`;\r\nconst ModalTitle = styled.div`\r\n\tfont-family: Iosevka Extended Heavy;\r\n\tfont-size: calc(12px + ${({ size }) => size || 4}vh);\r\n\tcolor: ${ colors.darkgrey };\r\n\tmargin-top: 3vh;\r\n  user-select: none;\r\n`\r\n\r\nconst ModalTextButtonStyle = styled.button`\r\n  // ${({ side }) => (side == \"right\" ? `left: 40%;` : `left: 5%;`)};\r\n  // top: 100px;\r\n  background-color: ${colors.grey};\r\n  color: ${colors.darkgrey};\r\n  font-size: 1vh;\r\n  border: 4px solid ${colors.darkgrey};\r\n  aspect-ratio: 2;\r\n  font-family: Iosevka bold;\r\n  font-size: calc(12px + 1.5vw);\r\n  height: calc((12px + 1.5vw) * 1.6);\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    border: 4px solid ${colors.lightorange};\r\n  }\r\n  &:focus {\r\n    border: 4px solid ${colors.lightorange};\r\n  }\r\n`; \r\n\r\n\r\nconst ModalTextButton = (props) => {\r\n\tif (props.redirect && !props.func) {\r\n    return (\r\n      <div style={props.style}>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <Link\r\n            to={props.redirect}\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\" }}\r\n            onClick={() => {}}\r\n          >\r\n            {props.text}\r\n          </Link>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\r\n\t} else if (!props.redirect && props.func) {\r\n\t\treturn (\r\n      <div style={props.style}>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <div\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\", }}\r\n            onClick={() => props.func()}\r\n          >\r\n            {props.text}\r\n          </div>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\r\n\t} else {\r\n\t\treturn (\r\n      <div>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <div\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\" }}\r\n            onClick={() => {}}\r\n          >\r\n            {props.text}\r\n          </div>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nconst BaseModal = (props) => {\r\n\r\n    if (props.isOpen === \"true\") {\r\n        return (\r\n            <ModalBox>\r\n            <ModalTextButton text=\"Back\" side=\"left\" func={props.func}/>\r\n            </ModalBox>\r\n)\r\n    }\r\n    else {\r\n        return ( <></> )\r\n    }\r\n}\r\n\r\nexport default BaseModal;\r\nexport { ModalBox, ModalTextButton, ModalTitle, ModalTextButtonStyle };","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport { useEffect, useRef } from 'react';\r\nconst colors = require('../../../colors.json')\r\n\r\nconst DropDownStyle = styled.div`\r\n  display: inline-block;\r\n  float: left;\r\n  position: relative;\r\n  width: ${props => props.width};\r\n  text-align: center;\r\n`;\r\n\r\nconst OptionsDiv = styled.div`\r\n  position: absolute;\r\n  float: left;\r\n  width: calc(100% - ${(props) => props.size} / 8);\r\n  transform-origin: top;\r\n  transform: scaleY(${(props) => (props.isOpen ? 1 : 0)});\r\n  z-index: 2000;\r\n  border: calc(${(props) => props.size} / 16) solid ${colors.darkgrey};\r\n`;\r\n\r\nconst OptionButton = styled.button`\r\n  display: block;\r\n  padding: 0vh 0.6vw;\r\n  // margin: -0.5vw 0;\r\n  width: 100%;\r\n  border: 0px solid ${colors.darkgrey};\r\n  &:hover {\r\n    outline: calc(${(props) => props.size} / 14) solid ${colors.lightorange};\r\n    cursor: pointer;\r\n  }\r\n  &:focus {\r\n    outline: calc(${(props) => props.size} / 14) solid ${colors.midorange};\r\n  }\r\n`;\r\nconst OptionButtonText = styled.div`\r\n  font-family: Iosevka bold;\r\n  font-size: calc(${(props) => props.size} / 2.7);\r\n  transform: scale(1.3);\r\n  user-select: none;\r\n`;\r\n\r\nconst SelectedOptionButton = styled.button`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.2vh 0.6vw;\r\n  font-family: Iosevka bold;\r\n  font-size: calc(${(props) => props.size} / 2.5);\r\n  border: calc(${(props) => props.size} / 10) solid ${colors.darkgrey};\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    border: calc(${(props) => props.size} / 10) solid ${colors.lightorange};\r\n    cursor: pointer;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border: calc(${(props) => props.size} / 10) solid ${colors.midorange};\r\n    border-radius: 0;\r\n  }\r\n`;\r\n\r\nconst Option = (props) => {\r\n  return (\r\n    <OptionButton\r\n      size={props.size}\r\n      onClick={props.onClick}\r\n      onMouseDown={(event) => event.preventDefault()}\r\n    >\r\n      <OptionButtonText size={props.size}>{props.text}</OptionButtonText>\r\n    </OptionButton>\r\n  );\r\n}\r\nconst SelectedOption = (props) => {\r\n\r\n  return (\r\n    <SelectedOptionButton onClick={props.toggle} onBlur={props.setOff} size={props.size}>\r\n        {props.currentOption}\r\n    </SelectedOptionButton>\r\n  );\r\n}\r\n\r\nclass Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      defaultOption: props.default,\r\n      currentOption: props.default,\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentOption !== prevState.currentOption) {\r\n      this.props.onChange(this.state.currentOption);\r\n    }\r\n  }\r\n\r\n\r\n  setCurrent(option) {\r\n    this.setState({currentOption: option})\r\n    this.props.onChange(this.state.currentOption);\r\n    this.toggleOpen()\r\n  }\r\n  toggleOpen() {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n    if (this.state.isOpen === true) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    const options = []\r\n    this.props.options.map((opt, i) => {\r\n      if (this.state.showAllOptions && opt === this.state.currentOption) {  \r\n      } else {\r\n      options.push(\r\n        <Option\r\n          text={opt}\r\n          size={this.props.width}\r\n          key={i}\r\n          onClick={() => {\r\n            this.setCurrent(opt);\r\n            document.activeElement.blur();\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {opt}{\" \"}\r\n        </Option>\r\n      );\r\n      }\r\n    })\r\n\r\n\r\n    return (\r\n      <DropDownStyle width={this.props.width} height={this.props.height}>\r\n        <SelectedOption\r\n          size={ this.props.width }\r\n          currentOption={this.state.currentOption}\r\n          toggle={() => this.toggleOpen()}\r\n          setOFF={() => this.setState({ isOpen: false })}\r\n        />\r\n        <OptionsDiv\r\n          isOpen={this.state.isOpen}\r\n          size={ this.props.width }\r\n        >\r\n          {options}\r\n        </OptionsDiv>\r\n      </DropDownStyle>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Dropdown","import React, { Component } from 'react'\r\nimport styled from \"styled-components\"\r\nconst colors = require('../../../colors.json')\r\n\r\nconst HVButtons = styled.button`\r\n  width: ${(props) => (props.horizontal ? \"3vw\" : \"2vw\")};\r\n  height: ${(props) => (props.horizontal ? \"2vw\" : \"3vw\")};\r\n  margin: 0 0.2vw;\r\n  background-color: ${(props) =>\r\n    props.active === true ? colors.midorange : colors.lightgrey};\r\n  border: 0.4vw solid ${colors.darkgrey};\r\n\r\n  &:hover {\r\n    border: 0.4vw solid\r\n      ${(props) =>\r\n        props.active === false ? colors.lightorange : colors.darkgrey};\r\n  }\r\n    cursor: pointer;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nclass HVSelector extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      hv: \"horizontal\"\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.hv !== prevState.hv) {\r\n      this.props.onChange(this.state.hv)\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <HVButtons\r\n          active={this.state.hv === \"horizontal\"}\r\n          horizontal=\"dag\"\r\n          onClick={() => this.setState({ hv: \"horizontal\" })}\r\n        ></HVButtons>\r\n        <HVButtons\r\n          active={this.state.hv === \"vertical\"}\r\n          onClick={() => this.setState({ hv: \"vertical\" })}\r\n        ></HVButtons>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HVSelector;","import React, { Component } from 'react'\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst SVGImage = styled.img`\r\n  user-select: none;\r\n  user-drag: none;\r\n\r\n  &:hover {\r\n  cursor: pointer;\r\n  }\r\n`;\r\n\r\n\r\nclass DocTypeSelector extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      docType: props.docTypes[0]\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.docType !== prevState.docType) {\r\n      this.props.setDocType(this.state.docType)\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[0]\r\n              ? process.env.PUBLIC_URL +\r\n                \"./assets/icons/ui/regular_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL + \"./assets/icons/ui/regular_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[0] })}\r\n          style={{ width: this.props.width, gridColumn: 1 }}\r\n        />\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[1]\r\n              ? process.env.PUBLIC_URL +\r\n                \"./assets/icons/ui/infinite_scroll_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL +\r\n                \"./assets/icons/ui/infinite_scroll_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[1] })}\r\n          style={{ width: this.props.width, gridColumn: 2 }}\r\n        />\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[2]\r\n              ? process.env.PUBLIC_URL +\r\n                \"./assets/icons/ui/infinite_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL + \"./assets/icons/ui/infinite_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[2] })}\r\n          style={{ width: this.props.width, gridColumn: 3 }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocTypeSelector;","import React, {useState} from 'react'\r\nimport styled from 'styled-components';\r\nimport { ModalBox, ModalTextButton, ModalTitle } from './BaseModal'\r\nimport Dropdown from './components/DropDown';\r\nimport { useEffect } from 'react';\r\nimport HVSelector from './components/HVSelector';\r\nimport DocTypeSelector from './components/DocTypes';\r\nimport { useRef } from 'react';\r\n\r\nconst colors = require('../../colors.json')\r\n\r\n\r\nconst FilesTypesSelection = (props) => {\r\n  const docType = props.docType;\r\n  const formats = props.formats;\r\n  const orientation = props.orientation;\r\n  const svgWidth = \"18vw\";\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div style={{ display: \"grid\", width: \"100%\", justifyItems: \"center\" }}>\r\n        <DocTypeSelector\r\n          docTypes={props.docTypes}\r\n          setDocType={props.setDocType}\r\n          width={svgWidth}\r\n        />\r\n        <div style={{ position: \"relative\", width: \"60%\", gridColumn: 1 }}>\r\n          <div\r\n            style={{\r\n              float: \"left\",\r\n              transform: \"translateY(.3vw)\",\r\n              marginRight: \"0.2vw\",\r\n              fontFamily: \"Iosevka heavy\",\r\n              fontSize: \"2vw\",\r\n              color: colors.darkgrey,\r\n              userSelect: \"none\",\r\n              userDrag: \"none\",\r\n            }}\r\n          >\r\n            Din\r\n          </div>\r\n          <Dropdown\r\n            onChange={props.setFormat}\r\n            width=\"4vw\"\r\n            default={formats[0]}\r\n            options={formats}\r\n            style={{\r\n              float: \"right\",\r\n            }}\r\n          />\r\n\r\n          <HVSelector onChange={ props.setOrientation }/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ButtonContainerDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: auto;\r\n  margin-top: 2vh;\r\n  margin-bottom: 1vh;\r\n`;\r\n\r\nconst NewFileModal = (props) => {\r\n  const docTypes = [\"regular\", \"infinite-scroll\", \"infinite\"]\r\n  const formats = [\"A4\", \"A3\", \"A2\", \"A1\"]\r\n  const orientations = [\"vertical\", \"horizontal\"]\r\n  const [docType, setDocType] = useState(docTypes[0])\r\n  const [format, setFormat] = useState(formats[0])\r\n  const [orientation, setOrientation] = useState(orientations[0]);\r\n\r\n  \r\n  if (props.isOpen === \"true\") {\r\n      return (\r\n        <ModalBox style={{ overflowY: \"scroll\" }}>\r\n          <ModalTitle> Create New Document </ModalTitle>\r\n\r\n          <div\r\n            style={{\r\n              height: \"83%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              textAlign: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <FilesTypesSelection\r\n              docTypes={docTypes}\r\n              formats={formats}\r\n              orientations={orientations}\r\n              setDocType={setDocType}\r\n              setFormat={setFormat}\r\n              setOrientation={setOrientation}\r\n              modalRef\r\n            />\r\n            <ButtonContainerDiv>\r\n              <ModalTextButton\r\n                style={{ float: \"left\", transform: \"translate(1.5vw)\" }}\r\n                text=\"Back\"\r\n                side=\"left\"\r\n                func={props.func}\r\n              />\r\n              <ModalTextButton\r\n                style={{ float: \"right\", transform: \"translate(-2vw)\" }}\r\n                text=\"Create\"\r\n                side=\"right\"\r\n                redirect={props.redirect}\r\n              />\r\n            </ButtonContainerDiv>\r\n          </div>\r\n        </ModalBox>\r\n      );\r\n  }\r\n  else {\r\n      return ( <></> )\r\n  }\r\n}\r\n\r\n\r\nexport default NewFileModal;","import React from 'react'\r\nimport { ModalBox, ModalTextButton, ModalTitle } from './BaseModal'\r\n\r\nconst ImportFileModal = (props) => {\r\n    if (props.isOpen === \"true\") {\r\n        return (\r\n            <ModalBox>\r\n            <ModalTitle> Import File </ModalTitle>\r\n            <ModalTextButton text=\"Import\" redirect={props.redirect}/>\r\n            <ModalTextButton text=\"Back\" side=\"left\" func={props.func}/>\r\n            </ModalBox>\r\n        )\r\n    }\r\n    else {\r\n        return ( <></> )\r\n    }\r\n}\r\n\r\nexport default ImportFileModal;","import React from 'react'\r\nimport { ModalBox, ModalTextButton, ModalTitle } from './BaseModal'\r\n\r\nconst OpenFileModal = (props) => {\r\n    if (props.isOpen === \"true\") {\r\n        return (\r\n            <ModalBox>\r\n            <ModalTitle> Open Document </ModalTitle>\r\n            <ModalTextButton text=\"Open\" redirect={props.redirect}/>\r\n            <ModalTextButton text=\"Back\" side=\"left\" func={props.func}/>\r\n            </ModalBox>\r\n        )\r\n    }\r\n    else {\r\n        return ( <></> )\r\n    }\r\n}\r\n\r\nexport default OpenFileModal;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport HomeModal from './Modals/BaseModal';\r\nimport styled from \"styled-components\";\r\nimport { useEffect } from 'react';\r\nimport NewFileModal from './Modals/NewFileModal';\r\nimport ImportFileModal from './Modals/ImportFileModal';\r\nimport OpenFileModal from './Modals/OpenFileModal';\r\n\r\nconst Blurred = styled.div`\r\n    filter: blur(${props => props.blur === \"true\" ? \"30\" : \"0\"}px)\r\n`\r\n\r\nfunction Home(props) {\r\n    const [isOpenNew, setOpenNew] = useState(\"false\")\r\n    const [isOpenImport, setOpenImport] = useState(\"false\")\r\n    const [isOpenOpen, setOpenOpen] = useState(\"false\")\r\n    const [isOpenAny, setOpenAny] = useState(\"false\") // is any modal opened?\r\n\r\n    useEffect(() => {\r\n        if (isOpenNew === \"true\" || isOpenImport === \"true\" || isOpenOpen === \"true\") {\r\n            setOpenAny(\"true\")\r\n        } else if (isOpenNew === \"false\" && isOpenImport === \"false\" && isOpenOpen === \"false\") {\r\n            setOpenAny(\"false\")\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n        <NewFileModal isOpen={isOpenNew} redirect=\"new\" func={ () => {setOpenNew(\"false\")} }/>\r\n        <OpenFileModal isOpen={isOpenOpen} redirect=\"\" func={ () => {setOpenOpen(\"false\")} }/>\r\n        <ImportFileModal isOpen={isOpenImport} redirect=\"\" func={ () => {setOpenImport(\"false\")} }/>\r\n        <Blurred blur={isOpenAny}>\r\n            <div className=\"home\">\r\n                {/* <NewFileModal />\r\n                <OpenFileModal />\r\n                <ImportFileModal /> */}\r\n                \r\n                <div className=\"main-buttons\">\r\n                    {/* <div className=\"main-file-button\">\r\n                        <div className=\"main-file-button-top\">\r\n                            <h1> {props.title} </h1>\t\r\n                        </div>\r\n                        <div className=\"main-file-button-bottom\">\r\n                            <h3> {props.subtitle} </h3>\r\n                        </div>\r\n                    </div> */}\r\n                <MainButton title=\"New Document\" subtitle=\"fileformat\" onClick={() => { isOpenNew === \"false\" ? setOpenNew(\"true\") : setOpenNew(\"false\")} }/>\r\n                <MainButton title=\"Open\" subtitle=\"fileformat\" onClick={() => { isOpenOpen === \"false\" ? setOpenOpen(\"true\") : setOpenOpen(\"false\")} }/>\t\r\n                <MainButton title=\"Import\" subtitle=\"pdf png jgp flipchart\" onClick={() => { isOpenImport === \"false\" ? setOpenImport(\"true\") : setOpenImport(\"false\")} }/>\t\r\n                </div>\r\n                <div className=\"small-buttons\">\r\n                    <SmallButton title=\"fiel1.???\" link=\"/\" />\r\n                    <SmallButton title=\"fiel1.???\" link=\"/\" />\r\n                    <SmallButton title=\"fiel1.???\" link=\"/\" />\r\n                    <SmallButton title=\"fiel1.???\" link=\"/\" />\r\n                    <SmallButton title=\"fiel1.???\" link=\"/\" />\r\n                </div>\r\n            </div>\r\n        </Blurred>\r\n        </>\r\n\t)\t\r\n}\r\n\r\n\r\nfunction MainButton(props) {\r\n    return (\r\n        <div className=\"main-file-button\" onClick={ props.onClick }>\r\n\t\t\t<div className=\"main-file-button-top\">\r\n\t\t\t\t<h1> {props.title} </h1>\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main-file-button-bottom\">\r\n\t\t\t\t<h3> {props.subtitle} </h3>\r\n\t\t\t</div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nfunction SmallButton(props) {\r\n\treturn (\r\n\t\t<Link to={props.link} className=\"small-file-button\">\r\n\t\t\t<div className=\"small-file-button-top\">\r\n\t\t\t\t<p>||preview||</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"small-file-button-bottom\">\r\n\t\t\t\t<h3> {props.title} </h3>\r\n\t\t\t</div>\r\n\t\t</Link>\t\r\n\t);\r\n}\r\n\r\nexport default Home;","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport Canvas from \"./components/Canvas/Canvas.jsx\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport Home from './components/Home/Home';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\t<HashRouter>\r\n\t\t<div className=\"App\">\r\n\r\n\t<Switch>\r\n\t\t<Route path=\"/new\">\r\n\t\t\t<Navbar side=\"nav-bottom\"/>\r\n\t\t\t<Canvas />\r\n\t\t</Route>\r\n\t\t\r\n\t\t<Route exact path=\"/\"> // \"/\" path Route always last\r\n\t\t\t<Navbar side=\"nav-top\"/>\r\n\t\t\t<Home/>\t\r\n\t\t</Route>\r\n\t\t\r\n\t\t<Route render={() => <h1> 404 Error: Page not Found <br/> Go <Link to=\"/\"> Home </Link></h1>} />\r\n\r\n\t</Switch>\r\n\r\n\r\n\t\t</div>\r\n\t</HashRouter>\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}