{"version":3,"sources":["logo.svg","Navbar.js","components/Canvas/Artboard.js","components/Canvas/Objects/BoundingBox.js","components/Canvas/Panels/PanelComponents.js","components/Canvas/Panels/BasePanel.js","components/Canvas/Panels/Toolbox.js","components/Canvas/Objects/BasicShapes.js","components/Canvas/Objects/Paths.js","components/Canvas/Objects/Text.js","components/Canvas/Panels/ToolSettings.js","components/Canvas/Tools.js","components/Canvas/Canvas.jsx","App.js","index.js"],"names":["module","exports","NavItem","props","right","Fragment","className","to","link","title","Navbar","side","Artboard","width","height","content","bgColor","this","margin","objects","draw","bind","obj","push","objs","forEach","splice","indexOf","x","y","artMeta","getArtboardMetadata","pixelRatio","baseCoord","w","h","scrW","window","innerWidth","scrH","innerHeight","m","orient","artH","baseW","artW","baseH","context","fillStyle","fillRect","render","clearRect","canvas","drawArtboard","drawObjects","BoundingBox","xCoord","yCoord","coords","wh","endCoords","xEnd","yEnd","setCoords","setEndCoords","setWH","offset","strokeStyle","lineWidth","strokeRect","colors","require","BasePanelComponent","boundingBox","console","log","panelOffset","PanelButton","fS","grey","sS","darkgrey","lW","PanelText","text","size","fixBoundY","length","font","fillText","PanelFunctionalText","textFunc","PanelTitle","PanelTextSwitch","state","switchFill","off","on","midblue","switchDiameter","textXOffset","PanelSlider","func","undefined","sliderPosition","knobWidth","setSliderPos","xPercent","pos","beginPath","moveTo","lineTo","stroke","closePath","Panel","border","bhalf","components","panelXY","getXY","checkCollision","map","comp","handleColission","renderComponents","PanelToolButton","tool","lightgrey","activeSS","midorange","active","icon","Image","src","drawImage","Toolbox","toolManager","Math","ceil","tools","toolWidth","componenets","i","offsetX","offsetY","toolDeselect","activeTool","toolSelect","BaseShape","getCoords","getEndCoords","setBounds","moveBounds","Rectangle","fillColor","borderColor","borderWidth","mode","xOffset","yOffset","Circle","radius","Offset","arc","PI","fill","Point","Path","points","strokeWidth","strokeColor","addPoints","addPoint","determineNewBounds","p","minX","minY","maxX","maxY","point","p1","p2","deltaX","deltaY","sqrt","pow","pointsLength","pointsRemoved","pointDistance","Text","fontSize","setWidthHeight","slice","fontfamily","PanelColorButton","d","color","selectorComponent","PanelColorSelectorComponent","elementsX","diameter","round","elementsY","activeColor","subComponents","floor","setActiveColor","ToolSettingsPanel","name","toolSettings","SelectionTool","selectedObject","NaN","moving","lastPos","lastEventUp","Doc","reverse","e","type","key","removeObject","localCoords","pageX","pageY","collisionOnObjects","xDelta","yDelta","move","PencilTool","currentPath","lastPath","eventCount","pointsToAdd","lastMoveEvent","Date","inUse","addObject","cleanUp","EraserTool","getBackgroundColour","TextTool","activeObject","addText","removeLastChar","selectionT","pencilT","eraserT","textT","ToolManager","toolUse","lastObj","panel","settingsPanel","select","use","deselect","graphic","Tools","testPanel","Panels","addObjects","Canvas","canvasRef","useRef","useEffect","current","getContext","updateCanvas","toolGraphic","handleResize","handleMouseEvent","checkBoundsCollision","updateInterval","setInterval","addEventListener","document","_","clearInterval","removeEventListener","ref","id","Home","MainButton","subtitle","SmallButton","App","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa81bcd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ea09f389.svg\";","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction NavItem(props) {\r\n\tconst right = props.right;\r\n\treturn (\r\n\t<React.Fragment>\t\r\n\t\t{ right ? \r\n\t\t<li className=\"right-nav\">\r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li>\r\n\t\t:\r\n\t\t<li> \r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li> }\r\n\t</React.Fragment>\t\r\n\t)\r\n}\r\n\r\nfunction Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={props.side}>\r\n\t\t\t<ul className=\"Navbar\">\r\n\t\t\t\t<NavItem link=\"/\" title=\"Home\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document1\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document2\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document3\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Settings\" right=\"true\" />\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","class Artboard {\r\n  //\r\n  constructor(width, height, content, bgColor) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.content = content;\r\n    this.bgColor = bgColor;\r\n\r\n    this.margin = 10; // margin to be set around the artboard\r\n\r\n    // variable to store all objects in document\r\n    // objects at the end of the list are on top of the other ones --> layer system\r\n    this.objects = [];\r\n    this.draw = this.draw.bind(this);\r\n  }\r\n\r\n  addObject(obj) {\r\n    this.objects.push(obj);\r\n  }\r\n\r\n  addObjects(objs) {\r\n    objs.forEach((obj) => {\r\n      this.objects.push(obj);\r\n    });\r\n  }\r\n\r\n  removeObject(obj) {\r\n    this.objects.splice(this.objects.indexOf(obj), 1)\r\n  }\r\n\r\n  getBackgroundColour() {\r\n    return this.bgColor;\r\n  }\r\n\r\n  ratioedCoords(x, y) {\r\n    // convert canvas coordinates to artboard coordinates\r\n    //-> scaled by pixelRatio\r\n    var artMeta = this.getArtboardMetadata();\r\n    return { x: x / artMeta.pixelRatio, y: y / artMeta.pixelRatio };\r\n  }\r\n  relativeCoords(x, y) {\r\n    // converts global coordinates to ones that are relative to the artboard\r\n    //-> i.e.if coord is left of artboard relative coord is negative\r\n    var artMeta = this.getArtboardMetadata();\r\n    return { x: x - artMeta.baseCoord.w, y: y - artMeta.baseCoord.h };\r\n  }\r\n  localCoords(x, y) {\r\n    // ratioedCoords + relativeCoords\r\n    var artMeta = this.getArtboardMetadata();\r\n    return {\r\n      x: (x - artMeta.baseCoord.w) / artMeta.pixelRatio,\r\n      y: (y - artMeta.baseCoord.h) / artMeta.pixelRatio,\r\n    };\r\n  }\r\n\r\n  getArtboardMetadata() {\r\n    let scrW = window.innerWidth\r\n    let scrH = window.innerHeight\r\n    var m = this.margin * 6;\r\n\r\n    if (scrW / scrH > this.width / this.height) {\r\n      var orient = \"v\";\r\n      var artH = scrH - m;\r\n      var artW = this.width * (artH / this.height);\r\n      var baseW = (scrW - artW) / 2;\r\n      var baseH = this.margin;\r\n    } else if (scrW / scrH < this.width / this.height) {\r\n      var orient = \"h\";\r\n      var artW = scrW - m;\r\n      var artH = this.height * (artW / this.width);\r\n      var baseW = this.margin;\r\n      var baseH = (scrH - artH) / 2;\r\n    } else {\r\n      var orient = \"sq\";\r\n      if (scrW >= scrH) {\r\n        var artW = scrW - m;\r\n        var artH = this.height * (this.width / scrW);\r\n      } else {\r\n        var artH = scrH - m;\r\n        var artW = this.width * (this.height / scrH);\r\n      }\r\n    }\r\n\r\n    if (orient === \"v\") {\r\n      var pixelRatio = artW / this.width;\r\n    } else {\r\n      var pixelRatio = artH / this.height;\r\n    }\r\n\r\n    return {\r\n      width: artW,\r\n      height: artH,\r\n      orient: orient,\r\n      baseCoord: { w: baseW, h: baseH },\r\n      pixelRatio: pixelRatio,\r\n    };\r\n  }\r\n\r\n  drawArtboard(context, artMeta) {\r\n\r\n    context.fillStyle = this.bgColor;\r\n    context.fillRect(\r\n      artMeta.baseCoord.w,\r\n      artMeta.baseCoord.h,\r\n      artMeta.width,\r\n      artMeta.height\r\n    );\r\n  }\r\n\r\n  drawObjects(context, artMeta) {\r\n\r\n    this.objects.forEach((obj) => {\r\n      obj.render(context, artMeta.pixelRatio, artMeta.baseCoord);\r\n    });\r\n  }\r\n\r\n  draw(context, artMeta) {\r\n    // console.log(this.objects);\r\n    // reset canvas\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n\r\n    this.drawArtboard(context, artMeta);\r\n    this.drawObjects(context, artMeta);\r\n\r\n  }\r\n}\r\n\r\nexport default Artboard;\r\n","class BoundingBox {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    this.coords = [xCoord, yCoord];\r\n    this.wh = [width, height];\r\n    this.endCoords = [xCoord + width, yCoord + height];\r\n  }\r\n\r\n  // dont know if i actually should define basic getters and setters\r\n  getCoords() {\r\n    return this.coords;\r\n  }\r\n  setCoords(x, y) {\r\n    this.coords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getEndCoords() {\r\n    return this.endCoords;\r\n  }\r\n  setEndCoords(x, y) {\r\n    this.endCoords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getWH() {\r\n    return this.coords;\r\n  }\r\n  setWH(w, h) {\r\n    this.wh = [w, h];\r\n    //also define new endCoords values\r\n    this.endCoords = [this.coords[0] + w, this.coords[1] + h];\r\n  }\r\n\r\n  setBounds(x, y, xEnd, yEnd) {\r\n    this.setCoords(x, y);\r\n    this.setEndCoords(xEnd, yEnd);\r\n    this.setWH(this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]);\r\n  }\r\n\r\n  checkCollision(x, y) {\r\n\r\n    if (\r\n      x >= this.coords[0] &&\r\n      x <= this.endCoords[0] &&\r\n      y >= this.coords[1] &&\r\n      y <= this.endCoords[1]\r\n\r\n    ) {\r\n      // collison\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render(context, offset={x:0, y:0}, pixelRatio = 1) {\r\n    // render bounding box for testing\r\n    context.strokeStyle = \"#FF0000\"\r\n    context.lineWidth = 3\r\n\r\n    context.strokeRect(\r\n      offset.x + pixelRatio * this.coords[0],\r\n      offset.y + pixelRatio * this.coords[1],\r\n      pixelRatio * this.wh[0],\r\n      pixelRatio * this.wh[1]\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoundingBox;\r\n","import BoundingBox from \"../Objects/BoundingBox\"\r\nconst colors = require(\"../../colors.json\");\r\n\r\nclass BasePanelComponent {\r\n    constructor(x, y) {\r\n        this.coords = {x: x, y: y}\r\n\r\n        this.boundingBox = new BoundingBox(0, 0, 0, 0)\r\n    }\r\n\r\n    handleColission() {\r\n        console.log(\"clicked\", this)\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n\r\n    }\r\n}\r\n\r\nclass PanelButton extends BasePanelComponent {\r\n    constructor(x, y, w, h) {\r\n        super(x, y)\r\n\r\n        this.width = w\r\n        this.height = h\r\n        \r\n        this.fS = colors.grey\r\n        this.sS = colors.darkgrey\r\n        this.lW = 5\r\n\r\n        this.boundingBox = new BoundingBox(x, y -this.lW, w +this.lW, h +this.lW) // NOTE: this expands boundingBox by 5px for all PanelButton derivatives as well\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.fillStyle = this.fS\r\n        context.strokeStyle = this.sS\r\n        context.lineWidth = this.lW\r\n\r\n        // console.log(\r\n        //                 panelOffset.x + this.coords.x,\r\n        //     panelOffset.y + this.coords.y,\r\n        // )\r\n        context.fillRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y,\r\n            this.width,\r\n            this.height\r\n        )\r\n        context.strokeRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y,\r\n            this.width,\r\n            this.height\r\n        )\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nclass PanelText extends BasePanelComponent {\r\n    constructor(x, y, text, size=15) {\r\n        \r\n        super(x, y)\r\n        \r\n        this.text = text\r\n        // this.width = w\r\n        // this.height = h\r\n        this.height = size\r\n        this.fixBoundY = this.height * 4/5\r\n        \r\n        this.width = this.height * this.text.length/2\r\n\r\n        this.font = `${this.height}px iosevka semibold`\r\n        this.fS = colors.darkgrey\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.font = this.font\r\n        context.fillStyle = this.fS\r\n\r\n        context.fillText(this.text, panelOffset.x + this.coords.x, panelOffset.y + this.coords.y)\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nclass PanelFunctionalText extends PanelText {\r\n    constructor(x, y, textFunc, size) {\r\n        super(x, y, textFunc, size)\r\n    }\r\n    render(context, panelOffset) {\r\n    context.font = this.font\r\n    context.fillStyle = this.fS\r\n\r\n    context.fillText(this.text(), panelOffset.x + this.coords.x, panelOffset.y + this.coords.y)\r\n    // this.boundingBox.render(context, panelOffset)\r\n}\r\n}\r\n\r\nclass PanelTitle extends PanelText {\r\n    constructor(x, y, text, size=25) {\r\n        super(x, y, text, size)\r\n\r\n        this.height = size\r\n        this.fixBoundY = this.height * 4/5\r\n        \r\n        this.width = this.height * this.text.length / 2\r\n        this.font = `${this.height}px iosevka bold`\r\n\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n}\r\n\r\n\r\nclass PanelTextSwitch extends PanelText {\r\n    constructor(x, y, text) {\r\n        \r\n        super(x, y, text)\r\n\r\n        this.state = false\r\n        this.switchFill = {off: colors.grey, on: colors.midblue}\r\n        this.switchDiameter = this.height\r\n        this.textXOffset = 1.5 * this.switchDiameter\r\n        this.width = this.width + this.textXOffset\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n\r\n    handleColission() {\r\n        this.state = !this.state\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.font = this.font\r\n        context.fillStyle = this.fS\r\n\r\n        context.strokeStyle = this.fS\r\n        context.lineWidth = 3\r\n\r\n        context.fillText(\r\n            this.text,\r\n            panelOffset.x + this.coords.x + this.textXOffset,\r\n            panelOffset.y + this.coords.y\r\n        )\r\n\r\n        if (this.state) {\r\n            context.fillStyle = this.switchFill.on\r\n        } else {\r\n            context.fillStyle = this.switchFill.off\r\n        }\r\n\r\n        context.fillRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y - this.fixBoundY,\r\n            this.switchDiameter,\r\n            this.switchDiameter\r\n        )\r\n\r\n        context.strokeRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y - this.fixBoundY,\r\n            this.switchDiameter,\r\n            this.switchDiameter\r\n        )\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nclass PanelSlider extends BasePanelComponent {\r\n\r\n    constructor(x, y, w, h=28, func=undefined) {\r\n        super(x, y)\r\n\r\n        this.width = w\r\n        this.height = h\r\n\r\n        this.func = func\r\n        \r\n        this.fS = colors.darkgrey\r\n        this.sS = colors.darkgrey\r\n        this.lW = 5\r\n\r\n        this.sliderPosition = 0.5 // number 0-1 position of knob along slider\r\n        this.knobWidth = this.height/2\r\n\r\n        this.boundingBox = new BoundingBox(x, y -this.lW, w +this.lW, h +this.lW) // NOTE: this expands boundingBox by 5px for all PanelButton derivatives as well\r\n\r\n        this.setSliderPos(this.sliderPosition)\r\n    }\r\n\r\n    handleColission(x, y) {\r\n        let xPercent = (x - this.coords.x) / this.width\r\n        console.log(xPercent)\r\n        this.setSliderPos(xPercent)\r\n    }\r\n\r\n    getSliderPos() {\r\n        return this.sliderPosition\r\n    }\r\n    setSliderPos(pos) {\r\n        if (pos < 0) {\r\n            this.sliderPosition = 0\r\n        } else if (pos > 1) {\r\n            this.sliderPosition = 1\r\n        } else {\r\n            this.sliderPosition = pos\r\n        }\r\n        if (this.func) {\r\n            this.func(this.sliderPosition)\r\n        }\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.fillStyle = this.fS\r\n        context.strokeStyle = this.sS\r\n        context.lineWidth = this.lW\r\n\r\n\r\n        // \r\n        context.beginPath()\r\n        context.moveTo(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y + this.height / 2\r\n        )\r\n        context.lineTo(\r\n            panelOffset.x + this.coords.x + this.width,\r\n            panelOffset.y + this.coords.y + this.height / 2\r\n        )\r\n        context.stroke()\r\n        context.closePath()\r\n        \r\n        context.fillRect(\r\n            panelOffset.x + this.coords.x + this.sliderPosition * (this.width - this.knobWidth),\r\n            panelOffset.y + this.coords.y,\r\n            this.knobWidth,\r\n            this.height\r\n        )\r\n        context.strokeStyle = colors.grey\r\n        context.strokeRect(\r\n            panelOffset.x + this.coords.x + this.sliderPosition * (this.width - this.knobWidth),\r\n            panelOffset.y + this.coords.y,\r\n            this.knobWidth,\r\n            this.height\r\n        )\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nexport default BasePanelComponent\r\nexport { PanelButton, PanelText, PanelFunctionalText, PanelTitle, PanelTextSwitch, PanelSlider }","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport { PanelButton, PanelText, PanelTitle, PanelTextSwitch } from \"./PanelComponents\";\r\n\r\nconst colors = require(\"../../colors.json\");\r\n\r\n\r\n\r\n\r\nclass Panel {\r\n    constructor(x, y, width, height, margin, border, rightSided=false) {\r\n        this.x = x\r\n        this.y = y\r\n        this.width = width;\r\n        this.height = height;\r\n        this.margin = margin;\r\n        this.border = border\r\n        this.bhalf = this.border/2\r\n\r\n        this.components = [ ]\r\n\r\n        this.boundingBox = new BoundingBox(this.x - this.bhalf, this.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n    }\r\n    \r\n    checkBoundsCollision(x, y) { \r\n        let panelXY = this.getXY()\r\n\r\n        this.boundingBox = new BoundingBox(panelXY.x - this.bhalf, panelXY.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n        if (this.boundingBox.checkCollision(x, y)) {\r\n            this.components.map(comp => {\r\n                if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) comp.handleColission(x - panelXY.x, y - panelXY.y)\r\n            })\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n    getXY() {\r\n        // if panel x or y coords are negative, the panel is sticky towards that bottom/ right side\r\n        let x, y;\r\n\r\n        if (this.x < 0) {\r\n            x = window.innerWidth + this.x\r\n        } else x = this.x \r\n        if (this.y < 0) {\r\n            y = window.innerHeight + this.y\r\n        } else y = this.y\r\n        return {x: x, y: y}\r\n    }\r\n\r\n\r\n    renderComponents(context, panelXY) {\r\n        this.components.map(comp => {\r\n            let panelOffset = panelXY // {x: x, y: y} panel offset to \r\n            comp.render(context, panelOffset)\r\n        })\r\n    }\r\n    render(context) {\r\n        context.fillStyle = colors.grey\r\n        context.strokeStyle = colors.darkgrey\r\n        context.lineWidth = this.border\r\n\r\n        let panelXY = this.getXY()\r\n\r\n        context.fillRect(panelXY.x, panelXY.y, this.width, this.height)\r\n        context.strokeRect(panelXY.x, panelXY.y, this.width, this.height)\r\n\r\n        this.renderComponents(context, panelXY)\r\n    }\r\n}\r\n\r\n\r\nexport default Panel;","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport Panel from \"./BasePanel\";\r\nimport { PanelButton } from \"./PanelComponents\";\r\nconst colors = require(\"../../colors.json\");\r\n\r\nclass PanelToolButton extends PanelButton {\r\n  constructor(x, y, w, h, tool) {\r\n    super(x, y, w, h)\r\n\r\n    this.tool = tool\r\n    this.fS = colors.lightgrey\r\n    this.activeSS = colors.midorange\r\n    this.lW = 6\r\n  }\r\n\r\n  render(context, panelOffset, active=false) {\r\n    context.fillStyle = this.fS\r\n    context.strokeStyle = this.sS\r\n    if (active) context.strokeStyle = this.activeSS\r\n    context.lineWidth = this.lW\r\n\r\n    context.fillRect(\r\n        panelOffset.x + this.coords.x,\r\n        panelOffset.y + this.coords.y,\r\n        this.width,\r\n        this.height\r\n    )\r\n    \r\n    let icon = new Image()\r\n    icon.src = this.tool.icon\r\n    context.drawImage(\r\n      icon,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    )\r\n    \r\n    context.strokeRect(\r\n        panelOffset.x + this.coords.x,\r\n        panelOffset.y + this.coords.y,\r\n        this.width,\r\n        this.height\r\n    )\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass Toolbox extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = width/2 * Math.ceil(toolManager.tools.length / 2);\r\n    let margin = 16;\r\n    let border = 8;\r\n    \r\n    super(-150, -(70 + height), width, height, margin, border)\r\n    this.toolManager = toolManager;\r\n    \r\n    this.toolWidth = 36;\r\n    \r\n    this.componenets = []\r\n    for (let i = 0; i < this.toolManager.tools.length; i++) {\r\n      let offsetX = this.margin + (this.margin + this.toolWidth) * (i % 2);\r\n      let offsetY = this.margin + (this.margin + this.toolWidth) * Math.ceil((i + 0.5) / 2 - 1);\r\n      this.components.push(new PanelToolButton(offsetX, offsetY, this.toolWidth, this.toolWidth, this.toolManager.tools[i]))\r\n    }\r\n  }\r\n\r\n  handleColission(tool) {\r\n    this.toolManager.toolDeselect()\r\n    this.toolManager.activeTool = tool\r\n    this.toolManager.toolSelect()\r\n  }\r\n\r\n\r\n  checkBoundsCollision(x, y) { \r\n      let panelXY = this.getXY()\r\n\r\n      this.boundingBox = new BoundingBox(panelXY.x - this.bhalf, panelXY.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n      if (this.boundingBox.checkCollision(x, y)) {\r\n          this.components.map(comp => {\r\n              if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) this.handleColission(comp.tool)\r\n          })\r\n          return true\r\n      }\r\n      return false\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    let panelOffset = panelXY // {x: x, y: y} panel offset to \r\n    this.components.map(comp => {\r\n\r\n      let active = false\r\n      if (comp.tool === this.toolManager.activeTool) active = true // if tool is the active tool it needs to rendered distictively\r\n    \r\n      comp.render(context, panelOffset, active)\r\n    })\r\n  }\r\n}\r\n\r\nexport default Toolbox;\r\n","import BoundingBox from \"./BoundingBox\";\r\n\r\nclass BaseShape {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    // every object inherits a boundingbox\r\n    this.boundingBox = new BoundingBox(xCoord, yCoord, width, height);\r\n\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n  }\r\n  moveBounds(x, y) {\r\n    let coords = this.boundingBox.getCoords()\r\n    let endCoords = this.boundingBox.getEndCoords()\r\n\r\n    this.boundingBox.setBounds(coords[0] + x, coords[1] + y, endCoords[0] + x, endCoords[1] + y)\r\n  }\r\n  move(x, y) {\r\n    this.moveBounds(x, y)\r\n\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n  }\r\n\r\n  render() { }\r\n}\r\n\r\nclass Rectangle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    width,\r\n    height,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n    super(xCoord, yCoord, width, height);\r\n\r\n    if (mode === \"centered\") {\r\n      this.xOffset = -width / 2;\r\n      this.yOffset = -height / 2;\r\n    } else {\r\n      this.xOffset = 0;\r\n      this.yOffset = 0;\r\n    }\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.fillRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * this.width,\r\n      pixelRatio * this.height\r\n    );\r\n    context.strokeRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * this.width,\r\n      pixelRatio * this.height\r\n    );\r\n  }\r\n}\r\n\r\nclass Circle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    radius,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = \"centered\" // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n    super(xCoord, yCoord, radius*2, radius*2);\r\n\r\n    if (mode === \"centered\") {\r\n      this.Offset = 0;\r\n    } else {\r\n      this.Offset = radius;\r\n    }\r\n\r\n    this.radius = radius;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.beginPath();\r\n    context.arc(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.Offset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.Offset),\r\n      this.radius * pixelRatio,\r\n      0 * Math.PI, // starting point\r\n      2 * Math.PI // end point -> 2pi=360°\r\n    );\r\n    context.fill();\r\n    if (this.borderWidth > 0) context.stroke();\r\n\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nclass Triangle extends BaseShape {}\r\n\r\nexport default BaseShape;\r\nexport { Rectangle, Circle, Triangle };\r\n","import BaseShape from \"./BasicShapes\";\r\n\r\nfunction Point(x, y) {\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\n// TODO: smoothed paths: quadratic curves\r\nclass Path extends BaseShape {\r\n  constructor(points = [], strokeWidth = 10, strokeColor = \"#0D79F2\") {\r\n    super(0, 0, 0, 0);\r\n\r\n    this.points = []; // ...splits x and y into separate parameters\r\n    this.addPoints(points);\r\n\r\n    this.strokeWidth = strokeWidth;\r\n    this.strokeColor = strokeColor;\r\n\r\n    this.addPoint = this.addPoint.bind(this);\r\n    this.addPoints = this.addPoint.bind(this);\r\n  }\r\n\r\n  addPoint(x, y) {\r\n    this.points.push(new Point(x, y));\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n  addPoints(points) {\r\n    points.forEach((p) => {\r\n      this.points.push(new Point(p[0], p[1]));\r\n    });\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n\r\n  }\r\n\r\n  determineNewBounds() {\r\n    // determine min and mix coordinates for selecting boundingBox\r\n    let minX = this.points[0].x;\r\n    let minY = this.points[0].y;\r\n    let maxX = this.points[0].x;\r\n    let maxY = this.points[0].y;\r\n    this.points.map(point => {\r\n      if (point.x < minX) minX = point.x;\r\n      if (point.y < minY) minY = point.y;\r\n      if (point.x > maxX) maxX = point.x;\r\n      if (point.y > maxY) maxY = point.y;\r\n    }) \r\n    return [\r\n      minX, minY,\r\n      maxX, maxY,\r\n    ];\r\n  }\r\n\r\n  // TODO: move Method for Path Objects \r\n  move(x, y) {\r\n    this.points.map(point => {\r\n      point.x += x\r\n      point.y += y\r\n    })\r\n    \r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n\r\n  pointDistance(p1, p2) {\r\n    let deltaX = p1.x - p2.x \r\n    let deltaY = p1.y - p2.y\r\n    let dist = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2))\r\n    return dist\r\n  }\r\n  cleanUp() {\r\n    // remove points from path that are too close together, therefore enforce straighter, cleaner lines \r\n    var pointsAmount = 5\r\n    var pointsLength = this.points.length\r\n    var pointsRemoved = 0;\r\n    var distCutoff = 3\r\n\r\n\r\n    for (let i = 1; i < this.points.length; i++) {\r\n      if (this.pointDistance(this.points[i - 1], this.points[i]) < distCutoff) {\r\n\r\n        if (i < this.points.length - pointsAmount) {\r\n          pointsRemoved += pointsAmount\r\n          this.points.splice(i, pointsAmount)\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(`[path cleanup] ${pointsRemoved} points removed of ${pointsLength}` )\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.lineWidth = pixelRatio * this.strokeWidth;\r\n    context.strokeStyle = this.strokeColor;\r\n\r\n    context.beginPath();\r\n    this.points.forEach((p) => {\r\n      context.lineTo(\r\n        baseCoord.w + pixelRatio * p.x,\r\n        baseCoord.h + pixelRatio * p.y\r\n      );\r\n    });\r\n    context.stroke();\r\n    context.closePath();\r\n\r\n    // context.beginPath();\r\n    // context.strokeStyle = \"#00FF00\";\r\n    // context.moveTo(baseCoord.w + pixelRatio * this.points[0].x, baseCoord.h + pixelRatio * this.points[0].y)\r\n    // for (var i = 1; i < this.points.length; i ++)\r\n    // {\r\n    //   var controlX = (baseCoord.w + pixelRatio * this.points[i - 1].x + baseCoord.w + pixelRatio * this.points[i].x) / 2;\r\n    //   var controlY = (baseCoord.h + pixelRatio * this.points[i - 1].y + baseCoord.h + pixelRatio * this.points[i].y) / 2;\r\n    //   context.quadraticCurveTo(\r\n    //     baseCoord.w + pixelRatio * this.points[i].x,\r\n    //     baseCoord.h + pixelRatio * this.points[i].y,\r\n    //     controlX,\r\n    //     controlY\r\n    //   );\r\n    // }\r\n    \r\n    // context.stroke();\r\n    // context.closePath();\r\n\r\n    // show points\r\n    // this.points.forEach((p) => {\r\n    //   context.fillRect(\r\n    //     baseCoord.w + pixelRatio * p.x,\r\n    //     baseCoord.h + pixelRatio * p.y,\r\n    //     7,\r\n    //     7\r\n    //   )\r\n    // });\r\n  }\r\n}\r\n\r\nexport default Path;\r\n","import BaseShape from \"./BasicShapes\";\r\nimport BoundingBox from \"./BoundingBox\";\r\n\r\n\r\nclass Text extends BaseShape {\r\n    constructor(x, y, text = \"\", font = \"Iosevka Bold\", fontSize = 100, fillStyle = \"#393939\") {\r\n        super(x, y, 0, 0)\r\n        this.text = text\r\n        this.font = font\r\n        this.fontSize = fontSize\r\n        this.fillStyle = fillStyle\r\n\r\n        this.setWidthHeight()\r\n\r\n        this.setBounds(x, y)\r\n    }\r\n\r\n    setBounds(x=this.xCoord, y=this.yCoord) {\r\n        this.boundingBox.setBounds(x, y - this.height, x + this.width, y)\r\n    }\r\n\r\n    move(x, y) {\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n    this.setBounds(this.xCoord, this.yCoord)\r\n\r\n    }\r\n\r\n\r\n    setWidthHeight() {\r\n        this.width = this.text.length * this.fontSize / 2\r\n        this.height = this.fontSize\r\n    }\r\n\r\n    setText(text) {\r\n        this.text = text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    addText(text) {\r\n        this.text += text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    removeLastChar() {\r\n        this.text = this.text.slice(0, -1)\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    clearText() {\r\n        this.text = \"\"\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n\r\n\r\n    setFont(fontfamily) {\r\n        this.font = fontfamily\r\n    }\r\n    setFontSize(fontSize) {\r\n        this.fontSize = fontSize\r\n    }\r\n\r\n    render(context, pixelRatio, baseCoord) {\r\n        context.font = `${this.fontSize * pixelRatio}px ${this.font}` // i.e. 30px iosevka demibold\r\n        context.fillStyle = this.fillStyle\r\n\r\n        context.fillText(\r\n            this.text,\r\n            baseCoord.w + pixelRatio * this.xCoord,\r\n            baseCoord.h + pixelRatio * this.yCoord\r\n        )\r\n\r\n        // this.boundingBox.render(context, {x : baseCoord.w, y: baseCoord.h}, pixelRatio)\r\n    }\r\n\r\n}\r\n\r\nexport default Text","import Panel from './BasePanel';\r\nimport BoundingBox from './../Objects/BoundingBox';\r\nimport BasePanelComponent, { PanelButton, PanelFunctionalText, PanelSlider, PanelText, PanelTitle } from \"./PanelComponents\"\r\nimport { selectionT, pencilT, eraserT, textT } from '../Tools';\r\nconst colors = require(\"../../colors.json\")\r\n\r\n\r\nclass PanelColorButton extends PanelButton {\r\n  constructor(x, y, d, color, selectorComponent) {\r\n    super(x, y, d, d)\r\n  \r\n    this.fS = color\r\n    this.sS = colors.darkgrey\r\n    this.lW = 3\r\n\r\n    this.selectorComponent = selectorComponent\r\n  }\r\n}\r\n\r\nclass PanelColorSelectorComponent extends BasePanelComponent {\r\n  constructor(x, y, elementsX, diameter = 10, toolManager) {\r\n    let colors = [\r\n      \"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\",\r\n      \"#FF8000\", \"#FF0080\", \"#FF8080\",\r\n      \"#80FF00\", \"#00FF80\", \"#80FF80\",\r\n      \"#8000FF\", \"#0080FF\", \"#8080FF\",\r\n      \"#FFFFFF\", \"#BFBFBF\", \"#808080\", \"#404040\", \"#000000\"\r\n    ]\r\n\r\n    let margin = Math.round(diameter / 5 * 2)\r\n    let elementsY = Math.ceil(colors.length/elementsX)\r\n    let w = margin + elementsX * (margin + diameter)\r\n    let h = margin + elementsY * (margin + diameter)\r\n    super(x, y, w, h)\r\n\r\n    this.margin = margin\r\n    this.elementsX = elementsX\r\n    this.elementsY = elementsY\r\n    this.diameter = diameter\r\n\r\n    this.colors = colors\r\n    this.activeColor = colors[0]\r\n\r\n    this.toolManager = toolManager\r\n\r\n    this.boundingBox = new BoundingBox(x, y, w, h)\r\n   \r\n    this.subComponents = [new PanelColorButton(\r\n      this.coords.x + this.margin,\r\n      this.coords.y + this.margin + this.elementsY * (margin + diameter),\r\n      this.diameter * 2,\r\n      this.toolManager,\r\n      this\r\n    )]\r\n    for (let i = 0; i < colors.length; i++) {\r\n      this.subComponents.push(\r\n        new PanelColorButton(\r\n          this.coords.x + this.margin + i % this.elementsX * (margin + diameter),\r\n          this.coords.y + this.margin + Math.floor(i / this.elementsX) * (margin + diameter),\r\n          this.diameter,\r\n          this.colors[i],\r\n          this\r\n        )\r\n      ) \r\n    }\r\n\r\n    this.setActiveColor()\r\n  }\r\n\r\n  setActiveColor() {\r\n    console.log(\"a\")\r\n    this.subComponents[0].fS = this.activeColor\r\n    this.toolManager.strokeStyle = this.activeColor\r\n  }\r\n  getActiveColor() {\r\n    return this.activeColor\r\n  }\r\n\r\n  handleColission(x, y) {\r\n    this.subComponents.map(comp => {\r\n      if (comp.boundingBox.checkCollision(x, y)) {\r\n        this.activeColor = comp.fS\r\n\r\n        this.setActiveColor()\r\n        return comp\r\n      }\r\n    })\r\n  }\r\n\r\n  renderComponents(context, panelOffset) {\r\n    this.subComponents.map(comp => {\r\n      comp.render(context, panelOffset)\r\n    })\r\n  }\r\n  render(context, panelOffset) {\r\n    this.renderComponents(context, panelOffset)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ToolSettingsPanel extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = 160;\r\n    let margin = 16;\r\n    let border = 8;\r\n    \r\n    super(-280, -(70 + height), width, height, margin, border)\r\n    this.toolManager = toolManager;\r\n    \r\n    this.components = [\r\n      new PanelTitle(5, 20, \"Tool Settings\", 17),\r\n      new PanelFunctionalText(6, 32, () => {\r\n        return \"->\"+this.toolManager.activeTool.name\r\n      }, 12)]\r\n    this.toolSettings = {\r\n      \"select\": {\r\n        components: [\r\n\r\n         ], size: {height: 160}},\r\n      \"pencil\": {components: [\r\n        new PanelColorSelectorComponent(4, 35, 5, 15, this.toolManager),\r\n        new PanelText(10, 176, \"Line Width\", 13),\r\n        new PanelSlider(10, 180, 100, 20, (pos) => {this.toolManager.strokeWidth = pos * 40})\r\n      ], size: { height: 210 }\r\n      },\r\n      \"eraser\": {\r\n        components: [\r\n        new PanelText(10, 56, \"Line Width\", 13),\r\n        new PanelSlider(10, 60, 100, 20, (pos) => {this.toolManager.strokeWidth = pos * 40})\r\n      ], size: {height: 160}},\r\n      \"text\": {\r\n        components: [\r\n        new PanelText(10, 56, \"Font Size\", 13),\r\n        new PanelSlider(10, 60, 100, 20, (pos) => { this.toolManager.fontSize = pos * 250 })\r\n        ], size: { height: 160 }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  checkBoundsCollision(x, y) { \r\n    let panelXY = this.getXY()\r\n    this.boundingBox = new BoundingBox(panelXY.x - this.bhalf, panelXY.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n    \r\n    if (this.boundingBox.checkCollision(x, y)) {\r\n      let components = [...this.components, ...this.toolSettings[this.toolManager.activeTool.name].components]\r\n\r\n      components.map(comp => {\r\n        if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) {\r\n          comp.handleColission(x - panelXY.x, y - panelXY.y)\r\n        }\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n    \r\n  renderComponents(context, panelXY) {\r\n    let panelOffset = panelXY // {x: x, y: y} panel offset to \r\n\r\n    let components = [...(this.components), ...this.toolSettings[this.toolManager.activeTool.name].components] // list of all components\r\n    components.map(comp => {\r\n      let active = false\r\n    if (comp.tool === this.toolManager.activeTool) active = true // if tool is the active tool it needs to rendered distictively\r\n  \r\n      comp.render(context, panelOffset, active)\r\n  })\r\n  }\r\n\r\n\r\n  render(context) {\r\n    this.height = this.toolSettings[this.toolManager.activeTool.name].size.height\r\n    this.y = -(70 + this.height)\r\n\r\n    context.fillStyle = colors.grey\r\n    context.strokeStyle = colors.darkgrey\r\n    context.lineWidth = this.border\r\n\r\n    let panelXY = this.getXY()\r\n\r\n    context.fillRect(panelXY.x, panelXY.y, this.width, this.height)\r\n    context.strokeRect(panelXY.x, panelXY.y, this.width, this.height)\r\n\r\n    this.renderComponents(context, panelXY)\r\n  }\r\n}\r\n\r\nexport default ToolSettingsPanel;","import Toolbox from \"./Panels/Toolbox\";\r\nimport { Circle, Rectangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport colors from \"../colors.json\"\r\nimport Text from \"./Objects/Text\";\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport ToolSettingsPanel from './Panels/ToolSettings';\r\n\r\n\r\nlet toolSettingsPanel = new Panel()\r\n\r\n\r\n// function object\r\nclass SelectionTool {\r\n  constructor() {\r\n    this.selectedObject = NaN;\r\n    this.moving = false\r\n    this.lastPos = { x: NaN, y: NaN }\r\n    \r\n    this.lastEventUp = false // was last event mouseup -> next click event can be ignored\r\n\r\n    this.name = \"select\"\r\n    this.icon = \"assets/icons/tools/select.png\"\r\n  }\r\n\r\n  collisionOnObjects(coords, Doc) {\r\n    let objects = Doc.objects.slice(0).reverse() // create reveresed copy of objects list\r\n    let pixelRatio = Doc.getArtboardMetadata().pixelRatio\r\n\r\n    for (var i = 0; i < objects.length; i++) {\r\n      let obj = objects[i]\r\n\r\n      if (obj.boundingBox.checkCollision(coords.x, coords.y, pixelRatio)) {\r\n        return obj\r\n      }\r\n      \r\n    }\r\n    return false\r\n  }\r\n\r\n  select(obj) {\r\n    this.selectedObject = obj\r\n   }\r\n  \r\n  use(e, Doc) {\r\n    if (this.selectedObject && e.type === \"keydown\" && e.key === \"Delete\") {\r\n      Doc.removeObject(this.selectedObject)\r\n      this.selectedObject = NaN\r\n      this.moving = false\r\n    }\r\n\r\n    if (this.lastEventUp && e.type === \"click\") {\r\n      return\r\n    } // if last event was mouseup mouse move has just finished and therefore a click at the position of mouseup is not needed\r\n    this.lastEventUp = false\r\n\r\n\r\n    let coords = Doc.localCoords(\r\n    e.pageX,\r\n    e.pageY,\r\n    window.innerWidth,\r\n    window.innerHeight\r\n    );\r\n    if (e.type === \"click\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, Doc)\r\n\r\n    } else if (e.type === \"mousedown\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, Doc)\r\n      if (this.selectedObject) {\r\n        this.moving = true\r\n      }\r\n      \r\n      this.lastPos.x = coords.x\r\n      this.lastPos.y = coords.y\r\n      \r\n\r\n    } else if (this.moving && e.type === \"mousemove\") {\r\n      let xDelta = coords.x - this.lastPos.x\r\n      let yDelta = coords.y - this.lastPos.y\r\n\r\n      this.selectedObject.move(xDelta, yDelta)\r\n\r\n      this.lastPos.x = coords.x\r\n      this.lastPos.y = coords.y\r\n\r\n\r\n    } else if (this.selectedObject && e.type === \"mouseup\") {\r\n      this.moving = false\r\n      this.lastEventUp = true\r\n   }\r\n\r\n  }\r\n\r\n  deselect() { \r\n    return this.selectedObject\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.selectedObject) {\r\n      let x = this.selectedObject.boundingBox.coords[0]\r\n      let y = this.selectedObject.boundingBox.coords[1]\r\n      let w = this.selectedObject.boundingBox.wh[0]\r\n      let h = this.selectedObject.boundingBox.wh[1]\r\n\r\n      let pixelRatio = artMeta.pixelRatio\r\n      let baseCoord = artMeta.baseCoord\r\n      \r\n      let offset = 32\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = colors.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset*2),\r\n        pixelRatio * (h + offset*2)\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nclass PencilTool {\r\n  constructor() {\r\n    this.currentPath = NaN;\r\n    this.lastPath = NaN\r\n    this.eventCount = 0;\r\n    this.pointsToAdd = [];\r\n    this.lastMoveEvent = new Date();\r\n\r\n    this.toolManager = undefined\r\n\r\n    this.name = \"pencil\"\r\n    // this.use = this.use.bind(this);\r\n    this.icon = \"assets/icons/tools/pencil.png\"\r\n  }\r\n\r\n  select(obj) { \r\n  }\r\n  \r\n  use(e, Doc) {\r\n    this.eventCount += 1;\r\n    \r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n    if (e.type === \"mousedown\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        this.toolManager.strokeWidth,\r\n        this.toolManager.strokeStyle\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n\r\n    } else if (this.inUse && e.type === \"mousemove\") {\r\n      this.currentPath.addPoint(coords.x, coords.y);\r\n      // this.currentPath.cleanUp()\r\n\r\n    } else if (this.inUse && e.type === \"mouseup\") {\r\n      this.currentPath.addPoints(coords.x, coords.y);\r\n      this.currentPath.cleanUp()\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.lastPath = this.currentPath\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n\r\n  deselect() { \r\n    return this.lastPath\r\n  }\r\n  \r\n  graphic(context, artMeta) {}\r\n}\r\n\r\nclass EraserTool extends PencilTool {\r\n  constructor() {\r\n    super();\r\n\r\n    this.toolManager = undefined\r\n\r\n    this.name = \"eraser\"\r\n    this.icon = \"assets/icons/tools/pen.png\"\r\n  }\r\n  use(e, Doc) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n\r\n    if (e.type === \"mousedown\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0)); //colour --> getBackgroundColour Artboard Class\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        this.toolManager.strokeWidth,\r\n        Doc.getBackgroundColour()\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n    } else if(this.inUse && e.type === \"mousemove\") {\r\n      this.currentPath.addPoint(coords.x,coords.y);\r\n    } else if(this.inUse && e.type === \"mouseup\") {\r\n      this.currentPath.addPoints(coords.x,coords.y);\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n}\r\n\r\nclass TextTool {\r\n  constructor() {\r\n    this.activeObject = NaN;\r\n\r\n    this.toolManager = undefined\r\n\r\n    this.name = \"text\"\r\n    this.icon = \"assets/icons/tools/select.png\"\r\n  }\r\n\r\n  select(obj) {\r\n    if (obj instanceof Text) {\r\n      this.activeObject = obj\r\n    }\r\n   }\r\n  \r\n  use(e, Doc) {\r\n\r\n    let coords = Doc.localCoords(\r\n    e.pageX,\r\n    e.pageY,\r\n    window.innerWidth,\r\n    window.innerHeight\r\n    );\r\n\r\n    if (e.type === \"click\") {\r\n      this.activeObject = new Text(coords.x, coords.y, \"\", this.toolManager.font, this.toolManager.fontSize)\r\n\r\n    } else if (e.type === \"mousedown\") {\r\n      this.activeObject = new Text(coords.x, coords.y, \"\", this.toolManager.font, this.toolManager.fontSize)\r\n      Doc.objects.push(this.activeObject)\r\n    } else if (this.activeObject && e.type === \"keypress\") {\r\n      this.activeObject.addText(e.key)\r\n    } else if (this.activeObject && e.type === \"keydown\") {\r\n      \r\n      if (e.key === \"Escape\") {\r\n        this.activeObject = NaN\r\n      } else if (e.key === \"Backspace\") {\r\n        this.activeObject.removeLastChar()\r\n      }\r\n      \r\n    }    \r\n\r\n    if (this.activeObject) {\r\n      this.activeObject.fontSize = this.toolManager.fontSize\r\n      this.activeObject.setWidthHeight()\r\n      this.activeObject.setBounds()\r\n    }\r\n  }\r\n\r\n  deselect() { \r\n    return this.activeObject\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.activeObject) {\r\n      let x = this.activeObject.boundingBox.coords[0]\r\n      let y = this.activeObject.boundingBox.coords[1]\r\n      let w = this.activeObject.boundingBox.wh[0]\r\n      let h = this.activeObject.boundingBox.wh[1]\r\n\r\n      let pixelRatio = artMeta.pixelRatio\r\n      let baseCoord = artMeta.baseCoord\r\n      \r\n      let offset = 32\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = colors.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset * 2) + 10,\r\n        pixelRatio * (h + offset * 2)\r\n      );\r\n\r\n      // text cursor\r\n      context.fillRect(\r\n        baseCoord.w + pixelRatio * (this.activeObject.xCoord + this.activeObject.width) +4,\r\n        baseCoord.h + pixelRatio * (this.activeObject.yCoord - this.activeObject.height),\r\n        3,\r\n        pixelRatio * this.activeObject.height\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n\r\nvar selectionT = new SelectionTool()\r\nvar pencilT = new PencilTool()\r\nvar eraserT = new EraserTool()\r\nvar textT = new TextTool()\r\n\r\nclass ToolManager {\r\n  constructor(Doc) {\r\n    this.Doc = Doc;\r\n    this.tools = [];\r\n    this.tools.push(selectionT, pencilT, eraserT, textT);\r\n    this.toolUse = this.toolUse.bind(this);\r\n    this.activeTool = this.tools[0];\r\n    this.strokeWidth = 10;\r\n    this.strokeStyle = \"#111111\";\r\n    this.font = \"Iosevka bold\"\r\n    this.fontSize = 100\r\n\r\n    this.lastObj = NaN\r\n\r\n    pencilT.toolManager = this\r\n    eraserT.toolManager = this\r\n    textT.toolManager = this\r\n\r\n    this.panel = new Toolbox(this);\r\n    this.settingsPanel = new ToolSettingsPanel(this);\r\n  }\r\n\r\n  toolSelect() {\r\n    this.activeTool.select(this.lastObj);\r\n  }\r\n  toolUse(e) {\r\n    this.activeTool.use(e, this.Doc);\r\n  }\r\n  toolDeselect() {\r\n    this.lastObj = this.activeTool.deselect();\r\n  }\r\n\r\n  toolGraphic(context, artMeta) {\r\n    // function to display tool related graphics on redraw; i.e. selection box if selection tool is this.activeTool\r\n    this.activeTool.graphic(context, artMeta)\r\n  }\r\n\r\n}\r\n\r\nexport default ToolManager;\r\nexport { selectionT, pencilT, eraserT, textT };\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Artboard from \"./Artboard\";\r\nimport ToolManager from \"./Tools\";\r\nimport { Circle, Rectangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport Text from \"./Objects/Text\"\r\n\r\nimport \"./Canvas.css\";\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport SettingsToolPanel from \"./Panels/ToolSettings\"\r\nimport { PanelButton, PanelSlider, PanelText, PanelTextSwitch, PanelTitle } from \"./Panels/PanelComponents\";\r\n\r\n// simport { ipcRenderer } from \"electron\";\r\n// const app = require(\"electron\").remote.app;\r\nconst appColors = require(\"../colors.json\");\r\n\r\nvar FPS = 120\r\n\r\n\r\nvar Doc = new Artboard(2100, 2970, [], \"#dddddd\");\r\nvar Tools = new ToolManager(Doc);\r\nvar useTool = Tools.toolUse; //create object bound function - when passing functions to other functions the this is lost\r\n\r\n// testing panels\r\nvar testPanel = new Panel(20, -350, 200, 300, 16, 8)\r\ntestPanel.components = [new PanelButton( 20, 100, 20, 20 ), new PanelTitle( 20, 30, \"Test\" ), new PanelText( 20, 50, \"testing testing please\" ), new PanelTextSwitch( 20, 80, \"testing\" ), new PanelSlider(15, 130, 170)]\r\nvar Panels = [Tools.panel, Tools.settingsPanel, testPanel]\r\nconsole.log(Panels)\r\n\r\n// var Panels = [Tools.panel] // actual panels\r\n\r\n\r\n\r\nDoc.addObjects([\r\n  new Rectangle(200, 200, 1200, 600, \"#FF0000\"),\r\n  new Rectangle(0, 0, 100, 100, \"#00DD00\"),\r\n  new Rectangle(1600, 2200, 400, 600, \"#3333FF\"),\r\n  new Rectangle(1000, 1000, 300, 300, \"#DD0066\"),\r\n  new Circle(1000, 1000, 300, \"#DD00DD\", \"#DD00DD\", false, null),\r\n  new Path([\r\n    [0, 100],\r\n    [500, 2970],\r\n    [1000, 100],\r\n  ]),\r\n  new Text(350, 1200, \"lalala\", \"Iosevka bold\")\r\n]);\r\n\r\nconst Canvas = (props) => {\r\n\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  \r\n  // runs after every page render -> checks for events\r\n  useEffect(() => {\r\n    // get canvas Context\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    \r\n    \r\n    function updateCanvas() {\r\n      var artMeta = Doc.getArtboardMetadata();\r\n      Doc.draw(context, artMeta);\r\n      Tools.toolGraphic(context, artMeta)\r\n\r\n      // show panels\r\n      Panels.map(panel => {\r\n        panel.render(context)\r\n      })\r\n    }\r\n\r\n\r\n    function handleResize() {\r\n      // TODO: limit the amount of resizes for performace purposes\r\n\r\n      //setMaximized({\r\n      //maximized: window.isMaximized()\r\n      //})\r\n\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      updateCanvas()\r\n    }\r\n\r\n    let lastEventType = undefined\r\n    let beforeMouseMove = undefined\r\n    function handleMouseEvent(e) {\r\n\r\n      if (e.type === \"click\") { // ignore click event after mouseup as click is always raised after holding mouse down\r\n        lastEventType = e.type\r\n        return\r\n      }\r\n      lastEventType = e.type\r\n\r\n      // if (e.type !== \"mousemove\") { beforeMouseMove = e.type }\r\n      // || (beforeMouseMove === \"mousedown\" && e.type === \"mousemove\")\r\n      // TODO: enable smooth dragging of slider panel component  with code above, without interrupting tool use/ changing panel settings\r\n\r\n      // check click / mousedown collision with panels\r\n      if (e.type === \"click\" || e.type === \"mousedown\") { \r\n        for (let i = 0; i < Panels.length; i++) {\r\n          let panel = Panels[i]\r\n          if (panel.checkBoundsCollision(e.pageX, e.pageY)) {\r\n            return\r\n          }\r\n        }\r\n      } \r\n      Tools.toolUse(e)\r\n    }\r\n\r\n    // ipcRenderer.Renderer.on(\"resize\", (e, name) => {\r\n    //   console.log(name, e);\r\n    //   handleResize();\r\n    // });\r\n\r\n    let updateInterval = setInterval(updateCanvas, 1000/FPS)\r\n\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    canvas.addEventListener(\"click\", handleMouseEvent);\r\n    canvas.addEventListener(\"mousedown\", handleMouseEvent);\r\n    canvas.addEventListener(\"mouseup\", handleMouseEvent);\r\n    canvas.addEventListener(\"mousemove\", handleMouseEvent);\r\n    document.addEventListener(\"keypress\", handleMouseEvent)\r\n    document.addEventListener(\"keydown\", handleMouseEvent)\r\n\r\n    // window.addEventListener(\"maximize\", handleResize);\r\n    return (_) => {\r\n      clearInterval(updateInterval)\r\n\r\n\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      canvas.removeEventListener(\"click\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mousedown\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mouseup\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mousemove\", handleMouseEvent);\r\n      document.addEventListener(\"keypress\", handleMouseEvent)\r\n      document.addEventListener(\"keydown\", handleMouseEvent)\r\n\r\n      //window.addEventListener(\"maximize\", handleResize);\r\n      // clean up: remove listener to avoid memory leak by making sure there is always only one listener (every time the useEffect is called because of a resize event, a nev listener would be created)\r\n      // useEffect executes function on update of the canvas\r\n      // second arguement([]): all items to be watched for changes, which result in recurring execution of the useEffect callback\r\n    };\r\n  });\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={window.innerWidth}\r\n      height={window.innerHeight}\r\n      id=\"theCanvas\"\r\n    >\r\n      {\" \"}\r\n    </canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Navbar.js\";\r\nimport Canvas from \"./components/Canvas/Canvas.jsx\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\t<HashRouter>\r\n\t\t<div className=\"App\">\r\n\r\n\t<Switch>\r\n\t\t<Route path=\"/new\">\r\n\t\t\t<Navbar side=\"nav-bottom\"/>\r\n\t\t\t<Canvas />\r\n\t\t</Route>\r\n\t\t\r\n\t\t<Route exact path=\"/\"> // \"/\" path Route always last\r\n\t\t\t<Navbar side=\"nav-top\"/>\r\n\t\t\t<Home/>\t\r\n\t\t</Route>\r\n\t\t\r\n\t\t<Route render={() => <h1> 404 Error: Page not Found <br/> Go <Link to=\"/\"> Home </Link></h1>} />\r\n\r\n\t</Switch>\r\n\r\n\r\n\t\t</div>\r\n\t</HashRouter>\r\n\t);\r\n}\r\n\r\n\r\nfunction Home(props) {\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<div className=\"main-buttons\">\r\n\t\t\t\t<MainButton title=\"New Document\" subtitle=\"fileformat\" link=\"new\" />\t\r\n\t\t\t\t<MainButton title=\"Import\" subtitle=\"pdf png jgp flipchart\" link=\"doc/\"/>\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"small-buttons\">\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\t\r\n}\r\n\r\n\r\nfunction MainButton(props) {\r\n\treturn (\r\n\t\t<Link to={props.link} className=\"main-file-button\">\r\n\t\t\t<div className=\"main-file-button-top\">\r\n\t\t\t\t<h1> {props.title} </h1>\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main-file-button-bottom\">\r\n\t\t\t\t<h3> {props.subtitle} </h3>\r\n\t\t\t</div>\r\n\t\t</Link>\t\r\n\t);\r\n}\r\n\r\nfunction SmallButton(props) {\r\n\treturn (\r\n\t\t<Link to={props.link} className=\"small-file-button\">\r\n\t\t\t<div className=\"small-file-button-top\">\r\n\t\t\t\t<p>||preview||</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"small-file-button-bottom\">\r\n\t\t\t\t<h3> {props.title} </h3>\r\n\t\t\t</div>\r\n\t\t</Link>\t\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}