{"version":3,"sources":["logo.svg","Navbar.js","components/Canvas/Artboard.js","components/Canvas/Objects/BoundingBox.js","components/Canvas/Panels/PanelComponents.js","components/Canvas/Panels/BasePanel.js","components/Canvas/Panels/Toolbox.js","components/Canvas/Objects/BasicShapes.js","components/Canvas/Objects/Paths.js","components/Canvas/Objects/Text.js","components/Canvas/Tools.js","components/Canvas/Canvas.jsx","App.js","index.js"],"names":["module","exports","NavItem","props","right","Fragment","className","to","link","title","Navbar","side","Artboard","width","height","content","bgColor","this","margin","objects","draw","bind","obj","push","objs","forEach","x","y","scrW","scrH","artMeta","getArtboardMetadata","pixelRatio","baseCoord","w","h","m","orient","artH","baseW","artW","baseH","context","fillStyle","fillRect","render","clearRect","canvas","drawArtboard","drawObjects","BoundingBox","xCoord","yCoord","coords","wh","endCoords","xEnd","yEnd","setCoords","setEndCoords","setWH","offset","strokeStyle","lineWidth","strokeRect","colors","require","BasePanelComponent","boundingBox","console","log","panelOffset","PanelButton","fS","grey","sS","darkgrey","lW","PanelText","text","fixBoundY","length","font","fillText","PanelTitle","PanelTextSwitch","state","switchFill","off","on","midblue","switchDiameter","textXOffset","Panel","border","bhalf","components","panelXY","getXY","checkCollision","map","comp","handleColission","window","innerWidth","innerHeight","renderComponents","PanelToolButton","tool","lightgrey","activeSS","midorange","active","icon","Image","src","drawImage","Toolbox","toolManager","Math","ceil","tools","toolWidth","componenets","i","offsetX","offsetY","toolDeselect","activeTool","toolSelect","BaseShape","getCoords","getEndCoords","setBounds","moveBounds","Rectangle","fillColor","borderColor","borderWidth","mode","undefined","xOffset","yOffset","Circle","radius","Offset","beginPath","arc","PI","fill","stroke","closePath","Point","Path","points","strokeWidth","strokeColor","addPoints","addPoint","determineNewBounds","p","minX","minY","maxX","maxY","point","p1","p2","deltaX","deltaY","sqrt","pow","pointsLength","pointsRemoved","distCutoff","pointDistance","splice","lineTo","Text","fontSize","setWidthHeight","slice","fontfamily","SelectionTool","selectedObject","NaN","moving","lastPos","lastEventUp","scrD","Doc","reverse","e","screenDimensions","type","key","indexOf","localCoords","pageX","pageY","collisionOnObjects","xDelta","yDelta","move","PencilTool","currentPath","lastPath","eventCount","pointsToAdd","lastMoveEvent","Date","inUse","ToolManager","addObject","cleanUp","EraserTool","getBackgroundColour","TextTool","activeObject","addText","removeLastChar","selectionT","pencilT","eraserT","textT","toolUse","lastObj","panel","dimensions","select","use","deselect","graphic","Tools","testPanel","Panels","addObjects","Canvas","useState","setDimensions","setScreenDimensions","canvasRef","useRef","useEffect","current","getContext","updateCanvas","toolGraphic","handleResize","handleMouseEvent","checkBoundsCollision","updateInterval","setInterval","addEventListener","document","_","clearInterval","removeEventListener","ref","id","Home","MainButton","subtitle","SmallButton","App","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46568991.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ea09f389.svg\";","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction NavItem(props) {\r\n\tconst right = props.right;\r\n\treturn (\r\n\t<React.Fragment>\t\r\n\t\t{ right ? \r\n\t\t<li className=\"right-nav\">\r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li>\r\n\t\t:\r\n\t\t<li> \r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li> }\r\n\t</React.Fragment>\t\r\n\t)\r\n}\r\n\r\nfunction Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={props.side}>\r\n\t\t\t<ul className=\"Navbar\">\r\n\t\t\t\t<NavItem link=\"/\" title=\"Home\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document1\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document2\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document3\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Settings\" right=\"true\" />\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","class Artboard {\r\n  //\r\n  constructor(width, height, content, bgColor) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.content = content;\r\n    this.bgColor = bgColor;\r\n\r\n    this.margin = 10; // margin to be set around the artboard\r\n\r\n    // variable to store all objects in document\r\n    // objects at the end of the list are on top of the other ones --> layer system\r\n    this.objects = [];\r\n    this.draw = this.draw.bind(this);\r\n  }\r\n\r\n  addObject(obj) {\r\n    this.objects.push(obj);\r\n  }\r\n\r\n  addObjects(objs) {\r\n    objs.forEach((obj) => {\r\n      this.objects.push(obj);\r\n    });\r\n  }\r\n\r\n  getBackgroundColour() {\r\n    return this.bgColor;\r\n  }\r\n\r\n  ratioedCoords(x, y, scrW, scrH) {\r\n    // convert canvas coordinates to artboard coordinates\r\n    //-> scaled by pixelRatio\r\n    var artMeta = this.getArtboardMetadata(scrW, scrH);\r\n    return { x: x / artMeta.pixelRatio, y: y / artMeta.pixelRatio };\r\n  }\r\n  relativeCoords(x, y, scrW, scrH) {\r\n    // converts global coordinates to ones that are relative to the artboard\r\n    //-> i.e.if coord is left of artboard relative coord is negative\r\n    var artMeta = this.getArtboardMetadata(scrW, scrH);\r\n    return { x: x - artMeta.baseCoord.w, y: y - artMeta.baseCoord.h };\r\n  }\r\n  localCoords(x, y, scrW, scrH) {\r\n    // ratioedCoords + relativeCoords\r\n    var artMeta = this.getArtboardMetadata(scrW, scrH);\r\n    return {\r\n      x: (x - artMeta.baseCoord.w) / artMeta.pixelRatio,\r\n      y: (y - artMeta.baseCoord.h) / artMeta.pixelRatio,\r\n    };\r\n  }\r\n\r\n  getArtboardMetadata(scrW, scrH) {\r\n    var m = this.margin * 6;\r\n    if (scrW / scrH > this.width / this.height) {\r\n      var orient = \"v\";\r\n      var artH = scrH - m;\r\n      var artW = this.width * (artH / this.height);\r\n      var baseW = (scrW - artW) / 2;\r\n      var baseH = this.margin;\r\n    } else if (scrW / scrH < this.width / this.height) {\r\n      var orient = \"h\";\r\n      var artW = scrW - m;\r\n      var artH = this.height * (artW / this.width);\r\n      var baseW = this.margin;\r\n      var baseH = (scrH - artH) / 2;\r\n    } else {\r\n      var orient = \"sq\";\r\n      if (scrW >= scrH) {\r\n        var artW = scrW - m;\r\n        var artH = this.height * (this.width / scrW);\r\n      } else {\r\n        var artH = scrH - m;\r\n        var artW = this.width * (this.height / scrH);\r\n      }\r\n    }\r\n\r\n    if (orient === \"v\") {\r\n      var pixelRatio = artW / this.width;\r\n    } else {\r\n      var pixelRatio = artH / this.height;\r\n    }\r\n\r\n    return {\r\n      width: artW,\r\n      height: artH,\r\n      orient: orient,\r\n      baseCoord: { w: baseW, h: baseH },\r\n      pixelRatio: pixelRatio,\r\n    };\r\n  }\r\n\r\n  drawArtboard(context, artMeta) {\r\n\r\n    context.fillStyle = this.bgColor;\r\n    context.fillRect(\r\n      artMeta.baseCoord.w,\r\n      artMeta.baseCoord.h,\r\n      artMeta.width,\r\n      artMeta.height\r\n    );\r\n  }\r\n\r\n  drawObjects(context, artMeta) {\r\n\r\n    this.objects.forEach((obj) => {\r\n      obj.render(context, artMeta.pixelRatio, artMeta.baseCoord);\r\n    });\r\n  }\r\n\r\n  draw(context, artMeta) {\r\n    // console.log(this.objects);\r\n    // reset canvas\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n\r\n    this.drawArtboard(context, artMeta);\r\n    this.drawObjects(context, artMeta);\r\n\r\n  }\r\n}\r\n\r\nexport default Artboard;\r\n","class BoundingBox {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    this.coords = [xCoord, yCoord];\r\n    this.wh = [width, height];\r\n    this.endCoords = [xCoord + width, yCoord + height];\r\n  }\r\n\r\n  // dont know if i actually should define basic getters and setters\r\n  getCoords() {\r\n    return this.coords;\r\n  }\r\n  setCoords(x, y) {\r\n    this.coords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getEndCoords() {\r\n    return this.endCoords;\r\n  }\r\n  setEndCoords(x, y) {\r\n    this.endCoords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getWH() {\r\n    return this.coords;\r\n  }\r\n  setWH(w, h) {\r\n    this.wh = [w, h];\r\n    //also define new endCoords values\r\n    this.endCoords = [this.coords[0] + w, this.coords[1] + h];\r\n  }\r\n\r\n  setBounds(x, y, xEnd, yEnd) {\r\n    this.setCoords(x, y);\r\n    this.setEndCoords(xEnd, yEnd);\r\n    this.setWH(this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]);\r\n  }\r\n\r\n  checkCollision(x, y) {\r\n\r\n    if (\r\n      x >= this.coords[0] &&\r\n      x <= this.endCoords[0] &&\r\n      y >= this.coords[1] &&\r\n      y <= this.endCoords[1]\r\n\r\n    ) {\r\n      // collison\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render(context, offset={x:0, y:0}, pixelRatio = 1) {\r\n    // render bounding box for testing\r\n    context.strokeStyle = \"#FF0000\"\r\n    context.lineWidth = 3\r\n\r\n    context.strokeRect(\r\n      offset.x + pixelRatio * this.coords[0],\r\n      offset.y + pixelRatio * this.coords[1],\r\n      pixelRatio * this.wh[0],\r\n      pixelRatio * this.wh[1]\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoundingBox;\r\n","import BoundingBox from \"../Objects/BoundingBox\"\r\nconst colors = require(\"../../colors.json\");\r\n\r\nclass BasePanelComponent {\r\n    constructor(x, y) {\r\n        this.coords = {x: x, y: y}\r\n\r\n        this.boundingBox = new BoundingBox(0, 0, 0, 0)\r\n    }\r\n\r\n    handleColission() {\r\n        console.log(\"clicked\", this)\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n\r\n    }\r\n}\r\n\r\nclass PanelButton extends BasePanelComponent {\r\n    constructor(x, y, w, h) {\r\n        super(x, y)\r\n\r\n        this.width = w\r\n        this.height = h\r\n        \r\n        this.fS = colors.grey\r\n        this.sS = colors.darkgrey\r\n        this.lW = 5\r\n\r\n        this.boundingBox = new BoundingBox(x, y, w, h)\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.fillStyle = this.fS\r\n        context.strokeStyle = this.sS\r\n        context.lineWidth = this.lW\r\n\r\n        context.fillRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y,\r\n            this.width,\r\n            this.height\r\n        )\r\n        context.strokeRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y,\r\n            this.width,\r\n            this.height\r\n        )\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nclass PanelText extends BasePanelComponent {\r\n    constructor(x, y, text) {\r\n        \r\n        super(x, y)\r\n        \r\n        this.text = text\r\n        // this.width = w\r\n        // this.height = h\r\n        this.height = 15\r\n        this.fixBoundY = this.height * 4/5\r\n        \r\n        this.width = this.height * this.text.length/2\r\n\r\n        this.font = `${this.height}px iosevka demibold`\r\n        this.fS = colors.darkgrey\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.font = this.font\r\n        context.fillStyle = this.fS\r\n\r\n        context.fillText(this.text, panelOffset.x + this.coords.x, panelOffset.y + this.coords.y)\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\nclass PanelTitle extends PanelText {\r\n    constructor(x, y, text) {\r\n        super(x, y, text)\r\n\r\n        this.height = 25\r\n        this.fixBoundY = this.height * 4/5\r\n        \r\n        this.width = this.height * this.text.length / 2\r\n        this.font = `${this.height}px iosevka black`\r\n\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n}\r\n\r\n\r\nclass PanelTextSwitch extends PanelText {\r\n    constructor(x, y, text) {\r\n        \r\n        super(x, y, text)\r\n\r\n        this.state = false\r\n        this.switchFill = {off: colors.grey, on: colors.midblue}\r\n        this.switchDiameter = this.height\r\n        this.textXOffset = 1.5 * this.switchDiameter\r\n        this.width = this.width + this.textXOffset\r\n        \r\n        this.boundingBox = new BoundingBox(x, y-this.fixBoundY, this.width, this.height)\r\n    }\r\n\r\n    handleColission() {\r\n        this.state = !this.state\r\n    }\r\n\r\n    render(context, panelOffset) {\r\n        context.font = this.font\r\n        context.fillStyle = this.fS\r\n\r\n        context.strokeStyle = this.fS\r\n        context.lineWidth = 3\r\n\r\n        context.fillText(\r\n            this.text,\r\n            panelOffset.x + this.coords.x + this.textXOffset,\r\n            panelOffset.y + this.coords.y\r\n        )\r\n\r\n        if (this.state) {\r\n            context.fillStyle = this.switchFill.on\r\n        } else {\r\n            context.fillStyle = this.switchFill.off\r\n        }\r\n\r\n        context.fillRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y - this.fixBoundY,\r\n            this.switchDiameter,\r\n            this.switchDiameter\r\n        )\r\n\r\n        context.strokeRect(\r\n            panelOffset.x + this.coords.x,\r\n            panelOffset.y + this.coords.y - this.fixBoundY,\r\n            this.switchDiameter,\r\n            this.switchDiameter\r\n        )\r\n        // this.boundingBox.render(context, panelOffset)\r\n    }\r\n}\r\n\r\n\r\nexport { PanelButton, PanelText, PanelTitle, PanelTextSwitch }","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport { PanelButton, PanelText, PanelTitle, PanelTextSwitch } from \"./PanelComponents\";\r\n\r\nconst colors = require(\"../../colors.json\");\r\n\r\n\r\n\r\n\r\nclass Panel {\r\n    constructor(x, y, width, height, margin, border, rightSided=false) {\r\n        this.x = x\r\n        this.y = y\r\n        this.width = width;\r\n        this.height = height;\r\n        this.margin = margin;\r\n        this.border = border\r\n        this.bhalf = this.border/2\r\n\r\n        this.components = [ ]\r\n\r\n        this.boundingBox = new BoundingBox(this.x - this.bhalf, this.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n    }\r\n    \r\n    checkBoundsCollision(x, y) { \r\n        let panelXY = this.getXY()\r\n\r\n        this.boundingBox = new BoundingBox(panelXY.x - this.bhalf, panelXY.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n        if (this.boundingBox.checkCollision(x, y)) {\r\n            this.components.map(comp => {\r\n                if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) comp.handleColission()\r\n            })\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n    getXY() {\r\n        // if panel x or y coords are negative, the panel is sticky towards that bottom/ right side\r\n        let x, y;\r\n\r\n        if (this.x < 0) {\r\n            x = window.innerWidth + this.x\r\n        } else x = this.x \r\n        if (this.y < 0) {\r\n            y = window.innerHeight + this.y\r\n        } else y = this.y\r\n        return {x: x, y: y}\r\n    }\r\n\r\n\r\n    renderComponents(context, panelXY) {\r\n        this.components.map(comp => {\r\n            let panelOffset = panelXY // {x: x, y: y} panel offset to \r\n            comp.render(context, panelOffset)\r\n        })\r\n    }\r\n    render(context) {\r\n        context.fillStyle = colors.grey\r\n        context.strokeStyle = colors.darkgrey\r\n        context.lineWidth = this.border\r\n\r\n        let panelXY = this.getXY()\r\n\r\n        context.fillRect(panelXY.x, panelXY.y, this.width, this.height)\r\n        context.strokeRect(panelXY.x, panelXY.y, this.width, this.height)\r\n\r\n        this.renderComponents(context, panelXY)\r\n    }\r\n}\r\n\r\n\r\nexport default Panel;","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport Panel from \"./BasePanel\";\r\nimport { PanelButton } from \"./PanelComponents\";\r\nconst colors = require(\"../../colors.json\");\r\n\r\nclass PanelToolButton extends PanelButton {\r\n  constructor(x, y, w, h, tool) {\r\n    super(x, y, w, h)\r\n\r\n    this.tool = tool\r\n    this.fS = colors.lightgrey\r\n    this.activeSS = colors.midorange\r\n    this.lW = 6\r\n  }\r\n\r\n  render(context, panelOffset, active=false) {\r\n    context.fillStyle = this.fS\r\n    context.strokeStyle = this.sS\r\n    if (active) context.strokeStyle = this.activeSS\r\n    context.lineWidth = this.lW\r\n\r\n    context.fillRect(\r\n        panelOffset.x + this.coords.x,\r\n        panelOffset.y + this.coords.y,\r\n        this.width,\r\n        this.height\r\n    )\r\n    \r\n    let icon = new Image()\r\n    icon.src = this.tool.icon\r\n    context.drawImage(\r\n      icon,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    )\r\n    \r\n    context.strokeRect(\r\n        panelOffset.x + this.coords.x,\r\n        panelOffset.y + this.coords.y,\r\n        this.width,\r\n        this.height\r\n    )\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass Toolbox extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = width/2 * Math.ceil(toolManager.tools.length / 2);\r\n    let margin = 16;\r\n    let border = 8;\r\n    \r\n    super(-1.5*width, -1.5*height, width, height, margin, border)\r\n    this.toolManager = toolManager;\r\n    \r\n    this.toolWidth = 36;\r\n    \r\n    this.componenets = []\r\n    for (let i = 0; i < this.toolManager.tools.length; i++) {\r\n      let offsetX = this.margin + (this.margin + this.toolWidth) * (i % 2);\r\n      let offsetY = this.margin + (this.margin + this.toolWidth) * Math.ceil((i + 0.5) / 2 - 1);\r\n      this.components.push(new PanelToolButton(offsetX, offsetY, this.toolWidth, this.toolWidth, this.toolManager.tools[i]))\r\n    }\r\n  }\r\n\r\n  handleColission(tool) {\r\n    this.toolManager.toolDeselect()\r\n    this.toolManager.activeTool = tool\r\n    this.toolManager.toolSelect()\r\n  }\r\n\r\n\r\n  checkBoundsCollision(x, y) { \r\n      let panelXY = this.getXY()\r\n\r\n      this.boundingBox = new BoundingBox(panelXY.x - this.bhalf, panelXY.y - this.bhalf, this.width + this.border, this.height + this.border)\r\n      if (this.boundingBox.checkCollision(x, y)) {\r\n          this.components.map(comp => {\r\n              if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) this.handleColission(comp.tool)\r\n          })\r\n          return true\r\n      }\r\n      return false\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    this.components.map(comp => {\r\n      let panelOffset = panelXY // {x: x, y: y} panel offset to \r\n\r\n      let active = false\r\n      if (comp.tool === this.toolManager.activeTool) active = true // if tool is the active tool it needs to rendered distictively\r\n    \r\n      comp.render(context, panelOffset, active)\r\n    })\r\n  }\r\n}\r\n\r\nexport default Toolbox;\r\n","import BoundingBox from \"./BoundingBox\";\r\n\r\nclass BaseShape {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    // every object inherits a boundingbox\r\n    this.boundingBox = new BoundingBox(xCoord, yCoord, width, height);\r\n\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n  }\r\n  moveBounds(x, y) {\r\n    let coords = this.boundingBox.getCoords()\r\n    let endCoords = this.boundingBox.getEndCoords()\r\n\r\n    this.boundingBox.setBounds(coords[0] + x, coords[1] + y, endCoords[0] + x, endCoords[1] + y)\r\n  }\r\n  move(x, y) {\r\n    this.moveBounds(x, y)\r\n\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n  }\r\n\r\n  render() { }\r\n}\r\n\r\nclass Rectangle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    width,\r\n    height,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n    super(xCoord, yCoord, width, height);\r\n\r\n    if (mode === \"centered\") {\r\n      this.xOffset = -width / 2;\r\n      this.yOffset = -height / 2;\r\n    } else {\r\n      this.xOffset = 0;\r\n      this.yOffset = 0;\r\n    }\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.fillRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * this.width,\r\n      pixelRatio * this.height\r\n    );\r\n    context.strokeRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * this.width,\r\n      pixelRatio * this.height\r\n    );\r\n  }\r\n}\r\n\r\nclass Circle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    radius,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = \"centered\" // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n    super(xCoord, yCoord, radius*2, radius*2);\r\n\r\n    if (mode === \"centered\") {\r\n      this.Offset = 0;\r\n    } else {\r\n      this.Offset = radius;\r\n    }\r\n\r\n    this.radius = radius;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.beginPath();\r\n    context.arc(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.Offset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.Offset),\r\n      this.radius * pixelRatio,\r\n      0 * Math.PI, // starting point\r\n      2 * Math.PI // end point -> 2pi=360°\r\n    );\r\n    context.fill();\r\n    if (this.borderWidth > 0) context.stroke();\r\n\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nclass Triangle extends BaseShape {}\r\n\r\nexport default BaseShape;\r\nexport { Rectangle, Circle, Triangle };\r\n","import BaseShape from \"./BasicShapes\";\r\n\r\nfunction Point(x, y) {\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\n// TODO: smoothed paths: quadratic curves\r\nclass Path extends BaseShape {\r\n  constructor(points = [], strokeWidth = 10, strokeColor = \"#0D79F2\") {\r\n    super(0, 0, 0, 0);\r\n\r\n    this.points = []; // ...splits x and y into separate parameters\r\n    this.addPoints(points);\r\n\r\n    this.strokeWidth = strokeWidth;\r\n    this.strokeColor = strokeColor;\r\n\r\n    this.addPoint = this.addPoint.bind(this);\r\n    this.addPoints = this.addPoint.bind(this);\r\n  }\r\n\r\n  addPoint(x, y) {\r\n    this.points.push(new Point(x, y));\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n  addPoints(points) {\r\n    points.forEach((p) => {\r\n      this.points.push(new Point(p[0], p[1]));\r\n    });\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n\r\n  }\r\n\r\n  determineNewBounds() {\r\n    // determine min and mix coordinates for selecting boundingBox\r\n    let minX = this.points[0].x;\r\n    let minY = this.points[0].y;\r\n    let maxX = this.points[0].x;\r\n    let maxY = this.points[0].y;\r\n    this.points.map(point => {\r\n      if (point.x < minX) minX = point.x;\r\n      if (point.y < minY) minY = point.y;\r\n      if (point.x > maxX) maxX = point.x;\r\n      if (point.y > maxY) maxY = point.y;\r\n    }) \r\n    return [\r\n      minX, minY,\r\n      maxX, maxY,\r\n    ];\r\n  }\r\n\r\n  // TODO: move Method for Path Objects \r\n  move(x, y) {\r\n    this.points.map(point => {\r\n      point.x += x\r\n      point.y += y\r\n    })\r\n    \r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n\r\n  pointDistance(p1, p2) {\r\n    let deltaX = p1.x - p2.x \r\n    let deltaY = p1.y - p2.y\r\n    let dist = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2))\r\n    return dist\r\n  }\r\n  cleanUp() {\r\n    // remove points from path that are too close together, therefore enforce straighter, cleaner lines \r\n    var pointsAmount = 5\r\n    var pointsLength = this.points.length\r\n    var pointsRemoved = 0;\r\n    var distCutoff = 6.7\r\n    if (this.points.length > 1000) {\r\n      distCutoff = 1\r\n    }\r\n\r\n\r\n    for (let i = 1; i < this.points.length; i++) {\r\n      if (this.pointDistance(this.points[i - 1], this.points[i]) < distCutoff) {\r\n\r\n        if (i < this.points.length - pointsAmount) {\r\n          pointsRemoved += pointsAmount\r\n          this.points.splice(i, pointsAmount)\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(`[path cleanup] ${pointsRemoved} points removed of ${pointsLength}` )\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.lineWidth = pixelRatio * this.strokeWidth;\r\n    context.strokeStyle = this.strokeColor;\r\n\r\n    context.beginPath();\r\n    this.points.forEach((p) => {\r\n      context.lineTo(\r\n        baseCoord.w + pixelRatio * p.x,\r\n        baseCoord.h + pixelRatio * p.y\r\n      );\r\n    });\r\n    context.stroke();\r\n    context.closePath();\r\n\r\n    // context.beginPath();\r\n    // context.strokeStyle = \"#00FF00\";\r\n    // context.moveTo(baseCoord.w + pixelRatio * this.points[0].x, baseCoord.h + pixelRatio * this.points[0].y)\r\n    // for (var i = 1; i < this.points.length; i ++)\r\n    // {\r\n    //   var controlX = (baseCoord.w + pixelRatio * this.points[i - 1].x + baseCoord.w + pixelRatio * this.points[i].x) / 2;\r\n    //   var controlY = (baseCoord.h + pixelRatio * this.points[i - 1].y + baseCoord.h + pixelRatio * this.points[i].y) / 2;\r\n    //   context.quadraticCurveTo(\r\n    //     baseCoord.w + pixelRatio * this.points[i].x,\r\n    //     baseCoord.h + pixelRatio * this.points[i].y,\r\n    //     controlX,\r\n    //     controlY\r\n    //   );\r\n    // }\r\n    \r\n    // context.stroke();\r\n    // context.closePath();\r\n\r\n    // show points\r\n    // this.points.forEach((p) => {\r\n    //   context.fillRect(\r\n    //     baseCoord.w + pixelRatio * p.x,\r\n    //     baseCoord.h + pixelRatio * p.y,\r\n    //     7,\r\n    //     7\r\n    //   )\r\n    // });\r\n  }\r\n}\r\n\r\nexport default Path;\r\n","import BaseShape from \"./BasicShapes\";\r\nimport BoundingBox from \"./BoundingBox\";\r\n\r\n\r\nclass Text extends BaseShape {\r\n    constructor(x, y, text = \"\", font = \"Iosevka black\", fontSize = 100, fillStyle = \"#393939\") {\r\n        super(x, y, 0, 0)\r\n        this.text = text\r\n        this.font = font\r\n        this.fontSize = fontSize\r\n        this.fillStyle = fillStyle\r\n\r\n        this.setWidthHeight()\r\n\r\n        this.setBounds(x, y)\r\n    }\r\n\r\n    setBounds(x, y) {\r\n        this.boundingBox.setBounds(x, y - this.height, x + this.width, y)\r\n    }\r\n\r\n    move(x, y) {\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n    this.setBounds(this.xCoord, this.yCoord)\r\n\r\n    }\r\n\r\n\r\n    setWidthHeight() {\r\n        this.width = this.text.length * this.fontSize / 2\r\n        this.height = this.fontSize\r\n    }\r\n\r\n    setText(text) {\r\n        this.text = text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    addText(text) {\r\n        this.text += text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    removeLastChar() {\r\n        this.text = this.text.slice(0, -1)\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    clearText() {\r\n        this.text = \"\"\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n\r\n\r\n    setFont(fontfamily) {\r\n        this.font = fontfamily\r\n    }\r\n    setFontSize(fontSize) {\r\n        this.fontSize = fontSize\r\n    }\r\n\r\n    render(context, pixelRatio, baseCoord) {\r\n        context.font = `${this.fontSize * pixelRatio}px ${this.font}` // i.e. 30px iosevka demibold\r\n        context.fillStyle = this.fillStyle\r\n\r\n        context.fillText(\r\n            this.text,\r\n            baseCoord.w + pixelRatio * this.xCoord,\r\n            baseCoord.h + pixelRatio * this.yCoord\r\n        )\r\n\r\n        // this.boundingBox.render(context, {x : baseCoord.w, y: baseCoord.h}, pixelRatio)\r\n    }\r\n\r\n}\r\n\r\nexport default Text","import Toolbox from \"./Panels/Toolbox\";\r\nimport { Circle, Rectangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport colors from \"../colors.json\"\r\nimport Text from \"./Objects/Text\";\r\n\r\n\r\n// function object\r\nclass SelectionTool {\r\n  constructor() {\r\n    this.selectedObject = NaN;\r\n    this.moving = false\r\n    this.lastPos = { x: NaN, y: NaN }\r\n    \r\n    this.lastEventUp = false // was last event mouseup -> next click event can be ignored\r\n\r\n    this.icon = \"assets/icons/tools/select.png\"\r\n  }\r\n\r\n  collisionOnObjects(coords, scrD, Doc) {\r\n    let objects = Doc.objects.slice(0).reverse() // create reveresed copy of objects list\r\n    let pixelRatio = Doc.getArtboardMetadata(scrD.width, scrD.height).pixelRatio\r\n\r\n    for (var i = 0; i < objects.length; i++) {\r\n      let obj = objects[i]\r\n\r\n      if (obj.boundingBox.checkCollision(coords.x, coords.y, pixelRatio)) {\r\n        return obj\r\n      }\r\n      \r\n    }\r\n    return false\r\n  }\r\n\r\n  select(obj) {\r\n    this.selectedObject = obj\r\n   }\r\n  \r\n  use(e, Doc, screenDimensions) {\r\n\r\n    if (this.selectedObject && e.type === \"keydown\" && e.key === \"Delete\") {\r\n      Doc.objects.splice(Doc.objects.indexOf(this.selectedObject), 1)\r\n      this.selectedObject = NaN\r\n    }\r\n\r\n    if (this.lastEventUp && e.type === \"click\") {\r\n      return\r\n    } // if last event was mouseup mouse move has just finished and therefore a click at the position of mouseup is not needed\r\n    this.lastEventUp = false\r\n\r\n\r\n    let coords = Doc.localCoords(\r\n    e.pageX,\r\n    e.pageY,\r\n    screenDimensions.width,\r\n    screenDimensions.height\r\n    );\r\n    if (e.type === \"click\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, screenDimensions, Doc)\r\n\r\n    } else if (e.type === \"mousedown\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, screenDimensions, Doc)\r\n      if (this.selectedObject) {\r\n        this.moving = true\r\n      }\r\n      \r\n      this.lastPos.x = coords.x\r\n      this.lastPos.y = coords.y\r\n      \r\n\r\n    } else if (this.moving && e.type === \"mousemove\") {\r\n      let xDelta = coords.x - this.lastPos.x\r\n      let yDelta = coords.y - this.lastPos.y\r\n\r\n      this.selectedObject.move(xDelta, yDelta)\r\n\r\n      this.lastPos.x = coords.x\r\n      this.lastPos.y = coords.y\r\n\r\n\r\n    } else if (this.selectedObject && e.type === \"mouseup\") {\r\n      this.moving = false\r\n      this.lastEventUp = true\r\n   }\r\n\r\n  }\r\n\r\n  deselect() { \r\n    return this.selectedObject\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.selectedObject) {\r\n      let x = this.selectedObject.boundingBox.coords[0]\r\n      let y = this.selectedObject.boundingBox.coords[1]\r\n      let w = this.selectedObject.boundingBox.wh[0]\r\n      let h = this.selectedObject.boundingBox.wh[1]\r\n\r\n      let pixelRatio = artMeta.pixelRatio\r\n      let baseCoord = artMeta.baseCoord\r\n      \r\n      let offset = 32\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = colors.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset*2),\r\n        pixelRatio * (h + offset*2)\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nclass PencilTool {\r\n  constructor() {\r\n    this.currentPath = NaN;\r\n    this.lastPath = NaN\r\n    this.eventCount = 0;\r\n    this.pointsToAdd = [];\r\n    this.lastMoveEvent = new Date();\r\n\r\n\r\n    // this.use = this.use.bind(this);\r\n    this.icon = \"assets/icons/tools/select.png\"\r\n  }\r\n\r\n  select(obj) { \r\n  }\r\n  \r\n  use(e, Doc, screenDimensions) {\r\n    this.eventCount += 1;\r\n    \r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      screenDimensions.width,\r\n      screenDimensions.height\r\n    );\r\n    if (e.type === \"mousedown\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        ToolManager.strokeWidth,\r\n        ToolManager.strokeStyle\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n\r\n    } else if (this.inUse && e.type === \"mousemove\") {\r\n      this.currentPath.addPoint(coords.x, coords.y);\r\n      // this.currentPath.cleanUp()\r\n\r\n    } else if (this.inUse && e.type === \"mouseup\") {\r\n      this.currentPath.addPoints(coords.x, coords.y);\r\n      this.currentPath.cleanUp()\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.lastPath = this.currentPath\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n\r\n  deselect() { \r\n    return this.lastPath\r\n  }\r\n  \r\n  graphic(context, artMeta) {}\r\n}\r\n\r\nclass EraserTool extends PencilTool {\r\n  constructor(radius = \"10\") {\r\n    super();\r\n    this.radius = radius\r\n\r\n    this.icon = \"assets/icons/tools/select.png\"\r\n  }\r\n  use(e, Doc, screenDimensions) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      screenDimensions.width,\r\n      screenDimensions.height\r\n    );\r\n\r\n    if (e.type === \"mousedown\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0)); //colour --> getBackgroundColour Artboard Class\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        ToolManager.strokeWidth,\r\n        Doc.getBackgroundColour()\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n    } else if(this.inUse && e.type === \"mousemove\") {\r\n      this.currentPath.addPoint(coords.x,coords.y);\r\n    } else if(this.inUse && e.type === \"mouseup\") {\r\n      this.currentPath.addPoints(coords.x,coords.y);\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n}\r\n\r\nclass TextTool {\r\n  constructor() {\r\n    this.activeObject = NaN;\r\n\r\n    this.icon = \"assets/icons/tools/select.png\"\r\n  }\r\n\r\n  select(obj) {\r\n    if (obj instanceof Text) {\r\n      this.activeObject = obj\r\n    }\r\n   }\r\n  \r\n  use(e, Doc, screenDimensions) {\r\n\r\n    let coords = Doc.localCoords(\r\n    e.pageX,\r\n    e.pageY,\r\n    screenDimensions.width,\r\n    screenDimensions.height\r\n    );\r\n\r\n    if (e.type === \"click\") {\r\n      this.activeObject = new Text(coords.x, coords.y, \"lol\")\r\n\r\n    } else if (e.type === \"mousedown\") {\r\n      this.activeObject = new Text(coords.x, coords.y, \"lol\")\r\n      Doc.objects.push(this.activeObject)\r\n    } else if (this.activeObject && e.type === \"keypress\") {\r\n      this.activeObject.addText(e.key)\r\n    } else if (this.activeObject && e.type === \"keydown\") {\r\n\r\n      if (e.key === \"Escape\") {\r\n        this.activeObject = NaN\r\n      } else if (e.key === \"Backspace\") {\r\n        this.activeObject.removeLastChar()\r\n      }\r\n      \r\n    }    \r\n  }\r\n\r\n  deselect() { \r\n    return this.activeObject\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.activeObject) {\r\n      let x = this.activeObject.boundingBox.coords[0]\r\n      let y = this.activeObject.boundingBox.coords[1]\r\n      let w = this.activeObject.boundingBox.wh[0]\r\n      let h = this.activeObject.boundingBox.wh[1]\r\n\r\n      let pixelRatio = artMeta.pixelRatio\r\n      let baseCoord = artMeta.baseCoord\r\n      \r\n      let offset = 32\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = colors.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset * 2) + 10,\r\n        pixelRatio * (h + offset * 2)\r\n      );\r\n\r\n      // text cursor\r\n      context.fillRect(\r\n        baseCoord.w + pixelRatio * (this.activeObject.xCoord + this.activeObject.width) +4,\r\n        baseCoord.h + pixelRatio * (this.activeObject.yCoord - this.activeObject.height),\r\n        3,\r\n        pixelRatio * this.activeObject.height\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n\r\nvar selectionT = new SelectionTool()\r\nvar pencilT = new PencilTool()\r\nvar eraserT = new EraserTool()\r\nvar textT = new TextTool()\r\n\r\nclass ToolManager {\r\n  constructor(Doc) {\r\n    this.Doc = Doc;\r\n    this.tools = [];\r\n    this.tools.push(selectionT, pencilT, eraserT, textT);\r\n    this.toolUse = this.toolUse.bind(this);\r\n    this.activeTool = this.tools[0];\r\n    this.strokeWidth = 5;\r\n    this.strokeStyle = \"#111111\";\r\n\r\n    this.screenDimensions = {};\r\n\r\n    this.lastObj = NaN\r\n\r\n    this.panel = new Toolbox(this);\r\n  }\r\n  setScreenDimensions(dimensions) {\r\n    this.screenDimensions = dimensions;\r\n  }\r\n\r\n  toolSelect() {\r\n    this.activeTool.select(this.lastObj);\r\n  }\r\n  toolUse(e) {\r\n    this.activeTool.use(e, this.Doc, this.screenDimensions);\r\n  }\r\n  toolDeselect() {\r\n    this.lastObj = this.activeTool.deselect();\r\n  }\r\n\r\n  toolGraphic(context, artMeta) {\r\n    // function to display tool related graphics on redraw; i.e. selection box if selection tool is this.activeTool\r\n    this.activeTool.graphic(context, artMeta)\r\n  }\r\n\r\n}\r\n\r\nexport default ToolManager;\r\nexport { selectionT, pencilT, eraserT };\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Artboard from \"./Artboard\";\r\nimport ToolManager from \"./Tools\";\r\nimport { Circle, Rectangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport Text from \"./Objects/Text\"\r\n\r\nimport \"./Canvas.css\";\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport { PanelButton, PanelText, PanelTextSwitch, PanelTitle } from \"./Panels/PanelComponents\";\r\n\r\n// simport { ipcRenderer } from \"electron\";\r\n// const app = require(\"electron\").remote.app;\r\nconst appColors = require(\"../colors.json\");\r\n\r\nvar FPS = 120\r\n\r\n\r\nvar Doc = new Artboard(2100, 2970, [], \"#dddddd\");\r\nvar Tools = new ToolManager(Doc);\r\nvar useTool = Tools.toolUse; //create object bound function - when passing functions to other functions the this is lost\r\n\r\n// testing panels\r\nvar testPanel = new Panel(20, -350, 200, 300, 16, 8)\r\ntestPanel.components = [new PanelButton( 20, 100, 20, 20 ), new PanelTitle( 20, 30, \"Test\" ), new PanelText( 20, 50, \"testing testing please\" ), new PanelTextSwitch( 20, 80, \"testing\" )]\r\nvar Panels = [Tools.panel, testPanel]\r\nconsole.log(Panels)\r\n\r\n// var Panels = [Tools.panel] // actual panels\r\n\r\n\r\n\r\nDoc.addObjects([\r\n  new Rectangle(200, 200, 1200, 600, \"#FF0000\"),\r\n  new Rectangle(0, 0, 100, 100, \"#00DD00\"),\r\n  new Rectangle(1600, 2200, 400, 600, \"#3333FF\"),\r\n  new Rectangle(1000, 1000, 300, 300, \"#DD0066\"),\r\n  new Circle(1000, 1000, 300, \"#DD00DD\", \"#DD00DD\", false, null),\r\n  new Path([\r\n    [0, 100],\r\n    [500, 2970],\r\n    [1000, 100],\r\n  ]),\r\n  new Text(350, 1200, \"lalala\", \"iosevka black\")\r\n]);\r\n\r\nconst Canvas = (props) => {\r\n  const [dimensions, setDimensions] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n  //TODO: find a way to combine react & electron so that the electron.js win events etc. can be accessed in react\r\n  //const [maximized, setMaximized] = useState({\r\n  //maximized: window.isMaximized()\r\n  //})\r\n\r\n  Tools.setScreenDimensions(dimensions);\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  \r\n  // runs after every page render -> checks for events\r\n  useEffect(() => {\r\n    // get canvas Context\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    \r\n    \r\n    function updateCanvas() {\r\n      var artMeta = Doc.getArtboardMetadata(\r\n      context.canvas.width,\r\n      context.canvas.height\r\n    );\r\n      Doc.draw(context, artMeta);\r\n      Tools.toolGraphic(context, artMeta)\r\n\r\n      // show panels\r\n      Panels.map(panel => {\r\n        panel.render(context)\r\n      })\r\n    }\r\n\r\n\r\n    function handleResize() {\r\n      // TODO: limit the amount of resizes for performace purposes\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n      });\r\n      Tools.setScreenDimensions(dimensions);\r\n      //setMaximized({\r\n      //maximized: window.isMaximized()\r\n      //})\r\n\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      updateCanvas()\r\n    }\r\n\r\n    let lastEventType = NaN\r\n    function handleMouseEvent(e) {\r\n\r\n      if (e.type === \"click\") { // ignore click event after mouseup as click is always raised after holding mouse down\r\n        lastEventType = e.type\r\n        return\r\n      }\r\n      lastEventType = e.type\r\n\r\n      // check click / mousedown collision with panels\r\n      if (e.type === \"click\" || e.type === \"mousedown\") {\r\n        for (let i = 0; i < Panels.length; i++) {\r\n          let panel = Panels[i]\r\n          if (panel.checkBoundsCollision(e.pageX, e.pageY)) {\r\n            return\r\n          }\r\n        }\r\n      } \r\n      Tools.toolUse(e)\r\n    }\r\n\r\n    // ipcRenderer.Renderer.on(\"resize\", (e, name) => {\r\n    //   console.log(name, e);\r\n    //   handleResize();\r\n    // });\r\n\r\n    let updateInterval = setInterval(updateCanvas, 1000/FPS)\r\n\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    canvas.addEventListener(\"click\", handleMouseEvent);\r\n    canvas.addEventListener(\"mousedown\", handleMouseEvent);\r\n    canvas.addEventListener(\"mouseup\", handleMouseEvent);\r\n    canvas.addEventListener(\"mousemove\", handleMouseEvent);\r\n    document.addEventListener(\"keypress\", handleMouseEvent)\r\n    document.addEventListener(\"keydown\", handleMouseEvent)\r\n\r\n    // window.addEventListener(\"maximize\", handleResize);\r\n    return (_) => {\r\n      clearInterval(updateInterval)\r\n\r\n\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      canvas.removeEventListener(\"click\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mousedown\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mouseup\", handleMouseEvent);\r\n      canvas.removeEventListener(\"mousemove\", handleMouseEvent);\r\n      document.addEventListener(\"keypress\", handleMouseEvent)\r\n      document.addEventListener(\"keydown\", handleMouseEvent)\r\n\r\n      //window.addEventListener(\"maximize\", handleResize);\r\n      // clean up: remove listener to avoid memory leak by making sure there is always only one listener (every time the useEffect is called because of a resize event, a nev listener would be created)\r\n      // useEffect executes function on update of the canvas\r\n      // second arguement([]): all items to be watched for changes, which result in recurring execution of the useEffect callback\r\n    };\r\n  });\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={dimensions.width}\r\n      height={dimensions.height}\r\n      id=\"theCanvas\"\r\n    >\r\n      {\" \"}\r\n    </canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Navbar.js\";\r\nimport Canvas from \"./components/Canvas/Canvas.jsx\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\t<HashRouter>\r\n\t\t<div className=\"App\">\r\n\r\n\t<Switch>\r\n\t\t<Route path=\"/new\">\r\n\t\t\t<Navbar side=\"nav-bottom\"/>\r\n\t\t\t<Canvas />\r\n\t\t</Route>\r\n\t\t\r\n\t\t<Route exact path=\"/\"> // \"/\" path Route always last\r\n\t\t\t<Navbar side=\"nav-top\"/>\r\n\t\t\t<Home/>\t\r\n\t\t</Route>\r\n\t\t\r\n\t\t<Route render={() => <h1> 404 Error: Page not Found <br/> Go <Link to=\"/\"> Home </Link></h1>} />\r\n\r\n\t</Switch>\r\n\r\n\r\n\t\t</div>\r\n\t</HashRouter>\r\n\t);\r\n}\r\n\r\n\r\nfunction Home(props) {\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<div className=\"main-buttons\">\r\n\t\t\t\t<MainButton title=\"New Document\" subtitle=\"fileformat\" link=\"new\" />\t\r\n\t\t\t\t<MainButton title=\"Import\" subtitle=\"pdf png jgp flipchart\" link=\"doc/\"/>\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"small-buttons\">\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t\t<SmallButton title=\"fiel1.???\" link=\"/\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\t\r\n}\r\n\r\n\r\nfunction MainButton(props) {\r\n\treturn (\r\n\t\t<Link to={props.link} className=\"main-file-button\">\r\n\t\t\t<div className=\"main-file-button-top\">\r\n\t\t\t\t<h1> {props.title} </h1>\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"main-file-button-bottom\">\r\n\t\t\t\t<h3> {props.subtitle} </h3>\r\n\t\t\t</div>\r\n\t\t</Link>\t\r\n\t);\r\n}\r\n\r\nfunction SmallButton(props) {\r\n\treturn (\r\n\t\t<Link to={props.link} className=\"small-file-button\">\r\n\t\t\t<div className=\"small-file-button-top\">\r\n\t\t\t\t<p>||preview||</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"small-file-button-bottom\">\r\n\t\t\t\t<h3> {props.title} </h3>\r\n\t\t\t</div>\r\n\t\t</Link>\t\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}