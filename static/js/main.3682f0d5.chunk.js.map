{"version":3,"sources":["logo.svg","Navbar.js","components/Canvas/Artboard.js","components/Canvas/Objects/BoundingBox.js","Globals.js","components/Canvas/Panels/PanelComponents.js","components/Canvas/Panels/BasePanel.js","components/Canvas/Panels/Toolbox.js","components/Canvas/Objects/BasicShapes.js","components/Canvas/Objects/Paths.js","components/Canvas/Objects/Text.js","components/Canvas/Panels/ToolSettings.js","components/Canvas/Tools.js","components/Canvas/Canvas.jsx","components/Home/Modals/BaseModal.jsx","components/Home/Modals/components/DropDown.jsx","components/Home/Modals/components/HVSelector.jsx","components/Home/Modals/components/DocTypes.jsx","components/Home/Modals/NewFileModal.jsx","components/Home/Modals/ImportFileModal.jsx","components/Home/Modals/OpenFileModal.jsx","components/Home/Home.jsx","App.js","index.js"],"names":["module","exports","NavItem","props","right","Fragment","className","to","link","title","Navbar","side","Artboard","width","height","bgColor","this","margin","objects","draw","bind","obj","push","objs","forEach","splice","indexOf","x","y","artMeta","getArtboardMetadata","pixelRatio","baseCoord","w","h","scrW","window","innerWidth","scrH","innerHeight","m","orient","artH","baseW","artW","baseH","context","fillStyle","fillRect","render","clearRect","canvas","drawArtboard","drawObjects","BoundingBox","xCoord","yCoord","coords","wh","endCoords","xEnd","yEnd","setCoords","setEndCoords","setWH","offset","strokeStyle","lineWidth","strokeRect","DOC_TYPES","DOC_FORMATS","name","DOC_ORIENTATIONS","COLORS","lightlightgrey","lightgrey","grey","darkgrey","lightorange","midorange","midblue","BasePanelComponent","boundingBox","console","log","panelOffset","PanelButton","fS","GLOBALS","sS","lW","PanelText","text","size","fixBoundY","length","font","fillText","PanelFunctionalText","textFunc","PanelTitle","PanelTextSwitch","state","switchFill","off","on","switchDiameter","textXOffset","PanelSlider","func","undefined","sliderPosition","knobWidth","setSliderPos","xPercent","pos","beginPath","moveTo","lineTo","stroke","closePath","Panel","border","bhalf","components","panelXY","getXY","checkCollision","map","comp","handleColission","renderComponents","PanelToolButton","tool","activeSS","active","icon","Image","src","drawImage","Toolbox","toolManager","Math","ceil","tools","toolWidth","componenets","i","offsetX","offsetY","activeTool","toolDeselect","toolSelect","BaseShape","getCoords","getEndCoords","setBounds","moveBounds","Rectangle","fillColor","borderColor","borderWidth","mode","abs","xOffset","yOffset","Circle","radius","Offset","arc","PI","fill","Triangle","Point","Path","points","strokeWidth","strokeColor","addPoints","addPoint","determineNewBounds","p","minX","minY","maxX","maxY","point","p1","p2","deltaX","deltaY","sqrt","pow","pointsLength","pointsRemoved","pointDistance","Text","fontSize","setWidthHeight","slice","fontfamily","measureText","PanelColorButton","d","color","selectorComponent","PanelColorSelectorComponent","elementsX","diameter","colors","round","elementsY","activeColor","subComponents","floor","setActiveColor","PanelShapeButton","shape","PanelShapeSelectorComponent","shapes","activeShape","icons","setActiveShape","substring","ToolSettingsPanel","toolSettings","select","pencil","strokeWidthPencil","SelectionTool","selectedObject","NaN","moving","lastPos","lastEventUp","Doc","reverse","e","type","key","removeObject","localCoords","pageX","pageY","collisionOnObjects","xDelta","yDelta","move","PencilTool","currentPath","lastPath","eventCount","pointsToAdd","lastMoveEvent","Date","inUse","addObject","cleanUp","EraserTool","strokeWidthEraser","getBackgroundColour","TextTool","activeObject","addText","removeLastChar","ShapeTool","currentShape","lastShape","x1","y1","selectionT","pencilT","eraserT","textT","shapeT","ToolManager","toolUse","lastObj","panel","settingsPanel","use","deselect","graphic","Canvas","Tools","Panels","canvasRef","React","createRef","_isMounted","resizeCallback","handleResize","current","getContext","mouseKeyCallback","handleCanvasEvent","setState","testPanel","addEventListener","document","setInterval","forceUpdate","prevProps","prevState","updateCanvas","_","removeEventListener","toolGraphic","checkBoundsCollision","ref","style","position","bottom","left","id","Component","ModalBox","styled","div","ModalTitle","ModalTextButtonStyle","button","ModalTextButton","redirect","fontFamily","onClick","DropDownStyle","OptionsDiv","isOpen","OptionButton","OptionButtonText","SelectedOptionButton","Option","onMouseDown","event","preventDefault","SelectedOption","toggle","onBlur","setOFF","currentOption","Dropdown","defaultOption","default","onChange","option","toggleOpen","activeElement","blur","options","opt","showAllOptions","setCurrent","HVButtons","horizontal","HVSelector","hv","display","justifyContent","alignItems","SVGImage","img","DocTypeSelector","docType","docTypes","setDocType","process","gridColumn","FilesTypesSelection","justifyItems","float","transform","marginRight","userSelect","userDrag","setFormat","setOrientation","ButtonContainerDiv","NewFileModal","useState","format","orientation","overflowY","flexDirection","textAlign","modalRef","appCallback","ImportFileModal","OpenFileModal","Blurred","MainButton","translate","svgTranslate","scale","svgScale","subtitle","SmallButtonPreview","alt","SmallButton","previewSrc","NewUserWelcome","appLogo","Home","belowContent","isOpenNew","setOpenNew","isOpenImport","setOpenImport","isOpenOpen","setOpenOpen","isOpenAny","setOpenAny","prevOpenFiles","smallButtons","f","useEffect","createCallback","openCallback","importCallback","App","currentDoc","documents","FORMAT","history","path","exact","createDocument","openDocument","importDocument","withRouter","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3682f0d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ea09f389.svg\";","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction NavItem(props) {\r\n\tconst right = props.right;\r\n\treturn (\r\n\t<React.Fragment>\t\r\n\t\t{ right ? \r\n\t\t<li className=\"right-nav\">\r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li>\r\n\t\t:\r\n\t\t<li> \r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li> }\r\n\t</React.Fragment>\t\r\n\t)\r\n}\r\n\r\nfunction Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={props.side}>\r\n\t\t\t<ul className=\"Navbar\">\r\n\t\t\t\t<NavItem link=\"/\" title=\"Home\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document1\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document2\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document3\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Settings\" right=\"true\" />\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","class Artboard {\r\n  //\r\n  constructor(width, height, bgColor) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.bgColor = bgColor;\r\n\r\n    this.margin = 10; // margin to be set around the artboard\r\n\r\n    // variable to store all objects in document\r\n    // objects at the end of the list are on top of the other ones --> layer system\r\n    this.objects = [];\r\n    this.draw = this.draw.bind(this);\r\n  }\r\n\r\n  addObject(obj) {\r\n    this.objects.push(obj);\r\n  }\r\n\r\n  addObjects(objs) {\r\n    objs.forEach((obj) => {\r\n      this.objects.push(obj);\r\n    });\r\n  }\r\n\r\n  removeObject(obj) {\r\n    this.objects.splice(this.objects.indexOf(obj), 1);\r\n  }\r\n\r\n  getBackgroundColour() {\r\n    return this.bgColor;\r\n  }\r\n\r\n  ratioedCoords(x, y) {\r\n    // convert canvas coordinates to artboard coordinates\r\n    //-> scaled by pixelRatio\r\n    var artMeta = this.getArtboardMetadata();\r\n    return { x: x / artMeta.pixelRatio, y: y / artMeta.pixelRatio };\r\n  }\r\n  relativeCoords(x, y) {\r\n    // converts global coordinates to ones that are relative to the artboard\r\n    //-> i.e.if coord is left of artboard relative coord is negative\r\n    var artMeta = this.getArtboardMetadata();\r\n    return { x: x - artMeta.baseCoord.w, y: y - artMeta.baseCoord.h };\r\n  }\r\n  localCoords(x, y) {\r\n    // ratioedCoords + relativeCoords\r\n    var artMeta = this.getArtboardMetadata();\r\n    return {\r\n      x: (x - artMeta.baseCoord.w) / artMeta.pixelRatio,\r\n      y: (y - artMeta.baseCoord.h) / artMeta.pixelRatio,\r\n    };\r\n  }\r\n\r\n  getArtboardMetadata() {\r\n    let scrW = window.innerWidth;\r\n    let scrH = window.innerHeight;\r\n    var m = this.margin * 6;\r\n\r\n    if (scrW / scrH > this.width / this.height) {\r\n      var orient = \"v\";\r\n      var artH = scrH - m;\r\n      var artW = this.width * (artH / this.height);\r\n      var baseW = (scrW - artW) / 2;\r\n      var baseH = this.margin;\r\n    } else if (scrW / scrH < this.width / this.height) {\r\n      var orient = \"h\";\r\n      var artW = scrW - m;\r\n      var artH = this.height * (artW / this.width);\r\n      var baseW = this.margin;\r\n      var baseH = (scrH - artH) / 2;\r\n    } else {\r\n      var orient = \"sq\";\r\n      if (scrW >= scrH) {\r\n        var artW = scrW - m;\r\n        var artH = this.height * (this.width / scrW);\r\n      } else {\r\n        var artH = scrH - m;\r\n        var artW = this.width * (this.height / scrH);\r\n      }\r\n    }\r\n\r\n    if (orient === \"v\") {\r\n      var pixelRatio = artW / this.width;\r\n    } else {\r\n      var pixelRatio = artH / this.height;\r\n    }\r\n\r\n    return {\r\n      width: artW,\r\n      height: artH,\r\n      orient: orient,\r\n      baseCoord: { w: baseW, h: baseH },\r\n      pixelRatio: pixelRatio,\r\n    };\r\n  }\r\n\r\n  drawArtboard(context, artMeta) {\r\n    context.fillStyle = this.bgColor;\r\n    context.fillRect(\r\n      artMeta.baseCoord.w,\r\n      artMeta.baseCoord.h,\r\n      artMeta.width,\r\n      artMeta.height\r\n    );\r\n  }\r\n\r\n  drawObjects(context, artMeta) {\r\n    this.objects.forEach((obj) => {\r\n      obj.render(context, artMeta.pixelRatio, artMeta.baseCoord);\r\n    });\r\n  }\r\n\r\n  draw(context) {\r\n    const artMeta = this.getArtboardMetadata();\r\n    // reset canvas\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n    this.drawArtboard(context, artMeta);\r\n    this.drawObjects(context, artMeta);\r\n  }\r\n}\r\n\r\nexport default Artboard;\r\n","class BoundingBox {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    this.coords = [xCoord, yCoord];\r\n    this.wh = [width, height];\r\n    this.endCoords = [xCoord + width, yCoord + height];\r\n  }\r\n\r\n  // dont know if i actually should define basic getters and setters\r\n  getCoords() {\r\n    return this.coords;\r\n  }\r\n  setCoords(x, y) {\r\n    this.coords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getEndCoords() {\r\n    return this.endCoords;\r\n  }\r\n  setEndCoords(x, y) {\r\n    this.endCoords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getWH() {\r\n    return this.coords;\r\n  }\r\n  setWH(w, h) {\r\n    this.wh = [w, h];\r\n    //also define new endCoords values\r\n    this.endCoords = [this.coords[0] + w, this.coords[1] + h];\r\n  }\r\n\r\n  setBounds(x, y, xEnd, yEnd) {\r\n    this.setCoords(x, y);\r\n    this.setEndCoords(xEnd, yEnd);\r\n    this.setWH(this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]);\r\n  }\r\n\r\n  checkCollision(x, y) {\r\n\r\n    if (\r\n      x >= this.coords[0] &&\r\n      x <= this.endCoords[0] &&\r\n      y >= this.coords[1] &&\r\n      y <= this.endCoords[1]\r\n\r\n    ) {\r\n      // collison\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render(context, offset={x:0, y:0}, pixelRatio = 1) {\r\n    // render bounding box for testing\r\n    context.strokeStyle = \"#FF0000\"\r\n    context.lineWidth = 3\r\n\r\n    context.strokeRect(\r\n      offset.x + pixelRatio * this.coords[0],\r\n      offset.y + pixelRatio * this.coords[1],\r\n      pixelRatio * this.wh[0],\r\n      pixelRatio * this.wh[1]\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoundingBox;\r\n","export default {\r\n  DOC_TYPES: [\"regular\", \"infinite-scroll\", \"infinite\"],\r\n  DOC_FORMATS: [\r\n    { name: \"A5\", width: 1748, height: 2480 },\r\n    { name: \"A4\", width: 2480, height: 3508 },\r\n    { name: \"A3\", width: 3508, height: 4961 },\r\n    { name: \"A2\", width: 4961, height: 7016 },\r\n    { name: \"A1\", width: 7016, height: 9933 },\r\n  ],\r\n  DOC_ORIENTATIONS: [\"vertical\", \"horizontal\"],\r\n  COLORS: {\r\n    lightlightgrey: \"#F8F8F8\",\r\n    lightgrey: \"#EBEBEB\",\r\n    grey: \"#DCDCDC\",\r\n    darkgrey: \"#393939\",\r\n    lightorange: \"#F3AA59\",\r\n    midorange: \"#FA7D36\",\r\n    midblue: \"#0D79F2\",\r\n  },\r\n};\r\n","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nclass BasePanelComponent {\r\n  constructor(x, y) {\r\n    this.coords = { x: x, y: y };\r\n\r\n    this.boundingBox = new BoundingBox(0, 0, 0, 0);\r\n  }\r\n\r\n  handleColission() {\r\n    console.log(\"clicked\", this);\r\n  }\r\n\r\n  render(context, panelOffset) {}\r\n}\r\n\r\nclass PanelButton extends BasePanelComponent {\r\n  constructor(x, y, w, h) {\r\n    super(x, y);\r\n\r\n    this.width = w;\r\n    this.height = h;\r\n\r\n    this.fS = GLOBALS.COLORS.grey;\r\n    this.sS = GLOBALS.COLORS.darkgrey;\r\n    this.lW = 5;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.lW,\r\n      w + this.lW,\r\n      h + this.lW\r\n    ); // NOTE: this expands boundingBox by 5px for all PanelButton derivatives as well\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.fillStyle = this.fS;\r\n    context.strokeStyle = this.sS;\r\n    context.lineWidth = this.lW;\r\n\r\n    // console.log(\r\n    //                 panelOffset.x + this.coords.x,\r\n    //     panelOffset.y + this.coords.y,\r\n    // )\r\n    context.fillRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    context.strokeRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelText extends BasePanelComponent {\r\n  constructor(x, y, text, size = 15) {\r\n    super(x, y);\r\n\r\n    this.text = text;\r\n    // this.width = w\r\n    // this.height = h\r\n    this.height = size;\r\n    this.fixBoundY = (this.height * 4) / 5;\r\n\r\n    this.width = (this.height * this.text.length) / 2;\r\n\r\n    this.font = `${this.height}px iosevka semibold`;\r\n    this.fS = GLOBALS.COLORS.darkgrey;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.fixBoundY,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.font = this.font;\r\n    context.fillStyle = this.fS;\r\n\r\n    context.fillText(\r\n      this.text,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelFunctionalText extends PanelText {\r\n  constructor(x, y, textFunc, size) {\r\n    super(x, y, textFunc, size);\r\n  }\r\n  render(context, panelOffset) {\r\n    context.font = this.font;\r\n    context.fillStyle = this.fS;\r\n\r\n    context.fillText(\r\n      this.text(),\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelTitle extends PanelText {\r\n  constructor(x, y, text, size = 25) {\r\n    super(x, y, text, size);\r\n\r\n    this.height = size;\r\n    this.fixBoundY = (this.height * 4) / 5;\r\n\r\n    this.width = (this.height * this.text.length) / 2;\r\n    this.font = `${this.height}px iosevka bold`;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.fixBoundY,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n}\r\n\r\nclass PanelTextSwitch extends PanelText {\r\n  constructor(x, y, text) {\r\n    super(x, y, text);\r\n\r\n    this.state = false;\r\n    this.switchFill = { off: GLOBALS.COLORS.grey, on: GLOBALS.COLORS.midblue };\r\n    this.switchDiameter = this.height;\r\n    this.textXOffset = 1.5 * this.switchDiameter;\r\n    this.width = this.width + this.textXOffset;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.fixBoundY,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n\r\n  handleColission() {\r\n    this.state = !this.state;\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.font = this.font;\r\n    context.fillStyle = this.fS;\r\n\r\n    context.strokeStyle = this.fS;\r\n    context.lineWidth = 3;\r\n\r\n    context.fillText(\r\n      this.text,\r\n      panelOffset.x + this.coords.x + this.textXOffset,\r\n      panelOffset.y + this.coords.y\r\n    );\r\n\r\n    if (this.state) {\r\n      context.fillStyle = this.switchFill.on;\r\n    } else {\r\n      context.fillStyle = this.switchFill.off;\r\n    }\r\n\r\n    context.fillRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y - this.fixBoundY,\r\n      this.switchDiameter,\r\n      this.switchDiameter\r\n    );\r\n\r\n    context.strokeRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y - this.fixBoundY,\r\n      this.switchDiameter,\r\n      this.switchDiameter\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelSlider extends BasePanelComponent {\r\n  constructor(x, y, w, h = 28, func = undefined) {\r\n    super(x, y);\r\n\r\n    this.width = w;\r\n    this.height = h;\r\n\r\n    this.func = func;\r\n\r\n    this.fS = GLOBALS.COLORS.darkgrey;\r\n    this.sS = GLOBALS.COLORS.darkgrey;\r\n    this.lW = 5;\r\n\r\n    this.sliderPosition = 0.5; // number 0-1 position of knob along slider\r\n    this.knobWidth = this.height / 2;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.lW,\r\n      w + this.lW,\r\n      h + this.lW\r\n    ); // NOTE: this expands boundingBox by 5px for all PanelButton derivatives as well\r\n\r\n    this.setSliderPos(this.sliderPosition);\r\n  }\r\n\r\n  handleColission(x, y) {\r\n    let xPercent = (x - this.coords.x) / this.width;\r\n    console.log(xPercent);\r\n    this.setSliderPos(xPercent);\r\n  }\r\n\r\n  getSliderPos() {\r\n    return this.sliderPosition;\r\n  }\r\n  setSliderPos(pos) {\r\n    if (pos < 0) {\r\n      this.sliderPosition = 0;\r\n    } else if (pos > 1) {\r\n      this.sliderPosition = 1;\r\n    } else {\r\n      this.sliderPosition = pos;\r\n    }\r\n    if (this.func) {\r\n      this.func(this.sliderPosition);\r\n    }\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.fillStyle = this.fS;\r\n    context.strokeStyle = this.sS;\r\n    context.lineWidth = this.lW;\r\n\r\n    //\r\n    context.beginPath();\r\n    context.moveTo(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y + this.height / 2\r\n    );\r\n    context.lineTo(\r\n      panelOffset.x + this.coords.x + this.width,\r\n      panelOffset.y + this.coords.y + this.height / 2\r\n    );\r\n    context.stroke();\r\n    context.closePath();\r\n\r\n    context.fillRect(\r\n      panelOffset.x +\r\n        this.coords.x +\r\n        this.sliderPosition * (this.width - this.knobWidth),\r\n      panelOffset.y + this.coords.y,\r\n      this.knobWidth,\r\n      this.height\r\n    );\r\n    context.strokeStyle = GLOBALS.COLORS.grey;\r\n    context.strokeRect(\r\n      panelOffset.x +\r\n        this.coords.x +\r\n        this.sliderPosition * (this.width - this.knobWidth),\r\n      panelOffset.y + this.coords.y,\r\n      this.knobWidth,\r\n      this.height\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nexport default BasePanelComponent;\r\nexport {\r\n  PanelButton,\r\n  PanelText,\r\n  PanelFunctionalText,\r\n  PanelTitle,\r\n  PanelTextSwitch,\r\n  PanelSlider,\r\n};\r\n","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport {\r\n  PanelButton,\r\n  PanelText,\r\n  PanelTitle,\r\n  PanelTextSwitch,\r\n} from \"./PanelComponents\";\r\n\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nclass Panel {\r\n  constructor(x, y, width, height, margin, border, rightSided = false) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.margin = margin;\r\n    this.border = border;\r\n    this.bhalf = this.border / 2;\r\n\r\n    this.components = [];\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      this.x - this.bhalf,\r\n      this.y - this.bhalf,\r\n      this.width + this.border,\r\n      this.height + this.border\r\n    );\r\n  }\r\n\r\n  checkBoundsCollision(x, y) {\r\n    let panelXY = this.getXY();\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      panelXY.x - this.bhalf,\r\n      panelXY.y - this.bhalf,\r\n      this.width + this.border,\r\n      this.height + this.border\r\n    );\r\n    if (this.boundingBox.checkCollision(x, y)) {\r\n      this.components.map((comp) => {\r\n        if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y))\r\n          comp.handleColission(x - panelXY.x, y - panelXY.y);\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getXY() {\r\n    // if panel x or y coords are negative, the panel is sticky towards that bottom/ right side\r\n    let x, y;\r\n\r\n    if (this.x < 0) {\r\n      x = window.innerWidth + this.x;\r\n    } else x = this.x;\r\n    if (this.y < 0) {\r\n      y = window.innerHeight + this.y;\r\n    } else y = this.y;\r\n    return { x: x, y: y };\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    this.components.map((comp) => {\r\n      let panelOffset = panelXY; // {x: x, y: y} panel offset to\r\n      comp.render(context, panelOffset);\r\n    });\r\n  }\r\n  render(context) {\r\n    context.fillStyle = GLOBALS.COLORS.grey;\r\n    context.strokeStyle = GLOBALS.COLORS.darkgrey;\r\n    context.lineWidth = this.border;\r\n\r\n    let panelXY = this.getXY();\r\n\r\n    context.fillRect(panelXY.x, panelXY.y, this.width, this.height);\r\n    context.strokeRect(panelXY.x, panelXY.y, this.width, this.height);\r\n\r\n    this.renderComponents(context, panelXY);\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport Panel from \"./BasePanel\";\r\nimport { PanelButton } from \"./PanelComponents\";\r\nimport GLOBALS from \"../../../Globals\";\r\nclass PanelToolButton extends PanelButton {\r\n  constructor(x, y, w, h, tool) {\r\n    super(x, y, w, h);\r\n\r\n    this.tool = tool;\r\n    this.fS = GLOBALS.COLORS.lightgrey;\r\n    this.activeSS = GLOBALS.COLORS.midorange;\r\n    this.lW = 6;\r\n  }\r\n\r\n  render(context, panelOffset, active = false) {\r\n    context.fillStyle = this.fS;\r\n    context.strokeStyle = this.sS;\r\n    if (active) context.strokeStyle = this.activeSS;\r\n    context.lineWidth = this.lW;\r\n\r\n    context.fillRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n\r\n    let icon = new Image();\r\n    icon.src = this.tool.icon;\r\n    context.drawImage(\r\n      icon,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    );\r\n\r\n    context.strokeRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass Toolbox extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = (width / 2) * Math.ceil(toolManager.tools.length / 2);\r\n    let margin = 16;\r\n    let border = 8;\r\n\r\n    super(-150, -(70 + height), width, height, margin, border);\r\n    this.toolManager = toolManager;\r\n\r\n    this.toolWidth = 36;\r\n\r\n    this.componenets = [];\r\n    for (let i = 0; i < this.toolManager.tools.length; i++) {\r\n      let offsetX = this.margin + (this.margin + this.toolWidth) * (i % 2);\r\n      let offsetY =\r\n        this.margin +\r\n        (this.margin + this.toolWidth) * Math.ceil((i + 0.5) / 2 - 1);\r\n      this.components.push(\r\n        new PanelToolButton(\r\n          offsetX,\r\n          offsetY,\r\n          this.toolWidth,\r\n          this.toolWidth,\r\n          this.toolManager.tools[i]\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  handleColission(tool) {\r\n    if (tool !== this.toolManager.activeTool) {\r\n      this.toolManager.toolDeselect();\r\n      this.toolManager.activeTool = tool;\r\n      this.toolManager.toolSelect();\r\n    }\r\n  }\r\n\r\n  checkBoundsCollision(x, y) {\r\n    let panelXY = this.getXY();\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      panelXY.x - this.bhalf,\r\n      panelXY.y - this.bhalf,\r\n      this.width + this.border,\r\n      this.height + this.border\r\n    );\r\n    if (this.boundingBox.checkCollision(x, y)) {\r\n      this.components.map((comp) => {\r\n        if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y))\r\n          this.handleColission(comp.tool);\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    let panelOffset = panelXY; // {x: x, y: y} panel offset to\r\n    this.components.map((comp) => {\r\n      let active = false;\r\n      if (comp.tool === this.toolManager.activeTool) active = true; // if tool is the active tool it needs to rendered distictively\r\n\r\n      comp.render(context, panelOffset, active);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Toolbox;\r\nexport { PanelToolButton }\r\n","import BoundingBox from \"./BoundingBox\";\r\n\r\nclass BaseShape {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    // every object inherits a boundingbox\r\n    this.boundingBox = new BoundingBox(xCoord, yCoord, width, height);\r\n\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n  }\r\n  moveBounds(x, y) {\r\n    let coords = this.boundingBox.getCoords()\r\n    let endCoords = this.boundingBox.getEndCoords()\r\n\r\n    this.boundingBox.setBounds(coords[0] + x, coords[1] + y, endCoords[0] + x, endCoords[1] + y)\r\n  }\r\n  move(x, y) {\r\n    this.moveBounds(x, y)\r\n\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n  }\r\n\r\n  render() { }\r\n}\r\n\r\nclass Rectangle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    width,\r\n    height,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n\r\n    super(xCoord, yCoord, Math.abs(width), Math.abs(height))\r\n    //super(bCoords[0], bCoords[1], bCoords[2], bCoords[3]);\r\n\r\n    if (mode === \"centered\") {\r\n      this.xOffset = -width / 2;\r\n      this.yOffset = -height / 2;\r\n    } else {\r\n      this.xOffset = 0;\r\n      this.yOffset = 0;\r\n    }\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.fillRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * Math.abs(this.width), //width and height cant take on negative values\r\n      pixelRatio * Math.abs(this.height)\r\n    );\r\n    context.strokeRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * Math.abs(this.width),\r\n      pixelRatio * Math.abs(this.height)\r\n    );\r\n  }\r\n}\r\n\r\nclass Circle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    radius,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n    super(xCoord-radius, yCoord-radius, radius*2, radius*2);\r\n    \r\n    //console.log(\"CIRCLE: \" + xCoord, yCoord, radius);\r\n    if (mode === \"centered\") {\r\n      this.Offset = 0;\r\n    } else {\r\n      this.Offset = radius;\r\n    }\r\n\r\n    this.radius = radius;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.beginPath();\r\n    context.arc(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.Offset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.Offset),\r\n      this.radius * pixelRatio,\r\n      0 * Math.PI, // starting point\r\n      2 * Math.PI // end point -> 2pi=360°\r\n    );\r\n    context.fill();\r\n    if (this.borderWidth > 0) context.stroke();\r\n\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nclass Triangle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    width,\r\n    height,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined\r\n  ) {\r\n    super(xCoord, yCoord, Math.abs(width), Math.abs(height)); //width and height cant take on negative values\r\n\r\n    if (mode === \"centered\") {\r\n      this.xOffset = -width/2;\r\n      this.yOffset = -height/2;\r\n    } else {\r\n      this.xOffset = 0;\r\n      this.yOffset = 0;\r\n    }\r\n\r\n\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n    context.lineWidth = pixelRatio * this.borderWidth;\r\n    context.strokeStyle = this.borderColor;\r\n    \r\n    let xCoord = baseCoord.w + pixelRatio * (this.xCoord + this.xOffset);\r\n    let yCoord = baseCoord.h + pixelRatio * (this.yCoord + this.yOffset);\r\n    let width = pixelRatio * this.width\r\n    let height = pixelRatio * this.height\r\n\r\n    context.beginPath();\r\n    context.moveTo(xCoord, yCoord);\r\n    context.lineTo(xCoord + width, yCoord);\r\n    context.lineTo(xCoord + width/2, yCoord + height);\r\n    context.lineTo(xCoord, yCoord);\r\n\r\n    context.fill();\r\n\r\n    context.closePath();\r\n    \r\n    if (this.borderWidth > 0) {context.stroke();}\r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default BaseShape;\r\nexport { Rectangle, Circle, Triangle };\r\n","import BaseShape from \"./BasicShapes\";\r\n\r\nfunction Point(x, y) {\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\n// TODO: smoothed paths: quadratic curves\r\nclass Path extends BaseShape {\r\n  constructor(points = [], strokeWidth = 10, strokeColor = \"#0D79F2\") {\r\n    super(0, 0, 0, 0);\r\n\r\n    this.points = []; // ...splits x and y into separate parameters\r\n    this.addPoints(points);\r\n\r\n    this.strokeWidth = strokeWidth;\r\n    this.strokeColor = strokeColor;\r\n\r\n    this.addPoint = this.addPoint.bind(this);\r\n    this.addPoints = this.addPoint.bind(this);\r\n  }\r\n\r\n  addPoint(x, y) {\r\n    this.points.push(new Point(x, y));\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n  addPoints(points) {\r\n    points.forEach((p) => {\r\n      this.points.push(new Point(p[0], p[1]));\r\n    });\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n\r\n  }\r\n\r\n  determineNewBounds() {\r\n    // determine min and mix coordinates for selecting boundingBox\r\n    let minX = this.points[0].x;\r\n    let minY = this.points[0].y;\r\n    let maxX = this.points[0].x;\r\n    let maxY = this.points[0].y;\r\n    this.points.map(point => {\r\n      if (point.x < minX) minX = point.x;\r\n      if (point.y < minY) minY = point.y;\r\n      if (point.x > maxX) maxX = point.x;\r\n      if (point.y > maxY) maxY = point.y;\r\n    }) \r\n    return [\r\n      minX, minY,\r\n      maxX, maxY,\r\n    ];\r\n  }\r\n\r\n  // TODO: move Method for Path Objects \r\n  move(x, y) {\r\n    this.points.map(point => {\r\n      point.x += x\r\n      point.y += y\r\n    })\r\n    \r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n\r\n  pointDistance(p1, p2) {\r\n    let deltaX = p1.x - p2.x \r\n    let deltaY = p1.y - p2.y\r\n    let dist = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2))\r\n    return dist\r\n  }\r\n  cleanUp() {\r\n    // remove points from path that are too close together, therefore enforce straighter, cleaner lines \r\n    var pointsAmount = 5\r\n    var pointsLength = this.points.length\r\n    var pointsRemoved = 0;\r\n    var distCutoff = 2.45\r\n\r\n\r\n    for (let i = 1; i < this.points.length; i++) {\r\n      if (this.pointDistance(this.points[i - 1], this.points[i]) < distCutoff) {\r\n\r\n        if (i < this.points.length - pointsAmount) {\r\n          pointsRemoved += pointsAmount\r\n          this.points.splice(i, pointsAmount)\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(`[path cleanup] ${pointsRemoved} points removed of ${pointsLength}` )\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.lineWidth = pixelRatio * this.strokeWidth;\r\n    context.strokeStyle = this.strokeColor;\r\n\r\n    context.beginPath();\r\n    this.points.forEach((p) => {\r\n      context.lineTo(\r\n        baseCoord.w + pixelRatio * p.x,\r\n        baseCoord.h + pixelRatio * p.y\r\n      );\r\n    });\r\n    context.stroke();\r\n    context.closePath();\r\n\r\n    // context.beginPath();\r\n    // context.strokeStyle = \"#00FF00\";\r\n    // context.moveTo(baseCoord.w + pixelRatio * this.points[0].x, baseCoord.h + pixelRatio * this.points[0].y)\r\n    // for (var i = 1; i < this.points.length; i ++)\r\n    // {\r\n    //   var controlX = (baseCoord.w + pixelRatio * this.points[i - 1].x + baseCoord.w + pixelRatio * this.points[i].x) / 2;\r\n    //   var controlY = (baseCoord.h + pixelRatio * this.points[i - 1].y + baseCoord.h + pixelRatio * this.points[i].y) / 2;\r\n    //   context.quadraticCurveTo(\r\n    //     baseCoord.w + pixelRatio * this.points[i].x,\r\n    //     baseCoord.h + pixelRatio * this.points[i].y,\r\n    //     controlX,\r\n    //     controlY\r\n    //   );\r\n    // }\r\n    \r\n    // context.stroke();\r\n    // context.closePath();\r\n\r\n    // show points\r\n    // this.points.forEach((p) => {\r\n    //   context.fillRect(\r\n    //     baseCoord.w + pixelRatio * p.x,\r\n    //     baseCoord.h + pixelRatio * p.y,\r\n    //     7,\r\n    //     7\r\n    //   )\r\n    // });\r\n  }\r\n}\r\n\r\nexport default Path;\r\n","import BaseShape from \"./BasicShapes\";\r\nimport BoundingBox from \"./BoundingBox\";\r\n\r\n\r\nclass Text extends BaseShape {\r\n    constructor(x, y, text = \"\", font = \"Iosevka Bold\", fontSize = 100, fillStyle = \"#393939\") {\r\n        super(x, y, 0, 0)\r\n        this.text = text\r\n        this.font = font\r\n        this.fontSize = fontSize\r\n        this.fillStyle = fillStyle\r\n\r\n        this.setWidthHeight()\r\n\r\n        this.setBounds(x, y)\r\n    }\r\n\r\n    setBounds(x=this.xCoord, y=this.yCoord) {\r\n        this.boundingBox.setBounds(x, y - this.height, x + this.width, y)\r\n    }\r\n\r\n    move(x, y) {\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n    this.setBounds(this.xCoord, this.yCoord)\r\n\r\n    }\r\n\r\n\r\n    setWidthHeight() {\r\n        this.width = this.text.length * this.fontSize / 2\r\n        this.height = this.fontSize\r\n    }\r\n\r\n    setText(text) {\r\n        this.text = text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    addText(text) {\r\n        this.text += text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    removeLastChar() {\r\n        this.text = this.text.slice(0, -1)\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    clearText() {\r\n        this.text = \"\"\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n\r\n\r\n    setFont(fontfamily) {\r\n        this.font = fontfamily\r\n    }\r\n    setFontSize(fontSize) {\r\n        this.fontSize = fontSize\r\n    }\r\n\r\n    render(context, pixelRatio, baseCoord) {\r\n        context.font = `${this.fontSize * pixelRatio}px ${this.font}` // i.e. 30px iosevka demibold\r\n        context.fillStyle = this.fillStyle\r\n\r\n        this.width = context.measureText(this.text).width / pixelRatio\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n\r\n        context.fillText(\r\n            this.text,\r\n            baseCoord.w + pixelRatio * this.xCoord,\r\n            baseCoord.h + pixelRatio * this.yCoord\r\n        )\r\n\r\n        // this.boundingBox.render(context, {x : baseCoord.w, y: baseCoord.h}, pixelRatio)\r\n    }\r\n\r\n}\r\n\r\nexport default Text","import Panel from \"./BasePanel\";\r\nimport BoundingBox from \"./../Objects/BoundingBox\";\r\nimport BasePanelComponent, {\r\n  PanelButton,\r\n  PanelFunctionalText,\r\n  PanelSlider,\r\n  PanelText,\r\n  PanelTitle,\r\n} from \"./PanelComponents\";\r\nimport { selectionT, pencilT, eraserT, textT } from \"../Tools\";\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nclass PanelColorButton extends PanelButton {\r\n  constructor(x, y, d, color, selectorComponent) {\r\n    super(x, y, d, d);\r\n\r\n    this.fS = color;\r\n    this.sS = GLOBALS.COLORS.darkgrey;\r\n    this.lW = 3;\r\n\r\n    this.selectorComponent = selectorComponent;\r\n  }\r\n}\r\n\r\nclass PanelColorSelectorComponent extends BasePanelComponent {\r\n  constructor(x, y, elementsX, diameter = 10, toolManager) {\r\n    let colors = [\r\n      \"#FF0000\",\r\n      \"#00FF00\",\r\n      \"#0000FF\",\r\n      \"#FFFF00\",\r\n      \"#FF00FF\",\r\n      \"#00FFFF\",\r\n      \"#FF8000\",\r\n      \"#FF0080\",\r\n      \"#FF8080\",\r\n      \"#80FF00\",\r\n      \"#00FF80\",\r\n      \"#80FF80\",\r\n      \"#8000FF\",\r\n      \"#0080FF\",\r\n      \"#8080FF\",\r\n      \"#FFFFFF\",\r\n      \"#BFBFBF\",\r\n      \"#808080\",\r\n      \"#404040\",\r\n      \"#000000\",\r\n    ];\r\n\r\n    let margin = Math.round((diameter / 5) * 2);\r\n    let elementsY = Math.ceil(colors.length / elementsX);\r\n    let w = margin + elementsX * (margin + diameter);\r\n    let h = margin + elementsY * (margin + diameter);\r\n    super(x, y, w, h);\r\n\r\n    this.margin = margin;\r\n    this.elementsX = elementsX;\r\n    this.elementsY = elementsY;\r\n    this.diameter = diameter;\r\n\r\n    this.colors = colors;\r\n    this.activeColor = colors[0];\r\n\r\n    this.toolManager = toolManager;\r\n\r\n    this.boundingBox = new BoundingBox(x, y, w, h);\r\n\r\n    this.subComponents = [\r\n      new PanelColorButton(\r\n        this.coords.x + this.margin,\r\n        this.coords.y + this.margin + this.elementsY * (margin + diameter),\r\n        this.diameter * 2,\r\n        this.toolManager,\r\n        this\r\n      ),\r\n    ];\r\n    for (let i = 0; i < colors.length; i++) {\r\n      this.subComponents.push(\r\n        new PanelColorButton(\r\n          this.coords.x +\r\n            this.margin +\r\n            (i % this.elementsX) * (margin + diameter),\r\n          this.coords.y +\r\n            this.margin +\r\n            Math.floor(i / this.elementsX) * (margin + diameter),\r\n          this.diameter,\r\n          this.colors[i],\r\n          this\r\n        )\r\n      );\r\n    }\r\n\r\n    this.setActiveColor();\r\n  }\r\n\r\n  setActiveColor() {\r\n    this.subComponents[0].fS = this.activeColor;\r\n    this.toolManager.strokeStyle = this.activeColor;\r\n  }\r\n  getActiveColor() {\r\n    return this.activeColor;\r\n  }\r\n\r\n  handleColission(x, y) {\r\n    this.subComponents.map((comp) => {\r\n      if (comp.boundingBox.checkCollision(x, y)) {\r\n        this.activeColor = comp.fS;\r\n\r\n        this.setActiveColor();\r\n        return comp;\r\n      }\r\n    });\r\n  }\r\n\r\n  renderComponents(context, panelOffset) {\r\n    this.subComponents.map((comp) => {\r\n      comp.render(context, panelOffset);\r\n    });\r\n  }\r\n  render(context, panelOffset) {\r\n    this.renderComponents(context, panelOffset);\r\n  }\r\n}\r\n\r\nclass PanelShapeButton extends PanelButton {\r\n  constructor(x, y, d, shape) {\r\n    super(x, y, d, d);\r\n    console.log(x, y, d, shape);\r\n\r\n    this.diameter = d;\r\n    this.shape = shape;\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.fillStyle = this.fS;\r\n    context.strokeStyle = this.sS;\r\n    context.lineWidth = this.lW;\r\n\r\n    context.fillRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n\r\n    let icon = new Image();\r\n    icon.src = this.shape;\r\n    // console.log(\"OFFSET:\", panelOffset.x + this.coords.x,\r\n    //   panelOffset.y + this.coords.y);\r\n    context.drawImage(\r\n      icon,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.diameter,\r\n      this.diameter\r\n    );\r\n\r\n    context.strokeRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    //this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelShapeSelectorComponent extends BasePanelComponent {\r\n  constructor(x, y, elementsX, diameter = 10, toolManager) {\r\n    let shapes = [\"circle\", \"rectangle\", \"triangle\"];\r\n\r\n    let margin = Math.round((diameter / 5) * 2);\r\n    let elementsY = Math.ceil(shapes.length / elementsX);\r\n    let w = margin + elementsX * (margin + diameter);\r\n    let h = margin + elementsY * (margin + diameter);\r\n    //console.log(x, y, w, h, margin)\r\n    super(x, y, w, h);\r\n\r\n    this.margin = margin;\r\n    this.elementsX = elementsX;\r\n    this.elementsY = elementsY;\r\n    this.diameter = diameter;\r\n\r\n    this.shapes = shapes;\r\n    this.activeShape = shapes[2];\r\n\r\n    this.icons = [];\r\n    for (let i = 0; i < shapes.length; i++) {\r\n      this.icons.push(\"assets/icons/tools/\" + this.shapes[i] + \".png\");\r\n    }\r\n\r\n    this.icon = this.icons[2]; //current icon\r\n\r\n    this.toolManager = toolManager;\r\n\r\n    this.boundingBox = new BoundingBox(x, y, w, h);\r\n\r\n    this.subComponents = [\r\n      new PanelShapeButton(\r\n        this.coords.x + this.margin,\r\n        this.coords.y + this.margin + this.elementsY * (margin + diameter),\r\n        this.diameter * 2,\r\n        this.icon\r\n      ),\r\n    ];\r\n    for (let i = 0; i < shapes.length; i++) {\r\n      this.subComponents.push(\r\n        new PanelShapeButton(\r\n          this.coords.x +\r\n            this.margin +\r\n            (i % this.elementsX) * (margin + diameter),\r\n          this.coords.y +\r\n            this.margin +\r\n            Math.floor(i / this.elementsX) * (margin + diameter),\r\n          this.diameter,\r\n          this.icons[i]\r\n        )\r\n      );\r\n    }\r\n\r\n    this.setActiveShape();\r\n  }\r\n  setActiveShape() {\r\n    this.subComponents[0].shape = this.icon;\r\n    this.toolManager.shape = this.activeShape;\r\n  }\r\n\r\n  handleColission(x, y) {\r\n    this.subComponents.map((comp) => {\r\n      if (comp.boundingBox.checkCollision(x, y)) {\r\n        console.log(comp, this.activeShape);\r\n        this.icon = comp.shape; //comp.icon\r\n        this.activeShape = this.icon.substring(19, this.icon.length - 4); //cut string to shapename\r\n        console.log(this.activeShape);\r\n\r\n        this.setActiveShape();\r\n        return comp;\r\n      }\r\n    });\r\n  }\r\n\r\n  renderComponents(context, panelOffset) {\r\n    this.subComponents.map((comp) => {\r\n      comp.render(context, panelOffset);\r\n    });\r\n  }\r\n  render(context, panelOffset) {\r\n    this.renderComponents(context, panelOffset);\r\n  }\r\n}\r\n\r\nclass ToolSettingsPanel extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = 160;\r\n    let margin = 16;\r\n    let border = 8;\r\n\r\n    super(-280, -(70 + height), width, height, margin, border);\r\n    this.toolManager = toolManager;\r\n\r\n    this.components = [\r\n      new PanelTitle(5, 20, \"Tool Settings\", 17),\r\n      new PanelFunctionalText(\r\n        6,\r\n        32,\r\n        () => {\r\n          return \"->\" + this.toolManager.activeTool.name;\r\n        },\r\n        12\r\n      ),\r\n    ];\r\n    this.toolSettings = {\r\n      select: {\r\n        components: [],\r\n        size: { height: 160 },\r\n      },\r\n      pencil: {\r\n        components: [\r\n          new PanelColorSelectorComponent(4, 35, 5, 15, this.toolManager),\r\n          new PanelText(10, 176, \"Line Width\", 13),\r\n          new PanelSlider(10, 180, 100, 20, (pos) => {\r\n            this.toolManager.strokeWidthPencil = pos * 40;\r\n          }),\r\n        ],\r\n        size: { height: 210 },\r\n      },\r\n      pencil: {\r\n        components: [\r\n          new PanelColorSelectorComponent(4, 35, 5, 15, this.toolManager),\r\n          new PanelText(10, 176, \"Line Width\", 13),\r\n          new PanelSlider(10, 180, 100, 20, (pos) => {\r\n            this.toolManager.strokeWidth = pos * 40;\r\n          }),\r\n        ],\r\n        size: { height: 210 },\r\n      },\r\n      eraser: {\r\n        components: [\r\n          new PanelText(10, 56, \"Line Width\", 13),\r\n          new PanelSlider(10, 60, 100, 20, (pos) => {\r\n            this.toolManager.strokeWidth = pos * 40;\r\n          }),\r\n        ],\r\n        size: { height: 160 },\r\n      },\r\n      text: {\r\n        components: [\r\n          new PanelText(10, 56, \"Font Size\", 13),\r\n          new PanelSlider(10, 60, 100, 20, (pos) => {\r\n            this.toolManager.fontSize = pos * 250;\r\n          }),\r\n        ],\r\n        size: { height: 160 },\r\n      },\r\n      shapes: {\r\n        components: [\r\n          new PanelShapeSelectorComponent(4, 35, 3, 25, this.toolManager),\r\n          new PanelText(10, 156, \"Border Width\", 13),\r\n          new PanelSlider(10, 160, 100, 20, (pos) => {\r\n            this.toolManager.borderWidth = pos * 40;\r\n          }),\r\n        ],\r\n        size: { height: 210 },\r\n      },\r\n    };\r\n  }\r\n\r\n  checkBoundsCollision(x, y) {\r\n    let panelXY = this.getXY();\r\n    this.boundingBox = new BoundingBox(\r\n      panelXY.x - this.bhalf,\r\n      panelXY.y - this.bhalf,\r\n      this.width + this.border,\r\n      this.height + this.border\r\n    );\r\n\r\n    if (this.boundingBox.checkCollision(x, y)) {\r\n      let components = [\r\n        ...this.components,\r\n        ...this.toolSettings[this.toolManager.activeTool.name].components,\r\n      ];\r\n\r\n      components.map((comp) => {\r\n        if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) {\r\n          comp.handleColission(x - panelXY.x, y - panelXY.y);\r\n        }\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    let panelOffset = panelXY; // {x: x, y: y} panel offset to\r\n\r\n    let components = [\r\n      ...this.components,\r\n      ...this.toolSettings[this.toolManager.activeTool.name].components,\r\n    ]; // list of all components\r\n    components.map((comp) => {\r\n      let active = false;\r\n      if (comp.tool === this.toolManager.activeTool) active = true; // if tool is the active tool it needs to rendered distictively\r\n\r\n      comp.render(context, panelOffset, active);\r\n    });\r\n  }\r\n\r\n  render(context) {\r\n    this.height =\r\n      this.toolSettings[this.toolManager.activeTool.name].size.height;\r\n    this.y = -(70 + this.height);\r\n\r\n    context.fillStyle = GLOBALS.COLORS.grey;\r\n    context.strokeStyle = GLOBALS.COLORS.darkgrey;\r\n    context.lineWidth = this.border;\r\n\r\n    let panelXY = this.getXY();\r\n\r\n    context.fillRect(panelXY.x, panelXY.y, this.width, this.height);\r\n    context.strokeRect(panelXY.x, panelXY.y, this.width, this.height);\r\n\r\n    this.renderComponents(context, panelXY);\r\n  }\r\n}\r\n\r\nexport default ToolSettingsPanel;\r\nexport { PanelShapeSelectorComponent };\r\n","import Toolbox from \"./Panels/Toolbox\";\r\nimport { Circle, Rectangle, Triangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport GLOBALS from \"../../Globals\";\r\nimport Text from \"./Objects/Text\";\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport ToolSettingsPanel from \"./Panels/ToolSettings\";\r\n\r\nlet toolSettingsPanel = new Panel();\r\n\r\n// function object\r\nclass SelectionTool {\r\n  constructor() {\r\n    this.selectedObject = NaN;\r\n    this.moving = false;\r\n    this.lastPos = { x: NaN, y: NaN };\r\n\r\n    this.lastEventUp = false; // was last event mouseup -> next click event can be ignored\r\n\r\n    this.name = \"select\";\r\n    this.icon = \"assets/icons/tools/select.png\";\r\n  }\r\n\r\n  collisionOnObjects(coords, Doc) {\r\n    let objects = Doc.objects.slice(0).reverse(); // create reveresed copy of objects list\r\n    let pixelRatio = Doc.getArtboardMetadata().pixelRatio;\r\n\r\n    for (var i = 0; i < objects.length; i++) {\r\n      let obj = objects[i];\r\n\r\n      if (obj.boundingBox.checkCollision(coords.x, coords.y, pixelRatio)) {\r\n        return obj;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  select(obj) {\r\n    this.selectedObject = obj;\r\n  }\r\n\r\n  use(e, Doc) {\r\n    if (this.selectedObject && e.type === \"keydown\" && e.key === \"Delete\") {\r\n      Doc.removeObject(this.selectedObject);\r\n      this.selectedObject = NaN;\r\n      this.moving = false;\r\n    }\r\n\r\n    if (this.lastEventUp && e.type === \"click\") {\r\n      return;\r\n    } // if last event was mouseup mouse move has just finished and therefore a click at the position of mouseup is not needed\r\n    this.lastEventUp = false;\r\n\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n    if (e.type === \"click\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, Doc);\r\n    } else if (e.type === \"mousedown\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, Doc);\r\n      if (this.selectedObject) {\r\n        this.moving = true;\r\n      }\r\n\r\n      this.lastPos.x = coords.x;\r\n      this.lastPos.y = coords.y;\r\n    } else if (\r\n      this.moving &&\r\n      (e.type === \"mousemove\" || e.type === \"touchmove\")\r\n    ) {\r\n      let xDelta = coords.x - this.lastPos.x;\r\n      let yDelta = coords.y - this.lastPos.y;\r\n\r\n      this.selectedObject.move(xDelta, yDelta);\r\n\r\n      this.lastPos.x = coords.x;\r\n      this.lastPos.y = coords.y;\r\n    } else if (this.selectedObject && e.type === \"mouseup\") {\r\n      this.moving = false;\r\n      this.lastEventUp = true;\r\n    }\r\n  }\r\n\r\n  deselect() {\r\n    return this.selectedObject;\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.selectedObject) {\r\n      let x = this.selectedObject.boundingBox.coords[0];\r\n      let y = this.selectedObject.boundingBox.coords[1];\r\n      let w = this.selectedObject.boundingBox.wh[0];\r\n      let h = this.selectedObject.boundingBox.wh[1];\r\n\r\n      let pixelRatio = artMeta.pixelRatio;\r\n      let baseCoord = artMeta.baseCoord;\r\n\r\n      let offset = 32;\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = GLOBALS.COLORS.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset * 2),\r\n        pixelRatio * (h + offset * 2)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass PencilTool {\r\n  constructor() {\r\n    this.currentPath = NaN;\r\n    this.lastPath = NaN;\r\n    this.eventCount = 0;\r\n    this.pointsToAdd = [];\r\n    this.lastMoveEvent = new Date();\r\n\r\n    this.toolManager = undefined;\r\n\r\n    this.name = \"pencil\";\r\n    // this.use = this.use.bind(this);\r\n    this.icon = \"assets/icons/tools/pencil.png\";\r\n  }\r\n\r\n  select(obj) {}\r\n\r\n  use(e, Doc) {\r\n    this.eventCount += 1;\r\n\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n    if (e.type === \"mousedown\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        this.toolManager.strokeWidthPencil,\r\n        this.toolManager.strokeStyle\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n    } else if (\r\n      this.inUse &&\r\n      (e.type === \"mousemove\" || e.type === \"touchmove\")\r\n    ) {\r\n      this.currentPath.addPoint(coords.x, coords.y);\r\n      // this.currentPath.cleanUp()\r\n    } else if (this.inUse && e.type === \"mouseup\") {\r\n      this.currentPath.addPoints(coords.x, coords.y);\r\n      this.currentPath.cleanUp();\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.lastPath = this.currentPath;\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n\r\n  deselect() {\r\n    return this.lastPath;\r\n  }\r\n\r\n  graphic(context, artMeta) {}\r\n}\r\n\r\nclass EraserTool extends PencilTool {\r\n  constructor() {\r\n    super();\r\n\r\n    this.toolManager = undefined;\r\n\r\n    this.name = \"eraser\";\r\n    this.icon = \"assets/icons/tools/eraser.png\";\r\n  }\r\n  use(e, Doc) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n\r\n    if (e.type === \"mousedown\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0)); //colour --> getBackgroundColour Artboard Class\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        this.toolManager.strokeWidthEraser,\r\n        Doc.getBackgroundColour()\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n    } else if (\r\n      this.inUse &&\r\n      (e.type === \"mousemove\" || e.type === \"touchmove\")\r\n    ) {\r\n      this.currentPath.addPoint(coords.x, coords.y);\r\n    } else if (this.inUse && e.type === \"mouseup\") {\r\n      this.currentPath.addPoints(coords.x, coords.y);\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n}\r\n\r\nclass TextTool {\r\n  constructor() {\r\n    this.activeObject = NaN;\r\n\r\n    this.toolManager = undefined;\r\n\r\n    this.name = \"text\";\r\n\r\n    this.icon = \"assets/icons/tools/text.png\";\r\n  }\r\n\r\n  select(obj) {\r\n    if (obj instanceof Text) {\r\n      this.activeObject = obj;\r\n    }\r\n  }\r\n\r\n  use(e, Doc) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n\r\n    if (e.type === \"click\") {\r\n      this.activeObject = new Text(\r\n        coords.x,\r\n        coords.y,\r\n        \"\",\r\n        this.toolManager.font,\r\n        this.toolManager.fontSize\r\n      );\r\n    } else if (e.type === \"mousedown\") {\r\n      this.activeObject = new Text(\r\n        coords.x,\r\n        coords.y,\r\n        \"\",\r\n        this.toolManager.font,\r\n        this.toolManager.fontSize\r\n      );\r\n      Doc.objects.push(this.activeObject);\r\n    } else if (this.activeObject && e.type === \"keypress\") {\r\n      this.activeObject.addText(e.key);\r\n    } else if (this.activeObject && e.type === \"keydown\") {\r\n      if (e.key === \"Escape\") {\r\n        // console.log(this.activeObject.text.length);\r\n        if (this.activeObject.text.length == 0) {\r\n          Doc.removeObject(this.activeObject);\r\n        } //check if textlength 0\r\n        this.activeObject = NaN;\r\n      } else if (e.key === \"Backspace\") {\r\n        this.activeObject.removeLastChar();\r\n      }\r\n    }\r\n\r\n    if (this.activeObject) {\r\n      this.activeObject.fontSize = this.toolManager.fontSize;\r\n      this.activeObject.setWidthHeight();\r\n      this.activeObject.setBounds();\r\n    }\r\n  }\r\n\r\n  deselect() {\r\n    if (this.activeObject && this.activeObject.text.length == 0) {\r\n      this.toolManager.Doc.removeObject(this.activeObject);\r\n      this.activeObject = NaN;\r\n    }\r\n    return this.activeObject;\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.activeObject) {\r\n      let x = this.activeObject.boundingBox.coords[0];\r\n      let y = this.activeObject.boundingBox.coords[1];\r\n      let w = this.activeObject.boundingBox.wh[0];\r\n      let h = this.activeObject.boundingBox.wh[1];\r\n\r\n      let pixelRatio = artMeta.pixelRatio;\r\n      let baseCoord = artMeta.baseCoord;\r\n\r\n      let offset = 32;\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = GLOBALS.COLORS.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset * 2) + 10,\r\n        pixelRatio * (h + offset * 2)\r\n      );\r\n\r\n      // text cursor\r\n      context.fillRect(\r\n        baseCoord.w +\r\n          pixelRatio * (this.activeObject.xCoord + this.activeObject.width) +\r\n          4,\r\n        baseCoord.h +\r\n          pixelRatio * (this.activeObject.yCoord - this.activeObject.height),\r\n        3,\r\n        pixelRatio * this.activeObject.height\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass ShapeTool {\r\n  constructor() {\r\n    this.icon = \"assets/icons/tools/shapes.png\";\r\n    this.shapes = [\"circle\", \"rectangle\", \"triangle\"];\r\n\r\n    this.name = \"shapes\";\r\n\r\n    this.currentShape = undefined;\r\n    this.lastShape = this.currentShape;\r\n    this.toolManager = undefined;\r\n  }\r\n  select() {}\r\n\r\n  use(e, Doc) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n\r\n    let shape = this.toolManager.shape; //this.shapes[2];\r\n\r\n    if (e.type === \"mousedown\") {\r\n      //console.log(coords.x, coords.y)\r\n      this.inUse = true;\r\n      this.x1 = coords.x;\r\n      this.y1 = coords.y;\r\n\r\n      if (shape === \"circle\") {\r\n        this.currentShape = new Circle(this.x1, this.y1, 0); //x, y, r, fC, bC, bW\r\n      } else if (shape === \"rectangle\") {\r\n        this.currentShape = new Rectangle(this.x1, this.y1, 0, 0);\r\n      } else if (shape === \"triangle\") {\r\n        this.currentShape = new Triangle(this.x1, this.y1, 0, 0);\r\n      } else {\r\n        console.log(\"ERROR SHAPE-SELECTION\");\r\n      }\r\n\r\n      this.currentShape.borderWidth = this.toolManager.borderWidth;\r\n      Doc.addObject(this.currentShape);\r\n\r\n      //console.log(this.currentShape)\r\n    } else if (\r\n      this.inUse &&\r\n      (e.type === \"mousemove\" || e.type === \"touchmove\")\r\n    ) {\r\n      //console.log(this.currentShape)\r\n\r\n      if (this.currentShape instanceof Triangle) {\r\n        this.currentShape.width = coords.x - this.x1;\r\n        this.currentShape.height = coords.y - this.y1;\r\n      } else if (this.currentShape instanceof Circle) {\r\n        this.currentShape.radius = Math.sqrt(\r\n          Math.pow(this.x1 - coords.x, 2) + Math.pow(this.y1 - coords.y, 2)\r\n        );\r\n      } else if (this.currentShape instanceof Rectangle) {\r\n        this.currentShape.width = coords.x - this.x1;\r\n        this.currentShape.height = coords.y - this.y1;\r\n\r\n        if (this.currentShape.width < 0 && this.currentShape.height > 0) {\r\n          this.currentShape.xCoord = coords.x;\r\n        } else if (\r\n          this.currentShape.width > 0 &&\r\n          this.currentShape.height < 0\r\n        ) {\r\n          this.currentShape.yCoord = coords.y;\r\n        } else if (\r\n          this.currentShape.width < 0 &&\r\n          this.currentShape.height < 0\r\n        ) {\r\n          this.currentShape.xCoord = coords.x;\r\n          this.currentShape.yCoord = coords.y;\r\n        } else {\r\n        }\r\n      }\r\n    } else if (this.inUse && e.type === \"mouseup\") {\r\n      if (this.currentShape.width == 0 || this.currentShape.height == 0) {\r\n        Doc.removeObject(this.currentShape);\r\n        this.currentShape = NaN;\r\n        return;\r\n      }\r\n\r\n      if (this.currentShape instanceof Circle) {\r\n        var x = this.currentShape.xCoord - this.currentShape.radius;\r\n        var y = this.currentShape.yCoord - this.currentShape.radius;\r\n        var width = this.currentShape.radius * 2;\r\n        var height = this.currentShape.radius * 2;\r\n      } else {\r\n        var x = this.currentShape.xCoord;\r\n        var y = this.currentShape.yCoord;\r\n        var width = this.currentShape.width;\r\n        var height = this.currentShape.height;\r\n\r\n        if (this.currentShape instanceof Triangle) {\r\n          if (width < 0 && height > 0) {\r\n            x += width;\r\n          } else if (width > 0 && height < 0) {\r\n            y += height;\r\n          } else if (width < 0 && height < 0) {\r\n            x += width;\r\n            y += height;\r\n          } else {\r\n          }\r\n        }\r\n      }\r\n      //console.log(\"TOOLSCOORD: \" + x, y, width, height)\r\n      this.currentShape.boundingBox.setBounds(\r\n        x,\r\n        y,\r\n        x + Math.abs(width),\r\n        y + Math.abs(height)\r\n      );\r\n      this.inUse = false;\r\n      this.lastShape = this.currentShape;\r\n      this.currentShape = undefined;\r\n    }\r\n  }\r\n  deselect() {\r\n    return this.lastShape;\r\n  }\r\n  graphic(context, artMeta) {}\r\n}\r\n\r\nvar selectionT = new SelectionTool();\r\nvar pencilT = new PencilTool();\r\nvar eraserT = new EraserTool();\r\nvar textT = new TextTool();\r\nvar shapeT = new ShapeTool();\r\n\r\nclass ToolManager {\r\n  constructor(Doc) {\r\n    this.Doc = Doc;\r\n    this.tools = [];\r\n    this.tools.push(selectionT, pencilT, eraserT, textT, shapeT);\r\n    this.toolUse = this.toolUse.bind(this);\r\n    this.activeTool = this.tools[0];\r\n    this.strokeWidthPencil = 10;\r\n    this.strokeWidthEraser = 10;\r\n    this.strokeStyle = \"#111111\";\r\n    this.font = \"Iosevka bold\";\r\n    this.fontSize = 100;\r\n\r\n    this.lastObj = NaN;\r\n\r\n    pencilT.toolManager = this;\r\n    eraserT.toolManager = this;\r\n    textT.toolManager = this;\r\n\r\n    this.shape = \"triangle\";\r\n    this.borderWidth = 25;\r\n\r\n    this.lastObj = NaN;\r\n\r\n    pencilT.toolManager = this;\r\n    eraserT.toolManager = this;\r\n    textT.toolManager = this;\r\n    shapeT.toolManager = this;\r\n\r\n    this.panel = new Toolbox(this);\r\n    this.settingsPanel = new ToolSettingsPanel(this);\r\n  }\r\n\r\n  toolSelect() {\r\n    this.activeTool.select(this.lastObj);\r\n  }\r\n  toolUse(e) {\r\n    this.activeTool.use(e, this.Doc);\r\n  }\r\n  toolDeselect() {\r\n    this.lastObj = this.activeTool.deselect();\r\n  }\r\n\r\n  toolGraphic(context) {\r\n    const artMeta = this.Doc.getArtboardMetadata();\r\n    // function to display tool related graphics on redraw; i.e. selection box if selection tool is this.activeTool\r\n    this.activeTool.graphic(context, artMeta);\r\n  }\r\n}\r\n\r\nexport default ToolManager;\r\nexport { selectionT, pencilT, eraserT, textT, shapeT };\r\n","import React, { useRef, useEffect, useState, Component } from \"react\";\r\nimport Artboard from \"./Artboard\";\r\nimport ToolManager from \"./Tools\";\r\nimport { Circle, Rectangle, Triangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport Text from \"./Objects/Text\";\r\n\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport SettingsToolPanel from \"./Panels/ToolSettings\";\r\nimport {\r\n  PanelButton,\r\n  PanelSlider,\r\n  PanelText,\r\n  PanelTextSwitch,\r\n  PanelTitle,\r\n} from \"./Panels/PanelComponents\";\r\nimport GLOBALS from \"../../Globals\";\r\n\r\nvar FPS = 120;\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Doc: this.props.Doc\r\n        ? this.props.Doc\r\n        : new Artboard(1000, 1000, \"#000000\"),\r\n      Tools: undefined,\r\n      Panels: undefined,\r\n    };\r\n\r\n    this.canvasRef = React.createRef();\r\n\r\n    this._isMounted = false;\r\n\r\n    this.resizeCallback = (() =>\r\n      this.handleResize(this.canvasRef.current.getContext(\"2d\"))).bind(this);\r\n    this.mouseKeyCallback = ((e) => this.handleCanvasEvent(e)).bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    var toolManager = new ToolManager(this.state.Doc);\r\n    this.setState({ Tools: toolManager });\r\n    // testing panels\r\n    var testPanel = new Panel(20, -350, 200, 300, 16, 8);\r\n    testPanel.components = [\r\n      new PanelButton(20, 100, 20, 20),\r\n      new PanelTitle(20, 30, \"Test\"),\r\n      new PanelText(20, 50, \"testing testing please\"),\r\n      new PanelTextSwitch(20, 80, \"testing\"),\r\n      new PanelSlider(15, 130, 170),\r\n    ];\r\n    this.setState({\r\n      Panels: [toolManager.panel, toolManager.settingsPanel, testPanel],\r\n    });\r\n\r\n    // get canvas\r\n    const canvas = this.canvasRef.current;\r\n\r\n    window.addEventListener(\"resize\", this.resizeCallback);\r\n    canvas.addEventListener(\"click\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"mousedown\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"mouseup\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"mousemove\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"touchmove\", this.mouseKeyCallback);\r\n    document.addEventListener(\"keypress\", this.mouseKeyCallback);\r\n    document.addEventListener(\"keydown\", this.mouseKeyCallback);\r\n\r\n    setInterval(() => this.forceUpdate(), 1000 / FPS);\r\n  }\r\n\r\n  // runs after every page render -> checks for events\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // set new tool manager and panels if document changes\r\n    if (prevState.Doc !== this.state.Doc) {\r\n      var toolManager = new ToolManager(this.state.Doc);\r\n      this.setState({ Tools: toolManager });\r\n      // testing panels\r\n      var testPanel = new Panel(20, -350, 200, 300, 16, 8);\r\n      testPanel.components = [\r\n        new PanelButton(20, 100, 20, 20),\r\n        new PanelTitle(20, 30, \"Test\"),\r\n        new PanelText(20, 50, \"testing testing please\"),\r\n        new PanelTextSwitch(20, 80, \"testing\"),\r\n        new PanelSlider(15, 130, 170),\r\n      ];\r\n      this.setState({\r\n        Panels: [toolManager.panel, toolManager.settingsPanel, testPanel],\r\n      });\r\n    }\r\n\r\n    // get canvas Context\r\n    const canvas = this.canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    this.updateCanvas(context);\r\n    // window.addEventListener(\"maximize\", handleResize);\r\n    return (_) => {\r\n      // clearInterval(updateInterval);\r\n      //window.addEventListener(\"maximize\", handleResize);\r\n      // clean up: remove listener to avoid memory leak by making sure there is always only one listener (every time the useEffect is called because of a resize event, a nev listener would be created)\r\n      // useEffect executes function on update of the canvas\r\n      // second arguement([]): all items to be watched for changes, which result in recurring execution of the useEffect callback\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n\r\n    // get canvas\r\n    const canvas = this.canvasRef.current;\r\n\r\n    window.removeEventListener(\"resize\", this.resizeCallback);\r\n    canvas.removeEventListener(\"click\", this.mouseKeyCallback);\r\n    canvas.removeEventListener(\"mousedown\", this.mouseKeyCallback);\r\n    canvas.removeEventListener(\"mouseup\", this.mouseKeyCallback);\r\n    canvas.removeEventListener(\"mousemove\", this.mouseKeyCallback);\r\n    canvas.removeEventListener(\"touchmove\", this.mouseKeyCallback);\r\n    document.removeEventListener(\"keypress\", this.mouseKeyCallback);\r\n    document.removeEventListener(\"keydown\", this.mouseKeyCallback);\r\n  }\r\n\r\n  updateCanvas(context) {\r\n    this.state.Doc.draw(context);\r\n    this.state.Tools.toolGraphic(context);\r\n\r\n    // show panels\r\n    this.state.Panels.map((panel) => {\r\n      panel.render(context);\r\n    });\r\n  }\r\n\r\n  handleResize(context) {\r\n    // TODO: limit the amount of resizes for performace purposes\r\n\r\n    this.canvasRef.current.width = window.innerWidth;\r\n    this.canvasRef.current.height = window.innerHeight;\r\n    this.updateCanvas(context);\r\n  }\r\n\r\n  handleCanvasEvent(e) {\r\n    if (e.type === \"click\") {\r\n      // ignore click event after mouseup as click is always raised after holding mouse down\r\n      return;\r\n    }\r\n\r\n    // if (e.type !== \"mousemove\") { beforeMouseMove = e.type }\r\n    // || (beforeMouseMove === \"mousedown\" && e.type === \"mousemove\")\r\n    // TODO: enable smooth dragging of slider panel component  with code above, without interrupting tool use/ changing panel settings\r\n\r\n    // check click / mousedown collision with panels\r\n    if (e.type === \"click\" || e.type === \"mousedown\") {\r\n      for (let i = 0; i < this.state.Panels.length; i++) {\r\n        let panel = this.state.Panels[i];\r\n        if (panel.checkBoundsCollision(e.pageX, e.pageY)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.state.Tools.toolUse(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={this.canvasRef}\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        style={{ position: \"absolute\", bottom: 0, left: 0 }}\r\n        id=\"theCanvas\"\r\n      >\r\n        {\" \"}\r\n      </canvas>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nconst ModalBox = styled.div`\r\n  position: fixed;\r\n  display: block;\r\n  z-index: 1000;\r\n  background-color: ${GLOBALS.COLORS.lightgrey};\r\n  outline-style: solid;\r\n  outline-color: ${GLOBALS.COLORS.darkgrey};\r\n  outline-width: 1.2vh;\r\n  width: 70vw;\r\n  heigh: 50vh;\r\n  min-width: 75vw;\r\n  max-width: 95vw;\r\n  max-height: 95vh;\r\n  aspect-ratio: 2;\r\n  top: 50vh;\r\n  left: 50vw;\r\n  transform: translate(-50%, -50%);\r\n  @media (max-aspect-ratio: 4/3) {\r\n    aspect-ratio: 1/2;\r\n  }\r\n`;\r\nconst ModalTitle = styled.div`\r\n  font-family: Iosevka Extended Heavy;\r\n  font-size: calc(12px + ${({ size }) => size || 4}vh);\r\n  color: ${GLOBALS.COLORS.darkgrey};\r\n  margin-top: 3vh;\r\n  user-select: none;\r\n`;\r\n\r\nconst ModalTextButtonStyle = styled.button`\r\n  // ${({ side }) => (side == \"right\" ? `left: 40%;` : `left: 5%;`)};\r\n  // top: 100px;\r\n  background-color: ${GLOBALS.COLORS.grey};\r\n  color: ${GLOBALS.COLORS.darkgrey};\r\n  font-size: 1vh;\r\n  border: 4px solid ${GLOBALS.COLORS.darkgrey};\r\n  aspect-ratio: 2;\r\n  font-family: Iosevka bold;\r\n  font-size: calc(12px + 1.5vw);\r\n  height: calc((12px + 1.5vw) * 1.6);\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    border: 4px solid ${GLOBALS.COLORS.lightorange};\r\n  }\r\n  &:focus {\r\n    border: 4px solid ${GLOBALS.COLORS.lightorange};\r\n  }\r\n`;\r\n\r\nconst ModalTextButton = (props) => {\r\n  if (props.redirect && !props.func) {\r\n    return (\r\n      <div style={props.style}>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <Link\r\n            to={props.redirect}\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\" }}\r\n            onClick={() => {}}\r\n          >\r\n            {props.text}\r\n          </Link>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\r\n  } else if (!props.redirect && props.func) {\r\n    return (\r\n      <div style={props.style}>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <div\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\" }}\r\n            onClick={() => props.func()}\r\n          >\r\n            {props.text}\r\n          </div>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <div\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\" }}\r\n            onClick={() => {}}\r\n          >\r\n            {props.text}\r\n          </div>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst BaseModal = (props) => {\r\n  if (props.isOpen === \"true\") {\r\n    return (\r\n      <ModalBox>\r\n        <ModalTextButton text=\"Back\" side=\"left\" func={props.func} />\r\n      </ModalBox>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default BaseModal;\r\nexport { ModalBox, ModalTextButton, ModalTitle, ModalTextButtonStyle };\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport GLOBALS from \"../../../../Globals\";\r\n\r\nconst DropDownStyle = styled.div`\r\n  display: inline-block;\r\n  float: left;\r\n  position: relative;\r\n  width: ${(props) => props.width};\r\n  text-align: center;\r\n`;\r\n\r\nconst OptionsDiv = styled.div`\r\n  position: absolute;\r\n  float: left;\r\n  width: calc(100% - ${(props) => props.size} / 8);\r\n  transform-origin: top;\r\n  transform: scaleY(${(props) => (props.isOpen ? 1 : 0)});\r\n  z-index: 2000;\r\n  border: calc(${(props) => props.size} / 16) solid ${GLOBALS.COLORS.darkgrey};\r\n`;\r\n\r\nconst OptionButton = styled.button`\r\n  display: block;\r\n  padding: 0vh 0.6vw;\r\n  // margin: -0.5vw 0;\r\n  width: 100%;\r\n  border: 0px solid ${GLOBALS.COLORS.darkgrey};\r\n  &:hover {\r\n    outline: calc(${(props) => props.size} / 14) solid\r\n      ${GLOBALS.COLORS.lightorange};\r\n    cursor: pointer;\r\n  }\r\n  &:focus {\r\n    outline: calc(${(props) => props.size} / 14) solid\r\n      ${GLOBALS.COLORS.midorange};\r\n  }\r\n`;\r\nconst OptionButtonText = styled.div`\r\n  font-family: Iosevka bold;\r\n  font-size: calc(${(props) => props.size} / 2.7);\r\n  transform: scale(1.3);\r\n  user-select: none;\r\n`;\r\n\r\nconst SelectedOptionButton = styled.button`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.2vh 0.6vw;\r\n  font-family: Iosevka bold;\r\n  font-size: calc(${(props) => props.size} / 2.5);\r\n  border: calc(${(props) => props.size} / 10) solid ${GLOBALS.COLORS.darkgrey};\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    border: calc(${(props) => props.size} / 10) solid\r\n      ${GLOBALS.COLORS.lightorange};\r\n    cursor: pointer;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border: calc(${(props) => props.size} / 10) solid\r\n      ${GLOBALS.COLORS.midorange};\r\n    border-radius: 0;\r\n  }\r\n`;\r\n\r\nconst Option = (props) => {\r\n  return (\r\n    <OptionButton\r\n      size={props.size}\r\n      onClick={props.onClick}\r\n      onMouseDown={(event) => event.preventDefault()}\r\n    >\r\n      <OptionButtonText size={props.size}>{props.text}</OptionButtonText>\r\n    </OptionButton>\r\n  );\r\n};\r\nconst SelectedOption = (props) => {\r\n  return (\r\n    <SelectedOptionButton\r\n      onClick={props.toggle}\r\n      onBlur={props.setOFF}\r\n      size={props.size}\r\n    >\r\n      {props.currentOption}\r\n    </SelectedOptionButton>\r\n  );\r\n};\r\n\r\nclass Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      defaultOption: props.default,\r\n      currentOption: props.default,\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentOption !== prevState.currentOption) {\r\n      this.props.onChange(this.state.currentOption);\r\n    }\r\n  }\r\n\r\n  setCurrent(option) {\r\n    this.setState({ currentOption: option });\r\n    this.props.onChange(this.state.currentOption);\r\n    this.toggleOpen();\r\n  }\r\n  toggleOpen() {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n    if (this.state.isOpen === true) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const options = [];\r\n    this.props.options.map((opt, i) => {\r\n      if (this.state.showAllOptions && opt.name === this.state.currentOption) {\r\n      } else {\r\n        options.push(\r\n          <Option\r\n            text={opt.name}\r\n            size={this.props.width}\r\n            key={i}\r\n            onClick={() => {\r\n              this.setCurrent(opt);\r\n              document.activeElement.blur();\r\n            }}\r\n          ></Option>\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <DropDownStyle width={this.props.width} height={this.props.height}>\r\n        <SelectedOption\r\n          size={this.props.width}\r\n          currentOption={this.state.currentOption.name}\r\n          toggle={() => this.toggleOpen()}\r\n          setOFF={() => this.setState({ isOpen: false })}\r\n        />\r\n        <OptionsDiv isOpen={this.state.isOpen} size={this.props.width}>\r\n          {options}\r\n        </OptionsDiv>\r\n      </DropDownStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GLOBALS from \"../../../../Globals\";\r\n\r\nconst HVButtons = styled.button`\r\n  width: ${(props) => (props.horizontal ? \"3vw\" : \"2vw\")};\r\n  height: ${(props) => (props.horizontal ? \"2vw\" : \"3vw\")};\r\n  margin: 0 0.2vw;\r\n  background-color: ${(props) =>\r\n    props.active === true\r\n      ? GLOBALS.COLORS.midorange\r\n      : GLOBALS.COLORS.lightgrey};\r\n  border: 0.4vw solid ${GLOBALS.COLORS.darkgrey};\r\n\r\n  &:hover {\r\n    border: 0.4vw solid\r\n      ${(props) =>\r\n        props.active === false\r\n          ? GLOBALS.COLORS.lightorange\r\n          : GLOBALS.COLORS.darkgrey};\r\n  }\r\n  cursor: pointer;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nclass HVSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hv: \"horizontal\",\r\n    };\r\n    this.props.onChange(this.state.hv);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.hv !== prevState.hv) {\r\n      this.props.onChange(this.state.hv);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <HVButtons\r\n          active={this.state.hv === \"horizontal\"}\r\n          horizontal=\"dag\"\r\n          onClick={() => this.setState({ hv: \"horizontal\" })}\r\n        ></HVButtons>\r\n        <HVButtons\r\n          active={this.state.hv === \"vertical\"}\r\n          onClick={() => this.setState({ hv: \"vertical\" })}\r\n        ></HVButtons>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HVSelector;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SVGImage = styled.img`\r\n  user-select: none;\r\n  user-drag: none;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nclass DocTypeSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      docType: props.docTypes[0],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.docType !== prevState.docType) {\r\n      this.props.setDocType(this.state.docType);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[0]\r\n              ? process.env.PUBLIC_URL +\r\n                \"/assets/icons/ui/regular_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL + \"/assets/icons/ui/regular_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[0] })}\r\n          style={{ width: this.props.width, gridColumn: 1 }}\r\n        />\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[1]\r\n              ? process.env.PUBLIC_URL +\r\n                \"/assets/icons/ui/infinite_scroll_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL +\r\n                \"/assets/icons/ui/infinite_scroll_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[1] })}\r\n          style={{ width: this.props.width, gridColumn: 2 }}\r\n        />\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[2]\r\n              ? process.env.PUBLIC_URL +\r\n                \"/assets/icons/ui/infinite_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL + \"/assets/icons/ui/infinite_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[2] })}\r\n          style={{ width: this.props.width, gridColumn: 3 }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocTypeSelector;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ModalBox, ModalTextButton, ModalTitle } from \"./BaseModal\";\r\nimport Dropdown from \"./components/DropDown\";\r\nimport { useEffect } from \"react\";\r\nimport HVSelector from \"./components/HVSelector\";\r\nimport DocTypeSelector from \"./components/DocTypes\";\r\nimport { useRef } from \"react\";\r\n\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nconst FilesTypesSelection = (props) => {\r\n  const svgWidth = \"18vw\";\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"grid\", width: \"100%\", justifyItems: \"center\" }}>\r\n        <DocTypeSelector\r\n          docTypes={GLOBALS.DOC_TYPES}\r\n          setDocType={props.setDocType}\r\n          width={svgWidth}\r\n        />\r\n        <div style={{ position: \"relative\", width: \"60%\", gridColumn: 1 }}>\r\n          <div\r\n            style={{\r\n              float: \"left\",\r\n              transform: \"translateY(.3vw)\",\r\n              marginRight: \"0.2vw\",\r\n              fontFamily: \"Iosevka heavy\",\r\n              fontSize: \"2vw\",\r\n              color: GLOBALS.COLORS.darkgrey,\r\n              userSelect: \"none\",\r\n              userDrag: \"none\",\r\n            }}\r\n          >\r\n            Din\r\n          </div>\r\n          <Dropdown\r\n            onChange={props.setFormat}\r\n            width=\"4vw\"\r\n            default={GLOBALS.DOC_FORMATS[0]}\r\n            options={GLOBALS.DOC_FORMATS}\r\n            style={{\r\n              float: \"right\",\r\n            }}\r\n          />\r\n\r\n          <HVSelector onChange={props.setOrientation} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ButtonContainerDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: auto;\r\n  margin-top: 2vh;\r\n  margin-bottom: 1vh;\r\n`;\r\n\r\nconst NewFileModal = (props) => {\r\n  const [docType, setDocType] = useState(GLOBALS.DOC_TYPES[0]);\r\n  const [format, setFormat] = useState(GLOBALS.DOC_FORMATS[0]);\r\n  const [orientation, setOrientation] = useState(GLOBALS.DOC_ORIENTATIONS[0]);\r\n\r\n  if (props.isOpen === \"true\") {\r\n    return (\r\n      <ModalBox style={{ overflowY: \"scroll\" }}>\r\n        <ModalTitle> Create New Document </ModalTitle>\r\n\r\n        <div\r\n          style={{\r\n            height: \"83%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <FilesTypesSelection\r\n            setDocType={setDocType}\r\n            setFormat={setFormat}\r\n            setOrientation={setOrientation}\r\n            modalRef\r\n          />\r\n          <ButtonContainerDiv>\r\n            <ModalTextButton\r\n              style={{ float: \"left\", transform: \"translate(1.5vw)\" }}\r\n              text=\"Back\"\r\n              side=\"left\"\r\n              func={props.func}\r\n            />\r\n            <ModalTextButton\r\n              style={{ float: \"right\", transform: \"translate(-2vw)\" }}\r\n              text=\"Create\"\r\n              side=\"right\"\r\n              func={() => props.appCallback(docType, format, orientation)}\r\n            />\r\n          </ButtonContainerDiv>\r\n        </div>\r\n      </ModalBox>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default NewFileModal;\r\n","import React from 'react'\r\nimport { ModalBox, ModalTextButton, ModalTitle } from './BaseModal'\r\n\r\nconst ImportFileModal = (props) => {\r\n    if (props.isOpen === \"true\") {\r\n        return (\r\n          <ModalBox>\r\n            <ModalTitle> Import File </ModalTitle>\r\n            <ModalTextButton text=\"Import\" func={props.appCallback} />\r\n            <ModalTextButton text=\"Back\" side=\"left\" func={props.func} />\r\n          </ModalBox>\r\n        );\r\n    }\r\n    else {\r\n        return ( <></> )\r\n    }\r\n}\r\n\r\nexport default ImportFileModal;","import React from 'react'\r\nimport { ModalBox, ModalTextButton, ModalTitle } from './BaseModal'\r\n\r\nconst OpenFileModal = (props) => {\r\n    if (props.isOpen === \"true\") {\r\n        return (\r\n          <ModalBox>\r\n            <ModalTitle> Open Document </ModalTitle>\r\n            <ModalTextButton text=\"Open\" func={props.appCallback} />\r\n            <ModalTextButton text=\"Back\" side=\"left\" func={props.func} />\r\n          </ModalBox>\r\n        );\r\n    }\r\n    else {\r\n        return ( <></> )\r\n    }\r\n}\r\n\r\nexport default OpenFileModal;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeModal from \"./Modals/BaseModal\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect } from \"react\";\r\nimport NewFileModal from \"./Modals/NewFileModal\";\r\nimport ImportFileModal from \"./Modals/ImportFileModal\";\r\nimport OpenFileModal from \"./Modals/OpenFileModal\";\r\n\r\nimport appLogo from \"../../logo.svg\";\r\nimport \"./Home.css\";\r\n\r\nconst Blurred = styled.div`\r\n  filter: blur(${(props) => (props.blur === \"true\" ? \"20\" : \"0\")}px);\r\n  transition: filter ease-in 50ms;\r\n`;\r\n\r\nfunction Home(props) {\r\n  const [isOpenNew, setOpenNew] = useState(\"false\");\r\n  const [isOpenImport, setOpenImport] = useState(\"false\");\r\n  const [isOpenOpen, setOpenOpen] = useState(\"false\");\r\n  const [isOpenAny, setOpenAny] = useState(\"false\"); // is any modal opened?\r\n\r\n  // const prevOpenFiles = [];\r\n  const prevOpenFiles = [\r\n    \"11111.???\",\r\n    \"2222222.???\",\r\n    \"33333333.???\",\r\n    \"4444.???\",\r\n    \"55555.???\",\r\n  ];\r\n  var belowContent;\r\n  if (prevOpenFiles && prevOpenFiles.length > 0) {\r\n    let smallButtons = [];\r\n    prevOpenFiles.map((f, i) => {\r\n      smallButtons.push(<SmallButton key={i} title={f} link=\"/\" />);\r\n    });\r\n    belowContent = <div className=\"small-buttons\">{smallButtons}</div>;\r\n  } else {\r\n    belowContent = <NewUserWelcome />;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isOpenNew === \"true\" ||\r\n      isOpenImport === \"true\" ||\r\n      isOpenOpen === \"true\"\r\n    ) {\r\n      setOpenAny(\"true\");\r\n    } else if (\r\n      isOpenNew === \"false\" &&\r\n      isOpenImport === \"false\" &&\r\n      isOpenOpen === \"false\"\r\n    ) {\r\n      setOpenAny(\"false\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <NewFileModal\r\n        isOpen={isOpenNew}\r\n        redirect=\"new\"\r\n        appCallback={props.createCallback}\r\n        func={() => {\r\n          setOpenNew(\"false\");\r\n        }}\r\n      />\r\n      <OpenFileModal\r\n        isOpen={isOpenOpen}\r\n        redirect=\"\"\r\n        appCallback={props.openCallback}\r\n        func={() => {\r\n          setOpenOpen(\"false\");\r\n        }}\r\n      />\r\n      <ImportFileModal\r\n        isOpen={isOpenImport}\r\n        redirect=\"\"\r\n        appCallback={props.importCallback}\r\n        func={() => {\r\n          setOpenImport(\"false\");\r\n        }}\r\n      />\r\n      <Blurred blur={isOpenAny}>\r\n        <div className=\"home\">\r\n          <div className=\"main-buttons\">\r\n            <MainButton\r\n              title=\"New Document\"\r\n              subtitle=\"fileformat\"\r\n              svgTranslate={-13}\r\n              src={process.env.PUBLIC_URL + \"/assets/icons/ui/new_file.svg\"}\r\n              onClick={() => {\r\n                isOpenNew === \"false\"\r\n                  ? setOpenNew(\"true\")\r\n                  : setOpenNew(\"false\");\r\n              }}\r\n            />\r\n            <MainButton\r\n              title=\"Open\"\r\n              subtitle=\"fileformat\"\r\n              src={process.env.PUBLIC_URL + \"/assets/icons/ui/open_file.svg\"}\r\n              svgScale={1.3}\r\n              svgTranslate={-20}\r\n              onClick={() => {\r\n                isOpenOpen === \"false\"\r\n                  ? setOpenOpen(\"true\")\r\n                  : setOpenOpen(\"false\");\r\n              }}\r\n            />\r\n            <MainButton\r\n              title=\"Import\"\r\n              subtitle=\"pdf png jgp flipchart\"\r\n              src={process.env.PUBLIC_URL + \"/assets/icons/ui/import_file.svg\"}\r\n              svgTranslate={-13}\r\n              onClick={() => {\r\n                isOpenImport === \"false\"\r\n                  ? setOpenImport(\"true\")\r\n                  : setOpenImport(\"false\");\r\n              }}\r\n            />\r\n          </div>\r\n          {belowContent}\r\n        </div>\r\n\r\n        <footer></footer>\r\n      </Blurred>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MainButton = (props) => {\r\n  const translate = props.svgTranslate ? props.svgTranslate : -20;\r\n  const scale = props.svgScale ? props.svgScale * 100 : 100;\r\n\r\n  return (\r\n    <div className=\"main-file-button\" onClick={props.onClick}>\r\n      <div className=\"main-file-button-top\">\r\n        <img\r\n          src={props.src}\r\n          style={{\r\n            height: `${scale}%`,\r\n            transform: `translateY(${translate}%)`,\r\n          }}\r\n        />\r\n        <h1> {props.title} </h1>\r\n      </div>\r\n      <div className=\"main-file-button-bottom\">\r\n        <h3> {props.subtitle} </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SmallButtonPreview = (props) => {\r\n  return (\r\n    <div className=\"small-file-button-top\">\r\n      <div>\r\n        <img src={props.src} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SmallButton = (props) => {\r\n  return (\r\n    <Link to={props.link} className=\"small-file-button\">\r\n      <SmallButtonPreview src={props.previewSrc} />\r\n      <div className=\"small-file-button-bottom\">\r\n        <h3> {props.title} </h3>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst NewUserWelcome = (props) => {\r\n  return (\r\n    <div className=\"user-welcome\">\r\n      <img src={appLogo} alt=\"logo\" />\r\n      <div className=\"description\" style={{}}>\r\n        <h1>Welcome to Expanded Board</h1>\r\n        <br />\r\n        <h3>You haven't opened any Documents yet</h3>\r\n        <hr style={{ width: \"100%\" }} />\r\n        <h4>\r\n          You can create, open or import a Document and access previous ones on\r\n          this page\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { Component, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  withRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport Canvas from \"./components/Canvas/Canvas.jsx\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Artboard from \"./components/Canvas/Artboard\";\r\nimport GLOBALS from \"./Globals\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentDoc: undefined,\r\n      documents: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentDoc !== prevState.currentDoc) {\r\n    }\r\n  }\r\n\r\n  createDocument(docType, format, orientation) {\r\n    if (docType === \"regular\") {\r\n      var width, height;\r\n\r\n      GLOBALS.DOC_FORMATS.map((FORMAT, i) => {\r\n        if (format === FORMAT) {\r\n          width = FORMAT.width;\r\n          height = FORMAT.height;\r\n          if (orientation === \"horizontal\") {\r\n            width = FORMAT.height;\r\n            height = FORMAT.width;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ currentDoc: new Artboard(width, height, \"#dddddd\") });\r\n    this.setState({\r\n      documents: [...this.state.documents, this.state.currentDoc],\r\n    });\r\n\r\n    this.props.history.push(\"/new\", { state: this.state.currentDoc });\r\n  }\r\n  openDocument(path) {}\r\n  importDocument(path) {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/new\">\r\n            <Navbar side=\"nav-bottom\" />\r\n            <Canvas Doc={this.state.currentDoc} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            {\" \"}\r\n            // \"/\" path Route always last\r\n            <Navbar side=\"nav-top\" />\r\n            <Home\r\n              createCallback={(docType, format, orientation) =>\r\n                this.createDocument(docType, format, orientation)\r\n              }\r\n              openCallback={(path) => this.openDocument(path)}\r\n              importCallback={(path) => this.importDocument(path)}\r\n            />\r\n          </Route>\r\n\r\n          <Route\r\n            render={() => (\r\n              <h1>\r\n                {\" \"}\r\n                404 Error: Page not Found <br /> Go <Link to=\"/\"> Home </Link>\r\n              </h1>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}