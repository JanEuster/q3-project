{"version":3,"sources":["logo.svg","Navbar.js","components/Canvas/Objects/BoundingBox.js","components/Canvas/Objects/BasicShapes.js","components/Canvas/Objects/Text.js","components/Canvas/Artboard.js","Globals.js","components/Canvas/Panels/PanelComponents.js","components/Canvas/Panels/BasePanel.js","components/Canvas/Panels/Toolbox.js","components/Canvas/Objects/Paths.js","components/Canvas/Panels/ToolSettings.js","components/Canvas/Tools.js","components/Canvas/Canvas.jsx","components/Home/Modals/BaseModal.jsx","components/Home/Modals/components/DropDown.jsx","components/Home/Modals/components/HVSelector.jsx","components/Home/Modals/components/DocTypes.jsx","components/Home/Modals/NewFileModal.jsx","components/Home/Modals/components/RGBSelector.jsx","components/Home/Modals/ImportFileModal.jsx","components/Home/Modals/OpenFileModal.jsx","components/Home/Home.jsx","App.js","index.js"],"names":["module","exports","NavItem","props","right","Fragment","className","to","link","title","Navbar","side","BoundingBox","xCoord","yCoord","width","height","this","coords","wh","endCoords","x","y","w","h","xEnd","yEnd","setCoords","setEndCoords","setWH","context","offset","pixelRatio","strokeStyle","lineWidth","strokeRect","BaseShape","boundingBox","getCoords","getEndCoords","setBounds","moveBounds","Rectangle","fillColor","borderColor","borderWidth","mode","undefined","Math","abs","xOffset","yOffset","baseCoord","fillStyle","fillRect","Circle","radius","Offset","beginPath","arc","PI","fill","stroke","closePath","Triangle","moveTo","lineTo","Text","text","font","fontSize","setWidthHeight","length","slice","fontfamily","measureText","fillText","Artboard","bgColor","margin","objects","draw","bind","editable","obj","push","objs","forEach","splice","indexOf","artMeta","getArtboardMetadata","scrW","window","innerWidth","scrH","innerHeight","m","orient","artH","baseW","artW","baseH","render","drawArtboard","drawObjects","infiniteScrollArtboard","noArtboard","DOC_TYPES","DOC_FORMATS","name","DOC_ORIENTATIONS","COLORS","lightlightgrey","lightgrey","grey","darkgrey","lightorange","midorange","midblue","BasePanelComponent","console","log","panelOffset","PanelButton","fS","GLOBALS","sS","lW","PanelText","size","fixBoundY","PanelFunctionalText","textFunc","PanelTitle","PanelTextSwitch","state","switchFill","off","on","switchDiameter","textXOffset","PanelSlider","func","sliderPosition","knobWidth","setSliderPos","xPercent","pos","Panel","border","bhalf","components","panelXY","getXY","checkCollision","map","comp","handleColission","renderComponents","PanelToolButton","tool","activeSS","active","icon","Image","src","drawImage","Toolbox","toolManager","ceil","tools","toolWidth","componenets","i","offsetX","offsetY","activeTool","toolDeselect","toolSelect","Point","Path","points","strokeWidth","strokeColor","addPoints","addPoint","determineNewBounds","p","minX","minY","maxX","maxY","point","p1","p2","deltaX","deltaY","sqrt","pow","pointsLength","pointsRemoved","pointDistance","PanelColorButton","d","color","selectorComponent","PanelColorSelectorComponent","elementsX","diameter","colors","round","elementsY","activeColor","subComponents","floor","setActiveColor","PanelShapeButton","shape","PanelShapeSelectorComponent","shapes","activeShape","icons","setActiveShape","substring","ToolSettingsPanel","toolSettings","select","pencil","strokeWidthPencil","eraser","strokeWidthEraser","e","type","changedTouches","pageX","pageY","SelectionTool","selectedObject","NaN","moving","lastPos","lastEventUp","Doc","reverse","key","removeObject","localCoords","collisionOnObjects","xDelta","yDelta","move","PencilTool","currentPath","lastPath","eventCount","pointsToAdd","lastMoveEvent","Date","inUse","addObject","cleanUp","EraserTool","getBackgroundColour","TextTool","activeObject","addText","removeLastChar","ShapeTool","currentShape","lastShape","x1","y1","selectionT","pencilT","eraserT","textT","shapeT","ToolManager","toolUse","lastObj","panel","settingsPanel","use","deselect","graphic","Canvas","Tools","Panels","canvasRef","React","createRef","_isMounted","resizeCallback","handleResize","current","getContext","mouseKeyCallback","handleCanvasEvent","setState","testPanel","canvas","addEventListener","document","setInterval","forceUpdate","prevProps","prevState","updateCanvas","removeEventListener","clearRect","toolGraphic","checkBoundsCollision","ref","style","position","bottom","left","id","Component","ModalBox","styled","div","ModalTitle","ModalTextButtonStyle","button","ModalTextButton","redirect","fontFamily","onClick","DropDownStyle","OptionsDiv","isOpen","OptionButton","OptionButtonText","SelectedOptionButton","Option","onMouseDown","event","preventDefault","SelectedOption","toggle","onBlur","setOFF","currentOption","Dropdown","defaultOption","default","onChange","option","toggleOpen","activeElement","blur","options","opt","showAllOptions","setCurrent","HVButtons","horizontal","HVSelector","hv","display","justifyContent","alignItems","SVGImage","img","DocTypeSelector","docType","docTypes","setDocType","process","gridColumn","TextDiv","FilesTypesSelection","justifyItems","setFormat","float","setOrientation","gridRow","backgroundColor","value","boxSizing","setBG","target","ButtonContainerDiv","NewFileModal","useState","format","orientation","overflowY","flexDirection","textAlign","modalRef","transform","appCallback","ImportFileModal","OpenFileModal","Blurred","MainButton","translate","svgTranslate","scale","svgScale","subtitle","SmallButtonPreview","alt","SmallButton","previewSrc","NewUserWelcome","appLogo","Home","belowContent","isOpenNew","setOpenNew","isOpenImport","setOpenImport","isOpenOpen","setOpenOpen","isOpenAny","setOpenAny","prevOpenFiles","smallButtons","f","useEffect","createCallback","openCallback","importCallback","App","currentDoc","documents","FORMAT","history","path","exact","createDocument","openDocument","importDocument","withRouter","ReactDOM","StrictMode","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,mQCI3C,SAASC,EAAQC,GAChB,IAAMC,EAAQD,EAAMC,MACpB,OACA,kBAAC,IAAMC,SAAP,KACGD,EACF,wBAAIE,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAIJ,EAAMK,MACfL,EAAMM,QAIR,4BACC,kBAAC,IAAD,CAAMF,GAAIJ,EAAMK,MACfL,EAAMM,SAqBKC,MAdf,SAAgBP,GACf,OACC,yBAAKG,UAAWH,EAAMQ,MACrB,wBAAIL,UAAU,UACb,kBAACJ,EAAD,CAASM,KAAK,IAAIC,MAAM,SACxB,kBAACP,EAAD,CAASM,KAAK,IAAIC,MAAM,cACxB,kBAACP,EAAD,CAASM,KAAK,IAAIC,MAAM,cACxB,kBAACP,EAAD,CAASM,KAAK,IAAIC,MAAM,cACxB,kBAACP,EAAD,CAASM,KAAK,IAAIC,MAAM,WAAWL,MAAM,Y,QCuC9BQ,E,WAtEb,WAAYC,EAAQC,EAAQC,EAAOC,GAAS,oBAC1CC,KAAKC,OAAS,CAACL,EAAQC,GACvBG,KAAKE,GAAK,CAACJ,EAAOC,GAClBC,KAAKG,UAAY,CAACP,EAASE,EAAOD,EAASE,G,6CAI7C,WACE,OAAOC,KAAKC,S,uBAEd,SAAUG,EAAGC,GACXL,KAAKC,OAAS,CAACG,EAAGC,GAElBL,KAAKE,GAAK,CAACF,KAAKG,UAAU,GAAKH,KAAKC,OAAO,GAAID,KAAKG,UAAU,GAAKH,KAAKC,OAAO,M,0BAGjF,WACE,OAAOD,KAAKG,Y,0BAEd,SAAaC,EAAGC,GACdL,KAAKG,UAAY,CAACC,EAAGC,GAErBL,KAAKE,GAAK,CAACF,KAAKG,UAAU,GAAKH,KAAKC,OAAO,GAAID,KAAKG,UAAU,GAAKH,KAAKC,OAAO,M,mBAGjF,WACE,OAAOD,KAAKC,S,mBAEd,SAAMK,EAAGC,GACPP,KAAKE,GAAK,CAACI,EAAGC,GAEdP,KAAKG,UAAY,CAACH,KAAKC,OAAO,GAAKK,EAAGN,KAAKC,OAAO,GAAKM,K,uBAGzD,SAAUH,EAAGC,EAAGG,EAAMC,GACpBT,KAAKU,UAAUN,EAAGC,GAClBL,KAAKW,aAAaH,EAAMC,GACxBT,KAAKY,MAAMZ,KAAKG,UAAU,GAAKH,KAAKC,OAAO,GAAID,KAAKG,UAAU,GAAKH,KAAKC,OAAO,M,4BAGjF,SAAeG,EAAGC,GAEhB,OACED,GAAKJ,KAAKC,OAAO,IACjBG,GAAKJ,KAAKG,UAAU,IACpBE,GAAKL,KAAKC,OAAO,IACjBI,GAAKL,KAAKG,UAAU,K,oBAUxB,SAAOU,GAA6C,IAApCC,EAAmC,uDAA5B,CAACV,EAAE,EAAGC,EAAE,GAAIU,EAAgB,uDAAH,EAE9CF,EAAQG,YAAc,UACtBH,EAAQI,UAAY,EAEpBJ,EAAQK,WACNJ,EAAOV,EAAIW,EAAaf,KAAKC,OAAO,GACpCa,EAAOT,EAAIU,EAAaf,KAAKC,OAAO,GACpCc,EAAaf,KAAKE,GAAG,GACrBa,EAAaf,KAAKE,GAAG,Q,KChErBiB,E,WACJ,WAAYvB,EAAQC,EAAQC,EAAOC,GAAS,oBAE1CC,KAAKoB,YAAc,IAAIzB,EAAYC,EAAQC,EAAQC,EAAOC,GAE1DC,KAAKJ,OAASA,EACdI,KAAKH,OAASA,E,8CAEhB,SAAWO,EAAGC,GACZ,IAAIJ,EAASD,KAAKoB,YAAYC,YAC1BlB,EAAYH,KAAKoB,YAAYE,eAEjCtB,KAAKoB,YAAYG,UAAUtB,EAAO,GAAKG,EAAGH,EAAO,GAAKI,EAAGF,EAAU,GAAKC,EAAGD,EAAU,GAAKE,K,kBAE5F,SAAKD,EAAGC,GACNL,KAAKwB,WAAWpB,EAAGC,GAEnBL,KAAKJ,QAAUQ,EACfJ,KAAKH,QAAUQ,I,oBAIjB,gB,KAGIoB,E,kDACJ,WACE7B,EACAC,EACAC,EACAC,GAKC,IAAD,EAJA2B,EAIA,uDAJY,UACZC,EAGA,uDAHc,UACdC,EAEA,uDAFc,GACdC,EACA,4DADOC,EACP,2BAEA,cAAMlC,EAAQC,EAAQkC,KAAKC,IAAIlC,GAAQiC,KAAKC,IAAIjC,IAGnC,aAAT8B,GACF,EAAKI,SAAWnC,EAAQ,EACxB,EAAKoC,SAAWnC,EAAS,IAEzB,EAAKkC,QAAU,EACf,EAAKC,QAAU,GAGjB,EAAKpC,MAAQA,EACb,EAAKC,OAASA,EACd,EAAK2B,UAAYA,EACjB,EAAKC,YAAcA,EACnB,EAAKC,YAAcA,EAjBnB,E,0CAoBF,SAAOf,EAASE,EAAYoB,GAC1BtB,EAAQuB,UAAYpC,KAAK0B,UAEzBb,EAAQI,UAAYjB,KAAK4B,YAAcb,EACvCF,EAAQG,YAAchB,KAAK2B,YAE3Bd,EAAQwB,SACNF,EAAU7B,EAAIS,GAAcf,KAAKJ,OAASI,KAAKiC,SAC/CE,EAAU5B,EAAIQ,GAAcf,KAAKH,OAASG,KAAKkC,SAC/CnB,EAAagB,KAAKC,IAAIhC,KAAKF,OAC3BiB,EAAagB,KAAKC,IAAIhC,KAAKD,SAE7Bc,EAAQK,WACNiB,EAAU7B,EAAIS,GAAcf,KAAKJ,OAASI,KAAKiC,SAC/CE,EAAU5B,EAAIQ,GAAcf,KAAKH,OAASG,KAAKkC,SAC/CnB,EAAagB,KAAKC,IAAIhC,KAAKF,OAC3BiB,EAAagB,KAAKC,IAAIhC,KAAKD,a,GA9CToB,GAmDlBmB,E,kDACJ,WACE1C,EACAC,EACA0C,GAKC,IAAD,EAJAb,EAIA,uDAJY,UACZC,EAGA,uDAHc,UACdC,EAEA,uDAFc,GACdC,EACA,4DADOC,EACP,4BACA,cAAMlC,EAAO2C,EAAQ1C,EAAO0C,EAAe,EAAPA,EAAiB,EAAPA,IAIvCC,OADM,aAATX,EACY,EAEAU,EAGhB,EAAKA,OAASA,EACd,EAAKb,UAAYA,EACjB,EAAKC,YAAcA,EACnB,EAAKC,YAAcA,EAbnB,E,0CAgBF,SAAOf,EAASE,EAAYoB,GAC1BtB,EAAQuB,UAAYpC,KAAK0B,UAEzBb,EAAQI,UAAYjB,KAAK4B,YAAcb,EACvCF,EAAQG,YAAchB,KAAK2B,YAE3Bd,EAAQ4B,YACR5B,EAAQ6B,IACNP,EAAU7B,EAAIS,GAAcf,KAAKJ,OAASI,KAAKwC,QAC/CL,EAAU5B,EAAIQ,GAAcf,KAAKH,OAASG,KAAKwC,QAC/CxC,KAAKuC,OAASxB,EACd,EAAIgB,KAAKY,GACT,EAAIZ,KAAKY,IAEX9B,EAAQ+B,OACJ5C,KAAK4B,YAAc,GAAGf,EAAQgC,SAElChC,EAAQiC,gB,GA1CS3B,GA8Cf4B,E,kDACJ,WACEnD,EACAC,EACAC,EACAC,GAKC,IAAD,EAJA2B,EAIA,uDAJY,UACZC,EAGA,uDAHc,UACdC,EAEA,uDAFc,GACdC,EACA,4DADOC,EACP,2BACA,cAAMlC,EAAQC,EAAQkC,KAAKC,IAAIlC,GAAQiC,KAAKC,IAAIjC,IAEnC,aAAT8B,GACF,EAAKI,SAAWnC,EAAM,EACtB,EAAKoC,SAAWnC,EAAO,IAEvB,EAAKkC,QAAU,EACf,EAAKC,QAAU,GAIjB,EAAKtC,OAASA,EACd,EAAKC,OAASA,EACd,EAAKC,MAAQA,EACb,EAAKC,OAASA,EACd,EAAK2B,UAAYA,EACjB,EAAKC,YAAcA,EACnB,EAAKC,YAAcA,EAlBnB,E,0CAsBF,SAAOf,EAASE,EAAYoB,GAC1BtB,EAAQuB,UAAYpC,KAAK0B,UACzBb,EAAQI,UAAYF,EAAaf,KAAK4B,YACtCf,EAAQG,YAAchB,KAAK2B,YAE3B,IAAI/B,EAASuC,EAAU7B,EAAIS,GAAcf,KAAKJ,OAASI,KAAKiC,SACxDpC,EAASsC,EAAU5B,EAAIQ,GAAcf,KAAKH,OAASG,KAAKkC,SACxDpC,EAAQiB,EAAaf,KAAKF,MAC1BC,EAASgB,EAAaf,KAAKD,OAE/Bc,EAAQ4B,YACR5B,EAAQmC,OAAOpD,EAAQC,GACvBgB,EAAQoC,OAAOrD,EAASE,EAAOD,GAC/BgB,EAAQoC,OAAOrD,EAASE,EAAM,EAAGD,EAASE,GAC1Cc,EAAQoC,OAAOrD,EAAQC,GAEvBgB,EAAQ+B,OAER/B,EAAQiC,YAEJ9C,KAAK4B,YAAc,GAAIf,EAAQgC,a,GApDhB1B,GA0DRA,ICpGA+B,E,kDA7EX,WAAY9C,EAAGC,GAA6E,IAAD,EAAzE8C,EAAyE,uDAAlE,GAAIC,EAA8D,uDAAvD,eAAgBC,EAAuC,uDAA5B,IAAKjB,EAAuB,uDAAX,UAAW,4BACvF,cAAMhC,EAAGC,EAAG,EAAG,IACV8C,KAAOA,EACZ,EAAKC,KAAOA,EACZ,EAAKC,SAAWA,EAChB,EAAKjB,UAAYA,EAEjB,EAAKkB,iBAEL,EAAK/B,UAAUnB,EAAGC,GATqE,E,6CAY3F,WAAyC,IAA/BD,EAA8B,uDAA5BJ,KAAKJ,OAAQS,EAAe,uDAAbL,KAAKH,OAC5BG,KAAKoB,YAAYG,UAAUnB,EAAGC,EAAIL,KAAKD,OAAQK,EAAIJ,KAAKF,MAAOO,K,kBAGnE,SAAKD,EAAGC,GACRL,KAAKJ,QAAUQ,EACfJ,KAAKH,QAAUQ,EAEfL,KAAKuB,UAAUvB,KAAKJ,OAAQI,KAAKH,U,4BAKjC,WACIG,KAAKF,MAAQE,KAAKmD,KAAKI,OAASvD,KAAKqD,SAAW,EAChDrD,KAAKD,OAASC,KAAKqD,W,qBAGvB,SAAQF,GACJnD,KAAKmD,KAAOA,EACZnD,KAAKsD,iBACLtD,KAAKuB,UAAUvB,KAAKJ,OAAQI,KAAKH,U,qBAErC,SAAQsD,GACJnD,KAAKmD,MAAQA,EACbnD,KAAKsD,iBACLtD,KAAKuB,UAAUvB,KAAKJ,OAAQI,KAAKH,U,4BAErC,WACIG,KAAKmD,KAAOnD,KAAKmD,KAAKK,MAAM,GAAI,GAChCxD,KAAKsD,iBACLtD,KAAKuB,UAAUvB,KAAKJ,OAAQI,KAAKH,U,uBAErC,WACIG,KAAKmD,KAAO,GACZnD,KAAKsD,iBACLtD,KAAKuB,UAAUvB,KAAKJ,OAAQI,KAAKH,U,qBAIrC,SAAQ4D,GACJzD,KAAKoD,KAAOK,I,yBAEhB,SAAYJ,GACRrD,KAAKqD,SAAWA,I,oBAGpB,SAAOxC,EAASE,EAAYoB,GACxBtB,EAAQuC,KAAR,UAAkBpD,KAAKqD,SAAWtC,EAAlC,cAAkDf,KAAKoD,MACvDvC,EAAQuB,UAAYpC,KAAKoC,UAEzBpC,KAAKF,MAAQe,EAAQ6C,YAAY1D,KAAKmD,MAAMrD,MAAQiB,EACpDf,KAAKuB,UAAUvB,KAAKJ,OAAQI,KAAKH,QAEjCgB,EAAQ8C,SACJ3D,KAAKmD,KACLhB,EAAU7B,EAAIS,EAAaf,KAAKJ,OAChCuC,EAAU5B,EAAIQ,EAAaf,KAAKH,Y,GAtEzBsB,GCFbyC,E,WAEJ,WAAY9D,EAAOC,EAAQ8D,GAAU,oBACnC7D,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EACdC,KAAK6D,QAAUA,EAEf7D,KAAK8D,OAAS,GAId9D,KAAK+D,QAAU,GACf/D,KAAKgE,KAAOhE,KAAKgE,KAAKC,KAAKjE,MAE3BA,KAAKkE,UAAW,E,6CAGlB,SAAUC,GACRnE,KAAK+D,QAAQK,KAAKD,K,wBAGpB,SAAWE,GAAO,IAAD,OACfA,EAAKC,SAAQ,SAACH,GACZ,EAAKJ,QAAQK,KAAKD,Q,0BAItB,SAAaA,GACXnE,KAAK+D,QAAQQ,OAAOvE,KAAK+D,QAAQS,QAAQL,GAAM,K,iCAGjD,WACE,OAAOnE,KAAK6D,U,2BAGd,SAAczD,EAAGC,GAGf,IAAIoE,EAAUzE,KAAK0E,sBACnB,MAAO,CAAEtE,EAAGA,EAAIqE,EAAQ1D,WAAYV,EAAGA,EAAIoE,EAAQ1D,c,4BAErD,SAAeX,EAAGC,GAGhB,IAAIoE,EAAUzE,KAAK0E,sBACnB,MAAO,CAAEtE,EAAGA,EAAIqE,EAAQtC,UAAU7B,EAAGD,EAAGA,EAAIoE,EAAQtC,UAAU5B,K,yBAEhE,SAAYH,EAAGC,GAEb,IAAIoE,EAAUzE,KAAK0E,sBACnB,MAAO,CACLtE,GAAIA,EAAIqE,EAAQtC,UAAU7B,GAAKmE,EAAQ1D,WACvCV,GAAIA,EAAIoE,EAAQtC,UAAU5B,GAAKkE,EAAQ1D,c,iCAI3C,WACE,IAAI4D,EAAOC,OAAOC,WACdC,EAAOF,OAAOG,YACdC,EAAkB,EAAdhF,KAAK8D,OAEb,GAAIa,EAAOG,EAAO9E,KAAKF,MAAQE,KAAKD,OAClC,IAAIkF,EAAS,IACTC,EAAOJ,EAAOE,EAEdG,GAASR,GADTS,EAAOpF,KAAKF,OAASoF,EAAOlF,KAAKD,UACT,EACxBsF,EAAQrF,KAAK8D,YACZ,GAAIa,EAAOG,EAAO9E,KAAKF,MAAQE,KAAKD,OACzC,CAAIkF,EAAS,IAAb,IACIG,EAAOT,EAAOK,EACdE,EAAOlF,KAAKD,QAAUqF,EAAOpF,KAAKF,OAClCqF,EAAQnF,KAAK8D,OACbuB,GAASP,EAAOI,GAAQ,MACvB,CACDD,EAAS,KACb,GAAIN,GAAQG,EACNM,EAAOT,EAAOK,EACdE,EAAOlF,KAAKD,QAAUC,KAAKF,MAAQ6E,QAEnCO,EAAOJ,EAAOE,EACdI,EAAOpF,KAAKF,OAASE,KAAKD,OAAS+E,GAI3C,GAAe,MAAXG,EACF,IAAIlE,EAAaqE,EAAOpF,KAAKF,WAEzBiB,EAAamE,EAAOlF,KAAKD,OAG/B,MAAO,CACLD,MAAOsF,EACPrF,OAAQmF,EACRD,OAAQA,EACR9C,UAAW,CAAE7B,EAAG6E,EAAO5E,EAAG8E,GAC1BtE,WAAYA,K,0BAIhB,SAAaF,EAAS4D,GACpB5D,EAAQuB,UAAYpC,KAAK6D,QACzBhD,EAAQwB,SACNoC,EAAQtC,UAAU7B,EAClBmE,EAAQtC,UAAU5B,EAClBkE,EAAQ3E,MACR2E,EAAQ1E,U,yBAIZ,SAAYc,EAAS4D,GACnBzE,KAAK+D,QAAQO,SAAQ,SAACH,GACpBA,EAAImB,OAAOzE,EAAS4D,EAAQ1D,WAAY0D,EAAQtC,gB,kBAIpD,SAAKtB,GACH,IAAM4D,EAAUzE,KAAK0E,sBAErB1E,KAAKuF,aAAa1E,EAAS4D,GAC3BzE,KAAKwF,YAAY3E,EAAS4D,O,KAIxBgB,E,kDACJ,WAAY3F,EAAO+D,GAAU,uCACrB/D,EAAO,EAAIA,EAAO+D,G,gDAG1B,SAAahD,EAAS4D,GACpB5D,EAAQuB,UAAYpC,KAAK6D,QACzBhD,EAAQwB,SACN,EACA,EACAuC,OAAOC,WACPD,OAAOG,iB,GAXwBnB,GA2B/B8B,E,kDACJ,WAAY7B,GAAU,IAAD,8BACnB,cAAM,IAAM,IAAMA,IACbE,QAAU,CACb,IAAIb,EACF,EACC0B,OAAOG,YAAc,EAAK,EAC3B,sBACA,gBACA,IACA,YAIJ,EAAKb,UAAW,EAbG,E,uBADEN,GAkBVA,IC1KA,GACb+B,UAAW,CAAC,UAAW,kBAAmB,YAC1CC,YAAa,CACX,CAAEC,KAAM,KAAM/F,MAAO,KAAMC,OAAQ,MACnC,CAAE8F,KAAM,KAAM/F,MAAO,KAAMC,OAAQ,MACnC,CAAE8F,KAAM,KAAM/F,MAAO,KAAMC,OAAQ,MACnC,CAAE8F,KAAM,KAAM/F,MAAO,KAAMC,OAAQ,MACnC,CAAE8F,KAAM,KAAM/F,MAAO,KAAMC,OAAQ,OAErC+F,iBAAkB,CAAC,WAAY,cAC/BC,OAAQ,CACNC,eAAgB,UAChBC,UAAW,UACXC,KAAM,UACNC,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,QAAS,YCdPC,E,WACJ,WAAYnG,EAAGC,GAAI,oBACjBL,KAAKC,OAAS,CAAEG,EAAGA,EAAGC,EAAGA,GAEzBL,KAAKoB,YAAc,IAAIzB,EAAY,EAAG,EAAG,EAAG,G,mDAG9C,WACE6G,QAAQC,IAAI,UAAWzG,Q,oBAGzB,SAAOa,EAAS6F,Q,KAGZC,E,kDACJ,WAAYvG,EAAGC,EAAGC,EAAGC,GAAI,IAAD,8BACtB,cAAMH,EAAGC,IAEJP,MAAQQ,EACb,EAAKP,OAASQ,EAEd,EAAKqG,GAAKC,EAAQd,OAAOG,KACzB,EAAKY,GAAKD,EAAQd,OAAOI,SACzB,EAAKY,GAAK,EAEV,EAAK3F,YAAc,IAAIzB,EACrBS,EACAC,EAAI,EAAK0G,GACTzG,EAAI,EAAKyG,GACTxG,EAAI,EAAKwG,IAdW,E,0CAkBxB,SAAOlG,EAAS6F,GACd7F,EAAQuB,UAAYpC,KAAK4G,GACzB/F,EAAQG,YAAchB,KAAK8G,GAC3BjG,EAAQI,UAAYjB,KAAK+G,GAMzBlG,EAAQwB,SACNqE,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKF,MACLE,KAAKD,QAEPc,EAAQK,WACNwF,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKF,MACLE,KAAKD,Y,GAtCewG,GA4CpBS,E,kDACJ,WAAY5G,EAAGC,EAAG8C,GAAkB,IAAD,EAAX8D,EAAW,uDAAJ,GAAI,4BACjC,cAAM7G,EAAGC,IAEJ8C,KAAOA,EAGZ,EAAKpD,OAASkH,EACd,EAAKC,UAA2B,EAAd,EAAKnH,OAAc,EAErC,EAAKD,MAAS,EAAKC,OAAS,EAAKoD,KAAKI,OAAU,EAEhD,EAAKH,KAAL,UAAe,EAAKrD,OAApB,uBACA,EAAK6G,GAAKC,EAAQd,OAAOI,SAEzB,EAAK/E,YAAc,IAAIzB,EACrBS,EACAC,EAAI,EAAK6G,UACT,EAAKpH,MACL,EAAKC,QAlB0B,E,0CAsBnC,SAAOc,EAAS6F,GACd7F,EAAQuC,KAAOpD,KAAKoD,KACpBvC,EAAQuB,UAAYpC,KAAK4G,GAEzB/F,EAAQ8C,SACN3D,KAAKmD,KACLuD,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,O,GA9BVkG,GAoClBY,E,kDACJ,WAAY/G,EAAGC,EAAG+G,EAAUH,GAAO,uCAC3B7G,EAAGC,EAAG+G,EAAUH,G,0CAExB,SAAOpG,EAAS6F,GACd7F,EAAQuC,KAAOpD,KAAKoD,KACpBvC,EAAQuB,UAAYpC,KAAK4G,GAEzB/F,EAAQ8C,SACN3D,KAAKmD,OACLuD,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,O,GAXA2G,GAiB5BK,E,kDACJ,WAAYjH,EAAGC,EAAG8C,GAAkB,IAAD,EAAX8D,EAAW,uDAAJ,GAAI,4BACjC,cAAM7G,EAAGC,EAAG8C,EAAM8D,IAEblH,OAASkH,EACd,EAAKC,UAA2B,EAAd,EAAKnH,OAAc,EAErC,EAAKD,MAAS,EAAKC,OAAS,EAAKoD,KAAKI,OAAU,EAChD,EAAKH,KAAL,UAAe,EAAKrD,OAApB,mBAEA,EAAKqB,YAAc,IAAIzB,EACrBS,EACAC,EAAI,EAAK6G,UACT,EAAKpH,MACL,EAAKC,QAb0B,E,uBADZiH,GAmBnBM,E,kDACJ,WAAYlH,EAAGC,EAAG8C,GAAO,IAAD,8BACtB,cAAM/C,EAAGC,EAAG8C,IAEPoE,OAAQ,EACb,EAAKC,WAAa,CAAEC,IAAKZ,EAAQd,OAAOG,KAAMwB,GAAIb,EAAQd,OAAOO,SACjE,EAAKqB,eAAiB,EAAK5H,OAC3B,EAAK6H,YAAc,IAAM,EAAKD,eAC9B,EAAK7H,MAAQ,EAAKA,MAAQ,EAAK8H,YAE/B,EAAKxG,YAAc,IAAIzB,EACrBS,EACAC,EAAI,EAAK6G,UACT,EAAKpH,MACL,EAAKC,QAbe,E,mDAiBxB,WACEC,KAAKuH,OAASvH,KAAKuH,Q,oBAGrB,SAAO1G,EAAS6F,GACd7F,EAAQuC,KAAOpD,KAAKoD,KACpBvC,EAAQuB,UAAYpC,KAAK4G,GAEzB/F,EAAQG,YAAchB,KAAK4G,GAC3B/F,EAAQI,UAAY,EAEpBJ,EAAQ8C,SACN3D,KAAKmD,KACLuD,EAAYtG,EAAIJ,KAAKC,OAAOG,EAAIJ,KAAK4H,YACrClB,EAAYrG,EAAIL,KAAKC,OAAOI,GAG1BL,KAAKuH,MACP1G,EAAQuB,UAAYpC,KAAKwH,WAAWE,GAEpC7G,EAAQuB,UAAYpC,KAAKwH,WAAWC,IAGtC5G,EAAQwB,SACNqE,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAAIL,KAAKkH,UACrClH,KAAK2H,eACL3H,KAAK2H,gBAGP9G,EAAQK,WACNwF,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAAIL,KAAKkH,UACrClH,KAAK2H,eACL3H,KAAK2H,oB,GApDmBX,GA0DxBa,E,kDACJ,WAAYzH,EAAGC,EAAGC,GAA8B,IAAD,EAA1BC,EAA0B,uDAAtB,GAAIuH,EAAkB,4DAAXhG,EAAW,4BAC7C,cAAM1B,EAAGC,IAEJP,MAAQQ,EACb,EAAKP,OAASQ,EAEd,EAAKuH,KAAOA,EAEZ,EAAKlB,GAAKC,EAAQd,OAAOI,SACzB,EAAKW,GAAKD,EAAQd,OAAOI,SACzB,EAAKY,GAAK,EAEV,EAAKgB,eAAiB,GACtB,EAAKC,UAAY,EAAKjI,OAAS,EAE/B,EAAKqB,YAAc,IAAIzB,EACrBS,EACAC,EAAI,EAAK0G,GACTzG,EAAI,EAAKyG,GACTxG,EAAI,EAAKwG,IAGX,EAAKkB,aAAa,EAAKF,gBAtBsB,E,mDAyB/C,SAAgB3H,EAAGC,GACjB,IAAI6H,GAAY9H,EAAIJ,KAAKC,OAAOG,GAAKJ,KAAKF,MAC1CE,KAAKiI,aAAaC,K,0BAGpB,WACE,OAAOlI,KAAK+H,iB,0BAEd,SAAaI,GAETnI,KAAK+H,eADHI,EAAM,EACc,EACbA,EAAM,EACO,EAEAA,EAEpBnI,KAAK8H,MACP9H,KAAK8H,KAAK9H,KAAK+H,kB,oBAInB,SAAOlH,EAAS6F,GACd7F,EAAQuB,UAAYpC,KAAK4G,GACzB/F,EAAQG,YAAchB,KAAK8G,GAC3BjG,EAAQI,UAAYjB,KAAK+G,GAGzBlG,EAAQ4B,YACR5B,EAAQmC,OACN0D,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAAIL,KAAKD,OAAS,GAEhDc,EAAQoC,OACNyD,EAAYtG,EAAIJ,KAAKC,OAAOG,EAAIJ,KAAKF,MACrC4G,EAAYrG,EAAIL,KAAKC,OAAOI,EAAIL,KAAKD,OAAS,GAEhDc,EAAQgC,SACRhC,EAAQiC,YAERjC,EAAQwB,SACNqE,EAAYtG,EACVJ,KAAKC,OAAOG,EACZJ,KAAK+H,gBAAkB/H,KAAKF,MAAQE,KAAKgI,WAC3CtB,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKgI,UACLhI,KAAKD,QAEPc,EAAQG,YAAc6F,EAAQd,OAAOG,KACrCrF,EAAQK,WACNwF,EAAYtG,EACVJ,KAAKC,OAAOG,EACZJ,KAAK+H,gBAAkB/H,KAAKF,MAAQE,KAAKgI,WAC3CtB,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKgI,UACLhI,KAAKD,Y,GAhFewG,GAsFXA,ICnMA6B,E,WAvEb,WAAYhI,EAAGC,EAAGP,EAAOC,EAAQ+D,EAAQuE,GAA4B,oBACnErI,KAAKI,EAAIA,EACTJ,KAAKK,EAAIA,EACTL,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EACdC,KAAK8D,OAASA,EACd9D,KAAKqI,OAASA,EACdrI,KAAKsI,MAAQtI,KAAKqI,OAAS,EAE3BrI,KAAKuI,WAAa,GAElBvI,KAAKoB,YAAc,IAAIzB,EACrBK,KAAKI,EAAIJ,KAAKsI,MACdtI,KAAKK,EAAIL,KAAKsI,MACdtI,KAAKF,MAAQE,KAAKqI,OAClBrI,KAAKD,OAASC,KAAKqI,Q,wDAIvB,SAAqBjI,EAAGC,GACtB,IAAImI,EAAUxI,KAAKyI,QAQnB,OANAzI,KAAKoB,YAAc,IAAIzB,EACrB6I,EAAQpI,EAAIJ,KAAKsI,MACjBE,EAAQnI,EAAIL,KAAKsI,MACjBtI,KAAKF,MAAQE,KAAKqI,OAClBrI,KAAKD,OAASC,KAAKqI,UAEjBrI,KAAKoB,YAAYsH,eAAetI,EAAGC,KACrCL,KAAKuI,WAAWI,KAAI,SAACC,GACfA,EAAKxH,YAAYsH,eAAetI,EAAIoI,EAAQpI,EAAGC,EAAImI,EAAQnI,IAC7DuI,EAAKC,gBAAgBzI,EAAIoI,EAAQpI,EAAGC,EAAImI,EAAQnI,OAE7C,K,mBAKX,WAUE,MAAO,CAAED,EANLJ,KAAKI,EAAI,EACPwE,OAAOC,WAAa7E,KAAKI,EACpBJ,KAAKI,EAIDC,EAHXL,KAAKK,EAAI,EACPuE,OAAOG,YAAc/E,KAAKK,EACrBL,KAAKK,K,8BAIlB,SAAiBQ,EAAS2H,GACxBxI,KAAKuI,WAAWI,KAAI,SAACC,GACnB,IAAIlC,EAAc8B,EAClBI,EAAKtD,OAAOzE,EAAS6F,Q,oBAGzB,SAAO7F,GACLA,EAAQuB,UAAYyE,EAAQd,OAAOG,KACnCrF,EAAQG,YAAc6F,EAAQd,OAAOI,SACrCtF,EAAQI,UAAYjB,KAAKqI,OAEzB,IAAIG,EAAUxI,KAAKyI,QAEnB5H,EAAQwB,SAASmG,EAAQpI,EAAGoI,EAAQnI,EAAGL,KAAKF,MAAOE,KAAKD,QACxDc,EAAQK,WAAWsH,EAAQpI,EAAGoI,EAAQnI,EAAGL,KAAKF,MAAOE,KAAKD,QAE1DC,KAAK8I,iBAAiBjI,EAAS2H,O,KC1E7BO,E,kDACJ,WAAY3I,EAAGC,EAAGC,EAAGC,EAAGyI,GAAO,IAAD,8BAC5B,cAAM5I,EAAGC,EAAGC,EAAGC,IAEVyI,KAAOA,EACZ,EAAKpC,GAAKC,EAAQd,OAAOE,UACzB,EAAKgD,SAAWpC,EAAQd,OAAOM,UAC/B,EAAKU,GAAK,EANkB,E,0CAS9B,SAAOlG,EAAS6F,GAA8B,IAAjBwC,EAAgB,wDAC3CrI,EAAQuB,UAAYpC,KAAK4G,GACzB/F,EAAQG,YAAchB,KAAK8G,GACvBoC,IAAQrI,EAAQG,YAAchB,KAAKiJ,UACvCpI,EAAQI,UAAYjB,KAAK+G,GAEzBlG,EAAQwB,SACNqE,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKF,MACLE,KAAKD,QAGP,IAAIoJ,EAAO,IAAIC,MACfD,EAAKE,IAAMrJ,KAAKgJ,KAAKG,KACrBtI,EAAQyI,UACNH,EACAzC,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,GAG9BQ,EAAQK,WACNwF,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKF,MACLE,KAAKD,Y,GAnCmB4G,GA6Gf4C,E,kDAnEb,WAAYC,GAAc,IAAD,sBACvB,IACIzJ,EAAUD,GAAaiC,KAAK0H,KAAKD,EAAYE,MAAMnG,OAAS,IAIhE,eAAO,MAAO,GAAKxD,GALP,IAKuBA,EAHtB,GACA,IAGRyJ,YAAcA,EAEnB,EAAKG,UAAY,GAEjB,EAAKC,YAAc,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKL,YAAYE,MAAMnG,OAAQsG,IAAK,CACtD,IAAIC,EAAU,EAAKhG,QAAU,EAAKA,OAAS,EAAK6F,YAAcE,EAAI,GAC9DE,EACF,EAAKjG,QACJ,EAAKA,OAAS,EAAK6F,WAAa5H,KAAK0H,MAAMI,EAAI,IAAO,EAAI,GAC7D,EAAKtB,WAAWnE,KACd,IAAI2E,EACFe,EACAC,EACA,EAAKJ,UACL,EAAKA,UACL,EAAKH,YAAYE,MAAMG,KAvBN,S,mDA6BzB,SAAgBb,GACVA,IAAShJ,KAAKwJ,YAAYQ,aAC5BhK,KAAKwJ,YAAYS,eACjBjK,KAAKwJ,YAAYQ,WAAahB,EAC9BhJ,KAAKwJ,YAAYU,gB,kCAIrB,SAAqB9J,EAAGC,GAAI,IAAD,OACrBmI,EAAUxI,KAAKyI,QAQnB,OANAzI,KAAKoB,YAAc,IAAIzB,EACrB6I,EAAQpI,EAAIJ,KAAKsI,MACjBE,EAAQnI,EAAIL,KAAKsI,MACjBtI,KAAKF,MAAQE,KAAKqI,OAClBrI,KAAKD,OAASC,KAAKqI,UAEjBrI,KAAKoB,YAAYsH,eAAetI,EAAGC,KACrCL,KAAKuI,WAAWI,KAAI,SAACC,GACfA,EAAKxH,YAAYsH,eAAetI,EAAIoI,EAAQpI,EAAGC,EAAImI,EAAQnI,IAC7D,EAAKwI,gBAAgBD,EAAKI,UAEvB,K,8BAKX,SAAiBnI,EAAS2H,GAAU,IAAD,OAC7B9B,EAAc8B,EAClBxI,KAAKuI,WAAWI,KAAI,SAACC,GACnB,IAAIM,GAAS,EACTN,EAAKI,OAAS,EAAKQ,YAAYQ,aAAYd,GAAS,GAExDN,EAAKtD,OAAOzE,EAAS6F,EAAawC,U,GA/DlBd,GC3CtB,SAAS+B,EAAM/J,EAAGC,GAChBL,KAAKI,EAAIA,EACTJ,KAAKK,EAAIA,E,IAiII+J,E,kDA5Hb,aAAqE,IAAD,EAAxDC,EAAwD,uDAA/C,GAAIC,EAA2C,uDAA7B,GAAIC,EAAyB,uDAAX,UAAW,4BAClE,cAAM,EAAG,EAAG,EAAG,IAEVF,OAAS,GACd,EAAKG,UAAUH,GAEf,EAAKC,YAAcA,EACnB,EAAKC,YAAcA,EAEnB,EAAKE,SAAW,EAAKA,SAASxG,KAAd,gBAChB,EAAKuG,UAAY,EAAKC,SAASxG,KAAd,gBAViD,E,4CAapE,SAAS7D,EAAGC,GAAI,IAAD,EACbL,KAAKqK,OAAOjG,KAAK,IAAI+F,EAAM/J,EAAGC,KAC9B,EAAAL,KAAKoB,aAAYG,UAAjB,oBAA8BvB,KAAK0K,yB,uBAErC,SAAUL,GAAS,IAAD,SAChBA,EAAO/F,SAAQ,SAACqG,GACd,EAAKN,OAAOjG,KAAK,IAAI+F,EAAMQ,EAAE,GAAIA,EAAE,SAErC,EAAA3K,KAAKoB,aAAYG,UAAjB,oBAA8BvB,KAAK0K,yB,gCAIrC,WAEE,IAAIE,EAAO5K,KAAKqK,OAAO,GAAGjK,EACtByK,EAAO7K,KAAKqK,OAAO,GAAGhK,EACtByK,EAAO9K,KAAKqK,OAAO,GAAGjK,EACtB2K,EAAO/K,KAAKqK,OAAO,GAAGhK,EAO1B,OANAL,KAAKqK,OAAO1B,KAAI,SAAAqC,GACVA,EAAM5K,EAAIwK,IAAMA,EAAOI,EAAM5K,GAC7B4K,EAAM3K,EAAIwK,IAAMA,EAAOG,EAAM3K,GAC7B2K,EAAM5K,EAAI0K,IAAMA,EAAOE,EAAM5K,GAC7B4K,EAAM3K,EAAI0K,IAAMA,EAAOC,EAAM3K,MAE5B,CACLuK,EAAMC,EACNC,EAAMC,K,kBAKV,SAAK3K,EAAGC,GAAI,IAAD,EACTL,KAAKqK,OAAO1B,KAAI,SAAAqC,GACdA,EAAM5K,GAAKA,EACX4K,EAAM3K,GAAKA,MAGb,EAAAL,KAAKoB,aAAYG,UAAjB,oBAA8BvB,KAAK0K,yB,2BAGrC,SAAcO,EAAIC,GAChB,IAAIC,EAASF,EAAG7K,EAAI8K,EAAG9K,EACnBgL,EAASH,EAAG5K,EAAI6K,EAAG7K,EAEvB,OADW0B,KAAKsJ,KAAKtJ,KAAKuJ,IAAIH,EAAQ,GAAKpJ,KAAKuJ,IAAIF,EAAQ,M,qBAG9D,WAQE,IANA,IACIG,EAAevL,KAAKqK,OAAO9G,OAC3BiI,EAAgB,EAIX3B,EAAI,EAAGA,EAAI7J,KAAKqK,OAAO9G,OAAQsG,IAClC7J,KAAKyL,cAAczL,KAAKqK,OAAOR,EAAI,GAAI7J,KAAKqK,OAAOR,IAJxC,MAMTA,EAAI7J,KAAKqK,OAAO9G,OATL,IAUbiI,GAVa,EAWbxL,KAAKqK,OAAO9F,OAAOsF,EAXN,IAgBnBrD,QAAQC,IAAR,yBAA8B+E,EAA9B,8BAAiED,M,oBAGnE,SAAO1K,EAASE,EAAYoB,GAC1BtB,EAAQI,UAAYF,EAAaf,KAAKsK,YACtCzJ,EAAQG,YAAchB,KAAKuK,YAE3B1J,EAAQ4B,YACRzC,KAAKqK,OAAO/F,SAAQ,SAACqG,GACnB9J,EAAQoC,OACNd,EAAU7B,EAAIS,EAAa4J,EAAEvK,EAC7B+B,EAAU5B,EAAIQ,EAAa4J,EAAEtK,MAGjCQ,EAAQgC,SACRhC,EAAQiC,gB,GA7FO3B,GCIbuK,E,kDACJ,WAAYtL,EAAGC,EAAGsL,EAAGC,EAAOC,GAAoB,IAAD,8BAC7C,cAAMzL,EAAGC,EAAGsL,EAAGA,IAEV/E,GAAKgF,EACV,EAAK9E,GAAKD,EAAQd,OAAOI,SACzB,EAAKY,GAAK,EAEV,EAAK8E,kBAAoBA,EAPoB,E,uBADlBlF,GAYzBmF,E,kDACJ,WAAY1L,EAAGC,EAAG0L,GAAwC,IAAD,EAA5BC,EAA4B,uDAAjB,GAAIxC,EAAa,2DACvD,IAAIyC,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGEnI,EAAS/B,KAAKmK,MAAOF,EAAW,EAAK,GACrCG,EAAYpK,KAAK0H,KAAKwC,EAAO1I,OAASwI,GACtCzL,EAAIwD,EAASiI,GAAajI,EAASkI,GACnCzL,EAAIuD,EAASqI,GAAarI,EAASkI,IACvC,cAAM5L,EAAGC,EAAGC,EAAGC,IAEVuD,OAASA,EACd,EAAKiI,UAAYA,EACjB,EAAKI,UAAYA,EACjB,EAAKH,SAAWA,EAEhB,EAAKC,OAASA,EACd,EAAKG,YAAcH,EAAO,GAE1B,EAAKzC,YAAcA,EAEnB,EAAKpI,YAAc,IAAIzB,EAAYS,EAAGC,EAAGC,EAAGC,GAE5C,EAAK8L,cAAgB,CACnB,IAAIX,EACF,EAAKzL,OAAOG,EAAI,EAAK0D,OACrB,EAAK7D,OAAOI,EAAI,EAAKyD,OAAS,EAAKqI,WAAarI,EAASkI,GACzC,EAAhB,EAAKA,SACL,EAAKxC,YAJP,iBAQF,IAAK,IAAIK,EAAI,EAAGA,EAAIoC,EAAO1I,OAAQsG,IACjC,EAAKwC,cAAcjI,KACjB,IAAIsH,EACF,EAAKzL,OAAOG,EACV,EAAK0D,OACJ+F,EAAI,EAAKkC,WAAcjI,EAASkI,GACnC,EAAK/L,OAAOI,EACV,EAAKyD,OACL/B,KAAKuK,MAAMzC,EAAI,EAAKkC,YAAcjI,EAASkI,GAC7C,EAAKA,SACL,EAAKC,OAAOpC,GARd,iBArDmD,OAmEvD,EAAK0C,iBAnEkD,E,kDAsEzD,WACEvM,KAAKqM,cAAc,GAAGzF,GAAK5G,KAAKoM,YAChCpM,KAAKwJ,YAAYxI,YAAchB,KAAKoM,c,4BAEtC,WACE,OAAOpM,KAAKoM,c,6BAGd,SAAgBhM,EAAGC,GAAI,IAAD,OACpBL,KAAKqM,cAAc1D,KAAI,SAACC,GACtB,GAAIA,EAAKxH,YAAYsH,eAAetI,EAAGC,GAIrC,OAHA,EAAK+L,YAAcxD,EAAKhC,GAExB,EAAK2F,iBACE3D,O,8BAKb,SAAiB/H,EAAS6F,GACxB1G,KAAKqM,cAAc1D,KAAI,SAACC,GACtBA,EAAKtD,OAAOzE,EAAS6F,Q,oBAGzB,SAAO7F,EAAS6F,GACd1G,KAAK8I,iBAAiBjI,EAAS6F,O,GAhGOH,GAoGpCiG,E,kDACJ,WAAYpM,EAAGC,EAAGsL,EAAGc,GAAQ,IAAD,8BAC1B,cAAMrM,EAAGC,EAAGsL,EAAGA,IAEVK,SAAWL,EAChB,EAAKc,MAAQA,EAJa,E,0CAO5B,SAAO5L,EAAS6F,GACd7F,EAAQuB,UAAYpC,KAAK4G,GACzB/F,EAAQG,YAAchB,KAAK8G,GAC3BjG,EAAQI,UAAYjB,KAAK+G,GAEzBlG,EAAQwB,SACNqE,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKF,MACLE,KAAKD,QAGP,IAAIoJ,EAAO,IAAIC,MACfD,EAAKE,IAAMrJ,KAAKyM,MAGhB5L,EAAQyI,UACNH,EACAzC,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKgM,SACLhM,KAAKgM,UAGPnL,EAAQK,WACNwF,EAAYtG,EAAIJ,KAAKC,OAAOG,EAC5BsG,EAAYrG,EAAIL,KAAKC,OAAOI,EAC5BL,KAAKF,MACLE,KAAKD,Y,GApCoB4G,GA0CzB+F,E,kDACJ,WAAYtM,EAAGC,EAAG0L,GAAwC,IAAD,EAA5BC,EAA4B,uDAAjB,GAAIxC,EAAa,2DACvD,IAAImD,EAAS,CAAC,SAAU,YAAa,YAEjC7I,EAAS/B,KAAKmK,MAAOF,EAAW,EAAK,GACrCG,EAAYpK,KAAK0H,KAAKkD,EAAOpJ,OAASwI,GACtCzL,EAAIwD,EAASiI,GAAajI,EAASkI,GACnCzL,EAAIuD,EAASqI,GAAarI,EAASkI,IAEvC,cAAM5L,EAAGC,EAAGC,EAAGC,IAEVuD,OAASA,EACd,EAAKiI,UAAYA,EACjB,EAAKI,UAAYA,EACjB,EAAKH,SAAWA,EAEhB,EAAKW,OAASA,EACd,EAAKC,YAAcD,EAAO,GAE1B,EAAKE,MAAQ,GACb,IAAK,IAAIhD,EAAI,EAAGA,EAAI8C,EAAOpJ,OAAQsG,IACjC,EAAKgD,MAAMzI,KAAK,sBAAwB,EAAKuI,OAAO9C,GAAK,QAG3D,EAAKV,KAAO,EAAK0D,MAAM,GAEvB,EAAKrD,YAAcA,EAEnB,EAAKpI,YAAc,IAAIzB,EAAYS,EAAGC,EAAGC,EAAGC,GAE5C,EAAK8L,cAAgB,CACnB,IAAIG,EACF,EAAKvM,OAAOG,EAAI,EAAK0D,OACrB,EAAK7D,OAAOI,EAAI,EAAKyD,OAAS,EAAKqI,WAAarI,EAASkI,GACzC,EAAhB,EAAKA,SACL,EAAK7C,OAGT,IAAK,IAAIU,EAAI,EAAGA,EAAI8C,EAAOpJ,OAAQsG,IACjC,EAAKwC,cAAcjI,KACjB,IAAIoI,EACF,EAAKvM,OAAOG,EACV,EAAK0D,OACJ+F,EAAI,EAAKkC,WAAcjI,EAASkI,GACnC,EAAK/L,OAAOI,EACV,EAAKyD,OACL/B,KAAKuK,MAAMzC,EAAI,EAAKkC,YAAcjI,EAASkI,GAC7C,EAAKA,SACL,EAAKa,MAAMhD,KA/CsC,OAoDvD,EAAKiD,iBApDkD,E,kDAsDzD,WACE9M,KAAKqM,cAAc,GAAGI,MAAQzM,KAAKmJ,KACnCnJ,KAAKwJ,YAAYiD,MAAQzM,KAAK4M,c,6BAGhC,SAAgBxM,EAAGC,GAAI,IAAD,OACpBL,KAAKqM,cAAc1D,KAAI,SAACC,GACtB,GAAIA,EAAKxH,YAAYsH,eAAetI,EAAGC,GAKrC,OAJA,EAAK8I,KAAOP,EAAK6D,MACjB,EAAKG,YAAc,EAAKzD,KAAK4D,UAAU,GAAI,EAAK5D,KAAK5F,OAAS,GAE9D,EAAKuJ,iBACElE,O,8BAKb,SAAiB/H,EAAS6F,GACxB1G,KAAKqM,cAAc1D,KAAI,SAACC,GACtBA,EAAKtD,OAAOzE,EAAS6F,Q,oBAGzB,SAAO7F,EAAS6F,GACd1G,KAAK8I,iBAAiBjI,EAAS6F,O,GA9EOH,GA+M3ByG,E,kDA5Hb,WAAYxD,GAAc,IAAD,6BAMvB,eAAO,KAAM,IALD,IACC,IACA,GACA,IAGRA,YAAcA,EAEnB,EAAKjB,WAAa,CAChB,IAAIlB,EAAW,EAAG,GAAI,gBAAiB,IACvC,IAAIF,EACF,EACA,IACA,WACE,MAAO,KAAO,EAAKqC,YAAYQ,WAAWnE,OAE5C,KAGJ,EAAKoH,aAAe,CAClBC,OAAQ,CACN3E,WAAY,GACZtB,KAAM,CAAElH,OAAQ,MAElBoN,OAAQ,CACN5E,WAAY,CACV,IAAIuD,EAA4B,EAAG,GAAI,EAAG,GAAI,EAAKtC,aACnD,IAAIxC,EAAU,GAAI,IAAK,aAAc,IACrC,IAAIa,EAAY,GAAI,IAAK,IAAK,IAAI,SAACM,GACjC,EAAKqB,YAAY4D,kBAA0B,GAANjF,MAGzClB,KAAM,CAAElH,OAAQ,MAElBsN,OAAQ,CACN9E,WAAY,CACV,IAAIvB,EAAU,GAAI,GAAI,aAAc,IACpC,IAAIa,EAAY,GAAI,GAAI,IAAK,IAAI,SAACM,GAChC,EAAKqB,YAAY8D,kBAA0B,GAANnF,MAGzClB,KAAM,CAAElH,OAAQ,MAElBoD,KAAM,CACJoF,WAAY,CACV,IAAIvB,EAAU,GAAI,GAAI,YAAa,IACnC,IAAIa,EAAY,GAAI,GAAI,IAAK,IAAI,SAACM,GAChC,EAAKqB,YAAYnG,SAAiB,IAAN8E,MAGhClB,KAAM,CAAElH,OAAQ,MAElB4M,OAAQ,CACNpE,WAAY,CACV,IAAImE,EAA4B,EAAG,GAAI,EAAG,GAAI,EAAKlD,aACnD,IAAIxC,EAAU,GAAI,IAAK,eAAgB,IACvC,IAAIa,EAAY,GAAI,IAAK,IAAK,IAAI,SAACM,GACjC,EAAKqB,YAAY5H,YAAoB,GAANuG,MAGnClB,KAAM,CAAElH,OAAQ,OA7DG,E,wDAkEzB,SAAqBK,EAAGC,GACtB,IAAImI,EAAUxI,KAAKyI,QAQnB,OAPAzI,KAAKoB,YAAc,IAAIzB,EACrB6I,EAAQpI,EAAIJ,KAAKsI,MACjBE,EAAQnI,EAAIL,KAAKsI,MACjBtI,KAAKF,MAAQE,KAAKqI,OAClBrI,KAAKD,OAASC,KAAKqI,UAGjBrI,KAAKoB,YAAYsH,eAAetI,EAAGC,KACvB,sBACTL,KAAKuI,YADI,YAETvI,KAAKiN,aAAajN,KAAKwJ,YAAYQ,WAAWnE,MAAM0C,aAG9CI,KAAI,SAACC,GACVA,EAAKxH,YAAYsH,eAAetI,EAAIoI,EAAQpI,EAAGC,EAAImI,EAAQnI,IAC7DuI,EAAKC,gBAAgBzI,EAAIoI,EAAQpI,EAAGC,EAAImI,EAAQnI,OAG7C,K,8BAKX,SAAiBQ,EAAS2H,GAAU,IAAD,OAC7B9B,EAAc8B,EAEJ,sBACTxI,KAAKuI,YADI,YAETvI,KAAKiN,aAAajN,KAAKwJ,YAAYQ,WAAWnE,MAAM0C,aAE9CI,KAAI,SAACC,GACd,IAAIM,GAAS,EACTN,EAAKI,OAAS,EAAKQ,YAAYQ,aAAYd,GAAS,GAExDN,EAAKtD,OAAOzE,EAAS6F,EAAawC,Q,oBAItC,SAAOrI,GACLb,KAAKD,OACHC,KAAKiN,aAAajN,KAAKwJ,YAAYQ,WAAWnE,MAAMoB,KAAKlH,OAC3DC,KAAKK,IAAM,GAAKL,KAAKD,QAErBc,EAAQuB,UAAYyE,EAAQd,OAAOG,KACnCrF,EAAQG,YAAc6F,EAAQd,OAAOI,SACrCtF,EAAQI,UAAYjB,KAAKqI,OAEzB,IAAIG,EAAUxI,KAAKyI,QAEnB5H,EAAQwB,SAASmG,EAAQpI,EAAGoI,EAAQnI,EAAGL,KAAKF,MAAOE,KAAKD,QACxDc,EAAQK,WAAWsH,EAAQpI,EAAGoI,EAAQnI,EAAGL,KAAKF,MAAOE,KAAKD,QAE1DC,KAAK8I,iBAAiBjI,EAAS2H,O,GAzHHJ,GC/OhC,SAAS/G,EAAUkM,GAEjB,OADA/G,QAAQC,IAAI8G,GACG,eAAXA,EAAEC,MACGD,EAAEE,eAAe,GAAGC,MAAOH,EAAEE,eAAe,GAAGE,QAE/CJ,EAAEG,MAAOH,EAAEI,O,gDAKhBC,G,WACJ,aAAe,oBACb5N,KAAK6N,eAAiBC,IACtB9N,KAAK+N,QAAS,EACd/N,KAAKgO,QAAU,CAAE5N,EAAG0N,IAAKzN,EAAGyN,KAE5B9N,KAAKiO,aAAc,EAEnBjO,KAAK6F,KAAO,SACZ7F,KAAKmJ,KAAO,gC,sDAGd,SAAmBlJ,EAAQiO,GAIzB,IAHA,IAAInK,EAAUmK,EAAInK,QAAQP,MAAM,GAAG2K,UAC/BpN,EAAamN,EAAIxJ,sBAAsB3D,WAElC8I,EAAI,EAAGA,EAAI9F,EAAQR,OAAQsG,IAAK,CACvC,IAAI1F,EAAMJ,EAAQ8F,GAElB,GAAI1F,EAAI/C,YAAYsH,eAAezI,EAAOG,EAAGH,EAAOI,EAAGU,GACrD,OAAOoD,EAGX,OAAO,I,oBAGT,SAAOA,GACLnE,KAAK6N,eAAiB1J,I,iBAGxB,SAAIoJ,EAAGW,GAOL,GANIlO,KAAK6N,gBAA6B,YAAXN,EAAEC,MAAgC,WAAVD,EAAEa,MACnDF,EAAIG,aAAarO,KAAK6N,gBACtB7N,KAAK6N,eAAiBC,IACtB9N,KAAK+N,QAAS,IAGZ/N,KAAKiO,aAA0B,UAAXV,EAAEC,KAA1B,CAGAxN,KAAKiO,aAAc,EAEnB,IAAIhO,EAASiO,EAAII,YACff,EAAEG,MACFH,EAAEI,MACF/I,OAAOC,WACPD,OAAOG,aAET,GAAe,UAAXwI,EAAEC,KACJxN,KAAK6N,eAAiB7N,KAAKuO,mBAAmBtO,EAAQiO,QACjD,GAAe,cAAXX,EAAEC,MAAmC,eAAXD,EAAEC,KACrCxN,KAAK6N,eAAiB7N,KAAKuO,mBAAmBtO,EAAQiO,GAClDlO,KAAK6N,iBACP7N,KAAK+N,QAAS,GAGhB/N,KAAKgO,QAAQ5N,EAAIH,EAAOG,EACxBJ,KAAKgO,QAAQ3N,EAAIJ,EAAOI,OAGnB,IAAIL,KAAK+N,QAAsB,cAAXR,EAAEC,MAAmC,cAAXD,EAAEC,MAU5CxN,KAAK6N,gBAA8B,YAAXN,EAAEC,MAAiC,aAAXD,EAAEC,OAC3DxN,KAAK+N,QAAS,EACd/N,KAAKiO,aAAc,OAZyD,CAC5E,IAAIO,EAASvO,EAAOG,EAAIJ,KAAKgO,QAAQ5N,EACjCqO,EAASxO,EAAOI,EAAIL,KAAKgO,QAAQ3N,EAErCL,KAAK6N,eAAea,KAAKF,EAAQC,GAEjCzO,KAAKgO,QAAQ5N,EAAIH,EAAOG,EACxBJ,KAAKgO,QAAQ3N,EAAIJ,EAAOI,EAQxBL,KAAKgO,QAAQ5N,EAAIH,EAAOG,EACxBJ,KAAKgO,QAAQ3N,EAAIJ,EAAOI,K,sBAI5B,WACE,OAAOL,KAAK6N,iB,qBAGd,SAAQhN,EAAS4D,GAEf,GAAIzE,KAAK6N,eAAgB,CACvB,IAAIzN,EAAIJ,KAAK6N,eAAezM,YAAYnB,OAAO,GAC3CI,EAAIL,KAAK6N,eAAezM,YAAYnB,OAAO,GAC3CK,EAAIN,KAAK6N,eAAezM,YAAYlB,GAAG,GACvCK,EAAIP,KAAK6N,eAAezM,YAAYlB,GAAG,GAEvCa,EAAa0D,EAAQ1D,WACrBoB,EAAYsC,EAAQtC,UAIxBtB,EAAQI,UAAY,EACpBJ,EAAQG,YAAc6F,EAAQd,OAAOM,UAErCxF,EAAQK,WACNiB,EAAU7B,EAAIS,GAAcX,EANjB,IAOX+B,EAAU5B,EAAIQ,GAAcV,EAPjB,IAQXU,GAAcT,EAAIQ,IAClBC,GAAcR,EAAIO,U,KAMpB6N,G,WACJ,aAAe,oBACb3O,KAAK4O,YAAcd,IACnB9N,KAAK6O,SAAWf,IAChB9N,KAAK8O,WAAa,EAClB9O,KAAK+O,YAAc,GACnB/O,KAAKgP,cAAgB,IAAIC,KAEzBjP,KAAKwJ,iBAAc1H,EAEnB9B,KAAK6F,KAAO,SAEZ7F,KAAKmJ,KAAO,gC,0CAGd,SAAOhF,M,iBAEP,SAAIoJ,EAAGW,GAGL,GAFAlO,KAAK8O,YAAc,EAEJ,eAAXvB,EAAEC,KACJ,IAAIvN,EAASiO,EAAII,YACfjN,EAAUkM,GAAG,GACblM,EAAUkM,GAAG,GACb3I,OAAOC,WACPD,OAAOG,kBAGL9E,EAASiO,EAAII,YACjBf,EAAEG,MACFH,EAAEI,MACF/I,OAAOC,WACPD,OAAOG,aAYM,cAAXwI,EAAEC,MAAmC,eAAXD,EAAEC,MAC9BxN,KAAKkP,OAAQ,EAEblP,KAAK4O,YAAc,IAAIxE,EACrB,CAAC,CAACnK,EAAOG,EAAGH,EAAOI,IACnBL,KAAKwJ,YAAY4D,kBACjBpN,KAAKwJ,YAAYxI,aAEnBkN,EAAIiB,UAAUnP,KAAK4O,eAEnB5O,KAAKkP,OACO,cAAX3B,EAAEC,MAAmC,cAAXD,EAAEC,MAIpBxN,KAAKkP,OAAqB,YAAX3B,EAAEC,MAAiC,aAAXD,EAAEC,OAClDxN,KAAK4O,YAAYpE,UAAUvK,EAAOG,EAAGH,EAAOI,GAC5CL,KAAK4O,YAAYQ,UAGjBpP,KAAKkP,OAAQ,EACblP,KAAK6O,SAAW7O,KAAK4O,YACrB5O,KAAK4O,YAAcd,KATnB9N,KAAK4O,YAAYnE,SAASxK,EAAOG,EAAGH,EAAOI,K,sBAa/C,WACE,OAAOL,KAAK6O,W,qBAGd,SAAQhO,EAAS4D,Q,KAGb4K,G,kDACJ,aAAe,IAAD,8BACZ,gBAEK7F,iBAAc1H,EAEnB,EAAK+D,KAAO,SACZ,EAAKsD,KAAO,gCANA,E,uCAQd,SAAIoE,EAAGW,GACL,IAAIjO,EAASiO,EAAII,YACff,EAAEG,MACFH,EAAEI,MACF/I,OAAOC,WACPD,OAAOG,aAGM,cAAXwI,EAAEC,MAAmC,eAAXD,EAAEC,MAC9BxN,KAAKkP,OAAQ,EAEblP,KAAK4O,YAAc,IAAIxE,EACrB,CAAC,CAACnK,EAAOG,EAAGH,EAAOI,IACnBL,KAAKwJ,YAAY8D,kBACjBY,EAAIoB,uBAENpB,EAAIiB,UAAUnP,KAAK4O,eACX5O,KAAKkP,OAAqB,cAAX3B,EAAEC,MAAmC,cAAXD,EAAEC,MAE3CxN,KAAKkP,OAAqB,YAAX3B,EAAEC,MAAiC,aAAXD,EAAEC,OACjDxN,KAAK4O,YAAYpE,UAAUvK,EAAOG,EAAEH,EAAOI,GAG3CL,KAAKkP,OAAQ,EACblP,KAAK4O,YAAcd,KANnB9N,KAAK4O,YAAYnE,SAASxK,EAAOG,EAAEH,EAAOI,O,GA3BvBsO,IAsCnBY,G,WACJ,aAAe,oBACbvP,KAAKwP,aAAe1B,IAEpB9N,KAAKwJ,iBAAc1H,EAEnB9B,KAAK6F,KAAO,OAEZ7F,KAAKmJ,KAAO,8B,0CAGd,SAAOhF,GACDA,aAAejB,IACjBlD,KAAKwP,aAAerL,K,iBAIxB,SAAIoJ,EAAGW,GACL,IAAIjO,EAASiO,EAAII,YACff,EAAEG,MACFH,EAAEI,MACF/I,OAAOC,WACPD,OAAOG,aAGM,UAAXwI,EAAEC,KACJxN,KAAKwP,aAAe,IAAItM,EACtBjD,EAAOG,EACPH,EAAOI,EACP,GACAL,KAAKwJ,YAAYpG,KACjBpD,KAAKwJ,YAAYnG,UAEC,cAAXkK,EAAEC,MACXxN,KAAKwP,aAAe,IAAItM,EACtBjD,EAAOG,EACPH,EAAOI,EACP,GACAL,KAAKwJ,YAAYpG,KACjBpD,KAAKwJ,YAAYnG,UAEnB6K,EAAInK,QAAQK,KAAKpE,KAAKwP,eACbxP,KAAKwP,cAA2B,aAAXjC,EAAEC,KAChCxN,KAAKwP,aAAaC,QAAQlC,EAAEa,KACnBpO,KAAKwP,cAA2B,YAAXjC,EAAEC,OAClB,WAAVD,EAAEa,KAEiC,GAAjCpO,KAAKwP,aAAarM,KAAKI,QACzB2K,EAAIG,aAAarO,KAAKwP,cAExBxP,KAAKwP,aAAe1B,KACD,cAAVP,EAAEa,KACXpO,KAAKwP,aAAaE,kBAIlB1P,KAAKwP,eACPxP,KAAKwP,aAAanM,SAAWrD,KAAKwJ,YAAYnG,SAC9CrD,KAAKwP,aAAalM,iBAClBtD,KAAKwP,aAAajO,e,sBAItB,WAKE,OAJIvB,KAAKwP,cAAiD,GAAjCxP,KAAKwP,aAAarM,KAAKI,SAC9CvD,KAAKwJ,YAAY0E,IAAIG,aAAarO,KAAKwP,cACvCxP,KAAKwP,aAAe1B,KAEf9N,KAAKwP,e,qBAGd,SAAQ3O,EAAS4D,GAEf,GAAIzE,KAAKwP,aAAc,CACrB,IAAIpP,EAAIJ,KAAKwP,aAAapO,YAAYnB,OAAO,GACzCI,EAAIL,KAAKwP,aAAapO,YAAYnB,OAAO,GACzCK,EAAIN,KAAKwP,aAAapO,YAAYlB,GAAG,GACrCK,EAAIP,KAAKwP,aAAapO,YAAYlB,GAAG,GAErCa,EAAa0D,EAAQ1D,WACrBoB,EAAYsC,EAAQtC,UAIxBtB,EAAQI,UAAY,EACpBJ,EAAQG,YAAc6F,EAAQd,OAAOM,UAErCxF,EAAQK,WACNiB,EAAU7B,EAAIS,GAAcX,EANjB,IAOX+B,EAAU5B,EAAIQ,GAAcV,EAPjB,IAQXU,GAAcT,EAAIQ,IAAc,GAChCC,GAAcR,EAAIO,KAIpBD,EAAQwB,SACNF,EAAU7B,EACRS,GAAcf,KAAKwP,aAAa5P,OAASI,KAAKwP,aAAa1P,OAC3D,EACFqC,EAAU5B,EACRQ,GAAcf,KAAKwP,aAAa3P,OAASG,KAAKwP,aAAazP,QAC7D,EACAgB,EAAaf,KAAKwP,aAAazP,a,KAMjC4P,G,WACJ,aAAe,oBACb3P,KAAKmJ,KAAO,gCACZnJ,KAAK2M,OAAS,CAAC,SAAU,YAAa,YAEtC3M,KAAK6F,KAAO,SAEZ7F,KAAK4P,kBAAe9N,EACpB9B,KAAK6P,UAAY7P,KAAK4P,aACtB5P,KAAKwJ,iBAAc1H,E,0CAErB,c,iBAEA,SAAIyL,EAAGW,GACL,IAAIjO,EAASiO,EAAII,YACff,EAAEG,MACFH,EAAEI,MACF/I,OAAOC,WACPD,OAAOG,aAGH0H,EAAQzM,KAAKwJ,YAAYiD,MAE7B,GAAe,cAAXc,EAAEC,MAAmC,eAAXD,EAAEC,KAE9BxN,KAAKkP,OAAQ,EACblP,KAAK8P,GAAK7P,EAAOG,EACjBJ,KAAK+P,GAAK9P,EAAOI,EAEH,WAAVoM,EACFzM,KAAK4P,aAAe,IAAItN,EAAOtC,KAAK8P,GAAI9P,KAAK+P,GAAI,GAC9B,cAAVtD,EACTzM,KAAK4P,aAAe,IAAInO,EAAUzB,KAAK8P,GAAI9P,KAAK+P,GAAI,EAAG,GACpC,aAAVtD,EACTzM,KAAK4P,aAAe,IAAI7M,EAAS/C,KAAK8P,GAAI9P,KAAK+P,GAAI,EAAG,GAC/CvJ,QAAQC,IAAI,yBAErBzG,KAAK4P,aAAahO,YAAc5B,KAAKwJ,YAAY5H,YACjDsM,EAAIiB,UAAUnP,KAAK4P,mBAGd,IAAI5P,KAAKkP,OAAqB,cAAX3B,EAAEC,MAAmC,cAAXD,EAAEC,MA0BjD,GAAIxN,KAAKkP,QAAqB,YAAX3B,EAAEC,MAAiC,aAAXD,EAAEC,MAAsB,CACtE,GAA+B,GAA3BxN,KAAK4P,aAAa9P,OAA0C,GAA5BE,KAAK4P,aAAa7P,OAGlD,OAFAmO,EAAIG,aAAarO,KAAK4P,mBACtB5P,KAAK4P,aAAe9B,KAI1B,GAAI9N,KAAK4P,wBAAwBtN,EAC/B,IAAIlC,EAAIJ,KAAK4P,aAAahQ,OAASI,KAAK4P,aAAarN,OACjDlC,EAAIL,KAAK4P,aAAa/P,OAASG,KAAK4P,aAAarN,OACjDzC,EAAmC,EAA3BE,KAAK4P,aAAarN,OAC1BxC,EAAoC,EAA3BC,KAAK4P,aAAarN,WAC1B,CACDnC,EAAIJ,KAAK4P,aAAahQ,OACtBS,EAAIL,KAAK4P,aAAa/P,OACtBC,EAAQE,KAAK4P,aAAa9P,MAC1BC,EAASC,KAAK4P,aAAa7P,OAE3BC,KAAK4P,wBAAwB7M,IAC3BjD,EAAQ,GAAKC,EAAS,EACxBK,GAAKN,EACIA,EAAQ,GAAKC,EAAS,EAC/BM,GAAKN,EACID,EAAQ,GAAKC,EAAS,IAC/BK,GAAKN,EACLO,GAAKN,IAMXC,KAAK4P,aAAaxO,YAAYG,UAC5BnB,EACAC,EACAD,EAAI2B,KAAKC,IAAIlC,GACbO,EAAI0B,KAAKC,IAAIjC,IAEfC,KAAKkP,OAAQ,EACblP,KAAK6P,UAAY7P,KAAK4P,aACtB5P,KAAK4P,kBAAe9N,QA7Dd9B,KAAK4P,wBAAwB7M,GAC/B/C,KAAK4P,aAAa9P,MAAQG,EAAOG,EAAIJ,KAAK8P,GAC1C9P,KAAK4P,aAAa7P,OAASE,EAAOI,EAAIL,KAAK+P,IAElC/P,KAAK4P,wBAAwBtN,EACtCtC,KAAK4P,aAAarN,OAASR,KAAKsJ,KAAKtJ,KAAKuJ,IAAKtL,KAAK8P,GAAK7P,EAAOG,EAAI,GAAK2B,KAAKuJ,IAAKtL,KAAK+P,GAAK9P,EAAOI,EAAI,IAE/FL,KAAK4P,wBAAwBnO,IACtCzB,KAAK4P,aAAa9P,MAAQG,EAAOG,EAAIJ,KAAK8P,GAC1C9P,KAAK4P,aAAa7P,OAASE,EAAOI,EAAIL,KAAK+P,GAEvC/P,KAAK4P,aAAa9P,MAAQ,GAAKE,KAAK4P,aAAa7P,OAAS,EAC5DC,KAAK4P,aAAahQ,OAASK,EAAOG,EACzBJ,KAAK4P,aAAa9P,MAAQ,GAAKE,KAAK4P,aAAa7P,OAAS,EACnEC,KAAK4P,aAAa/P,OAASI,EAAOI,EACzBL,KAAK4P,aAAa9P,MAAQ,GAAKE,KAAK4P,aAAa7P,OAAS,IACnEC,KAAK4P,aAAahQ,OAASK,EAAOG,EAClCJ,KAAK4P,aAAa/P,OAASI,EAAOI,M,sBA+C5C,WACE,OAAOL,KAAK6P,Y,qBAEd,SAAQhP,EAAS4D,Q,KAGfuL,GAAa,IAAIpC,GACjBqC,GAAU,IAAItB,GACduB,GAAU,IAAIb,GACdc,GAAQ,IAAIZ,GACZa,GAAS,IAAIT,GAoDFU,G,WAjDb,WAAYnC,GAAM,oBAChBlO,KAAKkO,IAAMA,EACXlO,KAAK0J,MAAQ,GACb1J,KAAK0J,MAAMtF,KAAK4L,GAAYC,GAASC,GAASC,GAAOC,IACrDpQ,KAAKsQ,QAAUtQ,KAAKsQ,QAAQrM,KAAKjE,MACjCA,KAAKgK,WAAahK,KAAK0J,MAAM,GAC7B1J,KAAKoN,kBAAoB,GACzBpN,KAAKsN,kBAAoB,GACzBtN,KAAKgB,YAAc,UACnBhB,KAAKoD,KAAO,eACZpD,KAAKqD,SAAW,IAEhBrD,KAAKuQ,QAAUzC,IAEfmC,GAAQzG,YAAcxJ,KACtBkQ,GAAQ1G,YAAcxJ,KACtBmQ,GAAM3G,YAAcxJ,KAEpBA,KAAKyM,MAAQ,WACbzM,KAAK4B,YAAc,GAEnB5B,KAAKuQ,QAAUzC,IAEfmC,GAAQzG,YAAcxJ,KACtBkQ,GAAQ1G,YAAcxJ,KACtBmQ,GAAM3G,YAAcxJ,KACpBoQ,GAAO5G,YAAcxJ,KAErBA,KAAKwQ,MAAQ,IAAIjH,EAAQvJ,MACzBA,KAAKyQ,cAAgB,IAAIzD,EAAkBhN,M,8CAG7C,WACEA,KAAKgK,WAAWkD,OAAOlN,KAAKuQ,W,qBAE9B,SAAQhD,GACNvN,KAAKgK,WAAW0G,IAAInD,EAAGvN,KAAKkO,O,0BAE9B,WACElO,KAAKuQ,QAAUvQ,KAAKgK,WAAW2G,a,yBAGjC,SAAY9P,GACV,IAAM4D,EAAUzE,KAAKkO,IAAIxJ,sBAEzB1E,KAAKgK,WAAW4G,QAAQ/P,EAAS4D,O,KCvVtBoM,G,kDA1Jb,WAAY3R,GAAQ,IAAD,8BACjB,cAAMA,IACDqI,MAAQ,CACX2G,IAAK,EAAKhP,MAAMgP,IAAM,EAAKhP,MAAMgP,IAAM,IAAIxI,EANjC,WAOVoL,WAAOhP,EACPiP,YAAQjP,GAGV,EAAKkP,UAAYC,IAAMC,YAEvB,EAAKC,YAAa,EAElB,EAAKC,eAAkB,kBACrB,EAAKC,aAAa,EAAKL,UAAUM,QAAQC,WAAW,QAAQtN,KADvC,gBAEvB,EAAKuN,iBAAoB,SAACjE,GAAD,OAAO,EAAKkE,kBAAkBlE,IAAItJ,KAAlC,gBAdR,E,qDAiBnB,WAAqB,IAAD,OAClBjE,KAAKmR,YAAa,EAElB,IAAI3H,EAAc,IAAI6G,GAAYrQ,KAAKuH,MAAM2G,KAC7ClO,KAAK0R,SAAS,CAAEZ,MAAOtH,IAEvB,IAAImI,EAAY,IAAIvJ,EAAM,IAAK,IAAK,IAAK,IAAK,GAAI,GAClDuJ,EAAUpJ,WAAa,CACrB,IAAI5B,EAAY,GAAI,IAAK,GAAI,IAC7B,IAAIU,EAAW,GAAI,GAAI,QACvB,IAAIL,EAAU,GAAI,GAAI,0BACtB,IAAIM,EAAgB,GAAI,GAAI,WAC5B,IAAIO,EAAY,GAAI,IAAK,MAE3B7H,KAAK0R,SAAS,CACZX,OAAQ,CAACvH,EAAYgH,MAAOhH,EAAYiH,cAAekB,KAIzD,IAAMC,EAAS5R,KAAKgR,UAAUM,QAE9B1M,OAAOiN,iBAAiB,SAAU7R,KAAKoR,gBACvCQ,EAAOC,iBAAiB,QAAS7R,KAAKwR,kBACtCI,EAAOC,iBAAiB,YAAa7R,KAAKwR,kBAC1CI,EAAOC,iBAAiB,UAAW7R,KAAKwR,kBACxCI,EAAOC,iBAAiB,YAAa7R,KAAKwR,kBAC1CI,EAAOC,iBAAiB,aAAc7R,KAAKwR,kBAC3CI,EAAOC,iBAAiB,YAAa7R,KAAKwR,kBAC1CI,EAAOC,iBAAiB,WAAY7R,KAAKwR,kBACzCM,SAASD,iBAAiB,WAAY7R,KAAKwR,kBAC3CM,SAASD,iBAAiB,UAAW7R,KAAKwR,kBAE1CO,aAAY,kBAAM,EAAKC,gBAAe,IArDhC,O,gCAyDR,SAAmBC,EAAWC,GAE5B,GAAIA,EAAUhE,MAAQlO,KAAKuH,MAAM2G,IAAK,CACpC,IAAI1E,EAAc,IAAI6G,GAAYrQ,KAAKuH,MAAM2G,KAC7ClO,KAAK0R,SAAS,CAAEZ,MAAOtH,IAEvB,IAAImI,EAAY,IAAIvJ,EAAM,IAAK,IAAK,IAAK,IAAK,GAAI,GAClDuJ,EAAUpJ,WAAa,CACrB,IAAI5B,EAAY,GAAI,IAAK,GAAI,IAC7B,IAAIU,EAAW,GAAI,GAAI,QACvB,IAAIL,EAAU,GAAI,GAAI,0BACtB,IAAIM,EAAgB,GAAI,GAAI,WAC5B,IAAIO,EAAY,GAAI,IAAK,MAE3B7H,KAAK0R,SAAS,CACZX,OAAQ,CAACvH,EAAYgH,MAAOhH,EAAYiH,cAAekB,KAI3D,IAAM9Q,EAAUb,KAAKgR,UAAUM,QAAQC,WAAW,MAClDvR,KAAKmS,aAAatR,K,kCAIpB,WACEb,KAAKmR,YAAa,EAGlB,IAAMS,EAAS5R,KAAKgR,UAAUM,QAE9B1M,OAAOwN,oBAAoB,SAAUpS,KAAKoR,gBAC1CQ,EAAOQ,oBAAoB,QAASpS,KAAKwR,kBACzCI,EAAOQ,oBAAoB,YAAapS,KAAKwR,kBAC7CI,EAAOQ,oBAAoB,UAAWpS,KAAKwR,kBAC3CI,EAAOQ,oBAAoB,YAAapS,KAAKwR,kBAC7CI,EAAOQ,oBAAoB,YAAapS,KAAKwR,kBAC7CM,SAASM,oBAAoB,WAAYpS,KAAKwR,kBAC9CM,SAASM,oBAAoB,UAAWpS,KAAKwR,oB,0BAG/C,SAAa3Q,GAEXA,EAAQwR,UAAU,EAAG,EAAGxR,EAAQ+Q,OAAO9R,MAAOe,EAAQ+Q,OAAO7R,QAC7Dc,EAAQuB,UAnGI,UAoGZvB,EAAQwB,SAAS,EAAG,EAAGxB,EAAQ+Q,OAAO9R,MAAOe,EAAQ+Q,OAAO7R,QAE5DC,KAAKuH,MAAM2G,IAAIlK,KAAKnD,GACpBb,KAAKuH,MAAMuJ,MAAMwB,YAAYzR,GAG7Bb,KAAKuH,MAAMwJ,OAAOpI,KAAI,SAAC6H,GACrBA,EAAMlL,OAAOzE,Q,0BAIjB,SAAaA,GAGXb,KAAKgR,UAAUM,QAAQxR,MAAQ8E,OAAOC,WACtC7E,KAAKgR,UAAUM,QAAQvR,OAAS6E,OAAOG,YACvC/E,KAAKmS,aAAatR,K,+BAGpB,SAAkB0M,GAEhB,GAAe,UAAXA,EAAEC,KAAN,CASA,GAAe,UAAXD,EAAEC,MAA+B,cAAXD,EAAEC,KAC1B,IAAK,IAAI3D,EAAI,EAAGA,EAAI7J,KAAKuH,MAAMwJ,OAAOxN,OAAQsG,IAAK,CAEjD,GADY7J,KAAKuH,MAAMwJ,OAAOlH,GACpB0I,qBAAqBhF,EAAEG,MAAOH,EAAEI,OACxC,OAIF3N,KAAKuH,MAAM2G,IAAIhK,UAAUlE,KAAKuH,MAAMuJ,MAAMR,QAAQ/C,M,oBAIxD,WACE,OACE,4BACEiF,IAAKxS,KAAKgR,UACVlR,MAAO8E,OAAOC,WACd9E,OAAQ6E,OAAOG,YACf0N,MAAO,CAAEC,SAAU,WAAYC,OAAQ,EAAGC,KAAM,GAChDC,GAAG,aAEF,S,GArJYC,a,yBCffC,GAAWC,KAAOC,IAAV,4aAIQpM,EAAQd,OAAOE,UAElBY,EAAQd,OAAOI,UAe5B+M,GAAaF,KAAOC,IAAV,gKAEW,qBAAGhM,MAAmB,IACtCJ,EAAQd,OAAOI,UAKpBgN,GAAuBH,KAAOI,OAAV,qZACnB,kBAAuB,SAAvB,EAAG1T,KAAY,2BAEAmH,EAAQd,OAAOG,KAC1BW,EAAQd,OAAOI,SAEJU,EAAQd,OAAOI,SASbU,EAAQd,OAAOK,YAGfS,EAAQd,OAAOK,aAIjCiN,GAAkB,SAACnU,GACvB,OAAIA,EAAMoU,WAAapU,EAAM4I,KAEzB,yBAAK2K,MAAOvT,EAAMuT,OAChB,kBAACU,GAAD,CAAsBzT,KAAMR,EAAMQ,MAChC,kBAAC,IAAD,CACEJ,GAAIJ,EAAMoU,SACVb,MAAO,CAAE3O,OAAQ,QAASyP,WAAY,UAAW3H,MAAO,WACxD4H,QAAS,cAERtU,EAAMiE,SAKLjE,EAAMoU,UAAYpU,EAAM4I,KAEhC,yBAAK2K,MAAOvT,EAAMuT,OAChB,kBAACU,GAAD,CAAsBzT,KAAMR,EAAMQ,MAChC,yBACE+S,MAAO,CAAE3O,OAAQ,QAASyP,WAAY,UAAW3H,MAAO,WACxD4H,QAAS,kBAAMtU,EAAM4I,SAEpB5I,EAAMiE,QAOb,6BACE,kBAACgQ,GAAD,CAAsBzT,KAAMR,EAAMQ,MAChC,yBACE+S,MAAO,CAAE3O,OAAQ,QAASyP,WAAY,UAAW3H,MAAO,WACxD4H,QAAS,cAERtU,EAAMiE,SCxFbsQ,GAAgBT,KAAOC,IAAV,oIAIR,SAAC/T,GAAD,OAAWA,EAAMY,SAItB4T,GAAaV,KAAOC,IAAV,kNAGO,SAAC/T,GAAD,OAAWA,EAAM+H,QAElB,SAAC/H,GAAD,OAAYA,EAAMyU,OAAS,EAAI,KAEpC,SAACzU,GAAD,OAAWA,EAAM+H,OAAoBJ,EAAQd,OAAOI,UAG/DyN,GAAeZ,KAAOI,OAAV,kSAKIvM,EAAQd,OAAOI,UAEjB,SAACjH,GAAD,OAAWA,EAAM+H,OAC7BJ,EAAQd,OAAOK,aAIH,SAAClH,GAAD,OAAWA,EAAM+H,OAC7BJ,EAAQd,OAAOM,WAGjBwN,GAAmBb,KAAOC,IAAV,4IAEF,SAAC/T,GAAD,OAAWA,EAAM+H,QAK/B6M,GAAuBd,KAAOI,OAAV,sZAKN,SAAClU,GAAD,OAAWA,EAAM+H,QACpB,SAAC/H,GAAD,OAAWA,EAAM+H,OAAoBJ,EAAQd,OAAOI,UAIlD,SAACjH,GAAD,OAAWA,EAAM+H,OAC5BJ,EAAQd,OAAOK,aAKJ,SAAClH,GAAD,OAAWA,EAAM+H,OAC5BJ,EAAQd,OAAOM,WAKjB0N,GAAS,SAAC7U,GACd,OACE,kBAAC0U,GAAD,CACE3M,KAAM/H,EAAM+H,KACZuM,QAAStU,EAAMsU,QACfQ,YAAa,SAACC,GAAD,OAAWA,EAAMC,mBAE9B,kBAACL,GAAD,CAAkB5M,KAAM/H,EAAM+H,MAAO/H,EAAMiE,QAI3CgR,GAAiB,SAACjV,GACtB,OACE,kBAAC4U,GAAD,CACEN,QAAStU,EAAMkV,OACfC,OAAQnV,EAAMoV,OACdrN,KAAM/H,EAAM+H,MAEX/H,EAAMqV,gBAoEEC,G,kDA9Db,WAAYtV,GAAQ,IAAD,8BACjB,cAAMA,IAEDqI,MAAQ,CACXoM,QAAQ,EACRc,cAAevV,EAAMwV,QACrBH,cAAerV,EAAMwV,SANN,E,sDASnB,SAAmBzC,EAAWC,GACxBlS,KAAKuH,MAAMgN,gBAAkBrC,EAAUqC,eACzCvU,KAAKd,MAAMyV,SAAS3U,KAAKuH,MAAMgN,iB,wBAInC,SAAWK,GACT5U,KAAK0R,SAAS,CAAE6C,cAAeK,IAC/B5U,KAAKd,MAAMyV,SAAS3U,KAAKuH,MAAMgN,eAC/BvU,KAAK6U,e,wBAEP,WACE7U,KAAK0R,SAAS,CAAEiC,QAAS3T,KAAKuH,MAAMoM,UACV,IAAtB3T,KAAKuH,MAAMoM,QACb7B,SAASgD,cAAcC,S,oBAI3B,WAAU,IAAD,OACDC,EAAU,GAkBhB,OAjBAhV,KAAKd,MAAM8V,QAAQrM,KAAI,SAACsM,EAAKpL,GACvB,EAAKtC,MAAM2N,gBAAkBD,EAAIpP,OAAS,EAAK0B,MAAMgN,eAEvDS,EAAQ5Q,KACN,kBAAC,GAAD,CACEjB,KAAM8R,EAAIpP,KACVoB,KAAM,EAAK/H,MAAMY,MACjBsO,IAAKvE,EACL2J,QAAS,WACP,EAAK2B,WAAWF,GAChBnD,SAASgD,cAAcC,cAQ/B,kBAACtB,GAAD,CAAe3T,MAAOE,KAAKd,MAAMY,MAAOC,OAAQC,KAAKd,MAAMa,QACzD,kBAAC,GAAD,CACEkH,KAAMjH,KAAKd,MAAMY,MACjByU,cAAevU,KAAKuH,MAAMgN,cAAc1O,KACxCuO,OAAQ,kBAAM,EAAKS,cACnBP,OAAQ,kBAAM,EAAK5C,SAAS,CAAEiC,QAAQ,OAExC,kBAACD,GAAD,CAAYC,OAAQ3T,KAAKuH,MAAMoM,OAAQ1M,KAAMjH,KAAKd,MAAMY,OACrDkV,Q,GAxDYlC,aCvFjBsC,GAAYpC,KAAOI,OAAV,2PACJ,SAAClU,GAAD,OAAYA,EAAMmW,WAAa,MAAQ,SACtC,SAACnW,GAAD,OAAYA,EAAMmW,WAAa,MAAQ,SAE7B,SAACnW,GAAD,OACD,IAAjBA,EAAMgK,OACFrC,EAAQd,OAAOM,UACfQ,EAAQd,OAAOE,YACCY,EAAQd,OAAOI,UAI/B,SAACjH,GAAD,OACiB,IAAjBA,EAAMgK,OACFrC,EAAQd,OAAOK,YACfS,EAAQd,OAAOI,YA8CZmP,G,kDArCb,WAAYpW,GAAQ,IAAD,8BACjB,cAAMA,IAEDqI,MAAQ,CACXgO,GAAI,cAEN,EAAKrW,MAAMyV,SAAS,EAAKpN,MAAMgO,IANd,E,sDAQnB,SAAmBtD,EAAWC,GACxBlS,KAAKuH,MAAMgO,KAAOrD,EAAUqD,IAC9BvV,KAAKd,MAAMyV,SAAS3U,KAAKuH,MAAMgO,M,oBAInC,WAAU,IAAD,OACP,OACE,yBACE9C,MAAO,CACL+C,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAACN,GAAD,CACElM,OAA0B,eAAlBlJ,KAAKuH,MAAMgO,GACnBF,WAAW,MACX7B,QAAS,kBAAM,EAAK9B,SAAS,CAAE6D,GAAI,kBAErC,kBAACH,GAAD,CACElM,OAA0B,aAAlBlJ,KAAKuH,MAAMgO,GACnB/B,QAAS,kBAAM,EAAK9B,SAAS,CAAE6D,GAAI,qB,GA/BpBzC,aCxBnB6C,GAAW3C,KAAO4C,IAAV,mHA+DCC,G,kDArDb,WAAY3W,GAAQ,IAAD,8BACjB,cAAMA,IAEDqI,MAAQ,CACXuO,QAAS5W,EAAM6W,SAAS,IAJT,E,sDAQnB,SAAmB9D,EAAWC,GACxBlS,KAAKuH,MAAMuO,UAAY5D,EAAU4D,SACnC9V,KAAKd,MAAM8W,WAAWhW,KAAKuH,MAAMuO,W,oBAIrC,WAAU,IAAD,OACP,OACE,oCACE,kBAACH,GAAD,CACEtM,IACErJ,KAAKuH,MAAMuO,UAAY9V,KAAKd,MAAM6W,SAAS,GACvCE,6CAEAA,oCAENzC,QAAS,kBAAM,EAAK9B,SAAS,CAAEoE,QAAS,EAAK5W,MAAM6W,SAAS,MAC5DtD,MAAO,CAAE3S,MAAOE,KAAKd,MAAMY,MAAOoW,WAAY,KAEhD,kBAACP,GAAD,CACEtM,IACErJ,KAAKuH,MAAMuO,UAAY9V,KAAKd,MAAM6W,SAAS,GACvCE,qDAEAA,4CAGNzC,QAAS,kBAAM,EAAK9B,SAAS,CAAEoE,QAAS,EAAK5W,MAAM6W,SAAS,MAC5DtD,MAAO,CAAE3S,MAAOE,KAAKd,MAAMY,MAAOoW,WAAY,KAEhD,kBAACP,GAAD,CACEtM,IACErJ,KAAKuH,MAAMuO,UAAY9V,KAAKd,MAAM6W,SAAS,GACvCE,8CAEAA,qCAENzC,QAAS,kBAAM,EAAK9B,SAAS,CAAEoE,QAAS,EAAK5W,MAAM6W,SAAS,MAC5DtD,MAAO,CAAE3S,MAAOE,KAAKd,MAAMY,MAAOoW,WAAY,U,GA/C1BpD,aCAxBqD,ICJYnD,KAAOI,OAAV,sKAGO,SAAClU,GAAD,OAAWA,EAAM0M,QACf/E,EAAQd,OAAOI,UAKxB6M,KAAOC,IAAV,+KAEUpM,EAAQd,OAAOG,KAGbW,EAAQd,OAAOI,UAIrB6M,KAAOpB,OAAV,qDAIWkB,YDlBVE,KAAOC,IAAV,wOAWPmD,GAAsB,SAAClX,GAG3B,OACE,6BACE,yBAAKuT,MAAO,CAAE+C,QAAS,OAAQ1V,MAAO,OAAQuW,aAAc,WAC1D,kBAAC,GAAD,CACEN,SAAUlP,EAAQlB,UAClBqQ,WAAY9W,EAAM8W,WAClBlW,MARS,SAUX,yBAAK2S,MAAO,CAAEC,SAAU,WAAY5S,MAAO,MAAOoW,WAAY,IAC5D,kBAACC,GAAD,YACA,kBAAC,GAAD,CACExB,SAAUzV,EAAMoX,UAChBxW,MAAM,MACN4U,QAAS7N,EAAQjB,YAAY,GAC7BoP,QAASnO,EAAQjB,YACjB6M,MAAO,CACL8D,MAAO,WAIX,kBAAC,GAAD,CAAY5B,SAAUzV,EAAMsX,kBAE9B,yBACE/D,MAAO,CACLC,SAAU,WACV8C,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ5V,MAAO,OACPoW,WAAY,EACZO,QAAS,IAGX,kBAACN,GAAD,mBACA,yBACE1D,MAAO,CAGLiE,gBAAiB7P,EAAQd,OAAOE,YAIlC,2BACEuH,KAAK,QACLmJ,MAAOzX,EAAM2E,QACb4O,MAAO,CACL3S,MAAO,MACPC,OAAQ,MACR6W,UAAW,aACXF,gBAAiB7P,EAAQd,OAAOI,UAGlCwO,SAAU,SAACpH,GAAD,OAAOrO,EAAM2X,MAAMtJ,EAAEuJ,OAAOH,eAS9CI,GAAqB/D,KAAOC,IAAV,0KA8DT+D,GApDM,SAAC9X,GACpB,MAA8B+X,mBAASpQ,EAAQlB,UAAU,IAAzD,oBAAOmQ,EAAP,KAAgBE,EAAhB,KACA,EAA4BiB,mBAASpQ,EAAQjB,YAAY,IAAzD,oBAAOsR,EAAP,KAAeZ,EAAf,KACA,EAAsCW,mBAASpQ,EAAQf,iBAAiB,IAAxE,oBAAOqR,EAAP,KAAoBX,EAApB,KACA,EAAyBS,mBAAS,WAAlC,oBAAOpT,EAAP,KAAgBgT,EAAhB,KAEA,MAAqB,SAAjB3X,EAAMyU,OAEN,kBAACZ,GAAD,CAAUN,MAAO,CAAE2E,UAAW,WAC5B,kBAAClE,GAAD,8BAEA,yBACET,MAAO,CACL1S,OAAQ,MACRyV,QAAS,OACT6B,cAAe,SACfC,UAAW,SACX7B,eAAgB,kBAGlB,kBAAC,GAAD,CACEO,WAAYA,EACZM,UAAWA,EACXE,eAAgBA,EAChB3S,QAASA,EACTgT,MAAOA,EACPU,UAAQ,IAEV,kBAACR,GAAD,KACE,kBAAC,GAAD,CACEtE,MAAO,CAAE8D,MAAO,OAAQiB,UAAW,oBACnCrU,KAAK,OACLzD,KAAK,OACLoI,KAAM5I,EAAM4I,OAEd,kBAAC,GAAD,CACE2K,MAAO,CAAE8D,MAAO,QAASiB,UAAW,mBACpCrU,KAAK,SACLzD,KAAK,QACLoI,KAAM,kBACJ5I,EAAMuY,YAAY3B,EAASoB,EAAQC,EAAatT,SAQrD,sCE/HI6T,GAfS,SAACxY,GACrB,MAAqB,SAAjBA,EAAMyU,OAEJ,kBAACZ,GAAD,KACE,kBAACG,GAAD,sBACA,kBAAC,GAAD,CAAiB/P,KAAK,SAAS2E,KAAM5I,EAAMuY,cAC3C,kBAAC,GAAD,CAAiBtU,KAAK,OAAOzD,KAAK,OAAOoI,KAAM5I,EAAM4I,QAKhD,sCCIF6P,GAfO,SAACzY,GACnB,MAAqB,SAAjBA,EAAMyU,OAEJ,kBAACZ,GAAD,KACE,kBAACG,GAAD,wBACA,kBAAC,GAAD,CAAiB/P,KAAK,OAAO2E,KAAM5I,EAAMuY,cACzC,kBAAC,GAAD,CAAiBtU,KAAK,OAAOzD,KAAK,OAAOoI,KAAM5I,EAAM4I,QAKhD,sCCFX8P,I,MAAU5E,KAAOC,IAAV,2FACI,SAAC/T,GAAD,MAA2B,SAAfA,EAAM6V,KAAkB,KAAO,QAsH5D,IAAM8C,GAAa,SAAC3Y,GAClB,IAAM4Y,EAAY5Y,EAAM6Y,aAAe7Y,EAAM6Y,cAAgB,GACvDC,EAAQ9Y,EAAM+Y,SAA4B,IAAjB/Y,EAAM+Y,SAAiB,IAEtD,OACE,yBAAK5Y,UAAU,mBAAmBmU,QAAStU,EAAMsU,SAC/C,yBAAKnU,UAAU,wBACb,yBACEgK,IAAKnK,EAAMmK,IACXoJ,MAAO,CACL1S,OAAO,GAAD,OAAKiY,EAAL,KACNR,UAAU,cAAD,OAAgBM,EAAhB,SAGb,gCAAM5Y,EAAMM,MAAZ,MAEF,yBAAKH,UAAU,2BACb,gCAAMH,EAAMgZ,SAAZ,QAMFC,GAAqB,SAACjZ,GAC1B,OACE,yBAAKG,UAAU,yBACb,6BACE,yBAAKgK,IAAKnK,EAAMmK,IAAK+O,IAAI,QAM3BC,GAAc,SAACnZ,GACnB,OACE,kBAAC,IAAD,CAAMI,GAAIJ,EAAMK,KAAMF,UAAU,qBAC9B,kBAAC,GAAD,CAAoBgK,IAAKnK,EAAMoZ,aAC/B,yBAAKjZ,UAAU,4BACb,gCAAMH,EAAMM,MAAZ,QAMF+Y,GAAiB,SAACrZ,GACtB,OACE,yBAAKG,UAAU,gBACb,yBAAKgK,IAAKmP,IAASJ,IAAI,SACvB,yBAAK/Y,UAAU,cAAcoT,MAAO,IAClC,yDACA,6BACA,oEACA,wBAAIA,MAAO,CAAE3S,MAAO,UACpB,kHASO2Y,GAhLf,SAAcvZ,GACZ,IAaIwZ,EAbJ,EAAgCzB,mBAAS,SAAzC,oBAAO0B,EAAP,KAAkBC,EAAlB,KACA,EAAsC3B,mBAAS,SAA/C,oBAAO4B,EAAP,KAAqBC,EAArB,KACA,EAAkC7B,mBAAS,SAA3C,oBAAO8B,EAAP,KAAmBC,EAAnB,KACA,EAAgC/B,mBAAS,SAAzC,oBAAOgC,EAAP,KAAkBC,EAAlB,KAGMC,EAAgB,CACpB,YACA,cACA,eACA,WACA,aAGF,GAAIA,GAAiBA,EAAc5V,OAAS,EAAG,CAC7C,IAAI6V,EAAe,GACnBD,EAAcxQ,KAAI,SAAC0Q,EAAGxP,GACpBuP,EAAahV,KAAK,kBAAC,GAAD,CAAagK,IAAKvE,EAAGrK,MAAO6Z,EAAG9Z,KAAK,UAExDmZ,EAAe,yBAAKrZ,UAAU,iBAAiB+Z,QAE/CV,EAAe,kBAAC,GAAD,MAmBjB,OAhBAY,qBAAU,WAEQ,SAAdX,GACiB,SAAjBE,GACe,SAAfE,EAEAG,EAAW,QAEG,UAAdP,GACiB,UAAjBE,GACe,UAAfE,GAEAG,EAAW,YAKb,oCACE,kBAAC,GAAD,CACEvF,OAAQgF,EACRrF,SAAS,MACTmE,YAAavY,EAAMqa,eACnBzR,KAAM,WACJ8Q,EAAW,YAGf,kBAAC,GAAD,CACEjF,OAAQoF,EACRzF,SAAS,GACTmE,YAAavY,EAAMsa,aACnB1R,KAAM,WACJkR,EAAY,YAGhB,kBAAC,GAAD,CACErF,OAAQkF,EACRvF,SAAS,GACTmE,YAAavY,EAAMua,eACnB3R,KAAM,WACJgR,EAAc,YAGlB,kBAAClB,GAAD,CAAS7C,KAAMkE,GACb,yBAAK5Z,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,GAAD,CACEG,MAAM,eACN0Y,SAAS,aACTH,cAAe,GACf1O,IAAK4M,iCACLzC,QAAS,WAEHoF,EADU,UAAdD,EACe,OACA,YAGnB,kBAAC,GAAD,CACEnZ,MAAM,OACN0Y,SAAS,aACT7O,IAAK4M,kCACLgC,SAAU,IACVF,cAAe,GACfvE,QAAS,WAEHwF,EADW,UAAfD,EACgB,OACA,YAGpB,kBAAC,GAAD,CACEvZ,MAAM,SACN0Y,SAAS,wBACT7O,IAAK4M,oCACL8B,cAAe,GACfvE,QAAS,WAEHsF,EADa,UAAjBD,EACkB,OACA,aAIvBH,GAGH,oCC7GFgB,G,kDACJ,WAAYxa,GAAQ,IAAD,8BACjB,cAAMA,IAEDqI,MAAQ,CACXoS,gBAAY7X,EACZ8X,UAAW,IALI,E,sDASnB,SAAmB3H,EAAWC,GACxBlS,KAAKuH,MAAMoS,WAAezH,EAAUyH,a,4BAI1C,SAAe7D,EAASoB,EAAQC,EAAatT,GAEzC,IAAI/D,EAAOC,EADG,YAAZ+V,GAGFjP,EAAQjB,YAAY+C,KAAI,SAACkR,EAAQhQ,GAC3BqN,IAAW2C,IACb/Z,EAAQ+Z,EAAO/Z,MACfC,EAAS8Z,EAAO9Z,OACI,eAAhBoX,IACFrX,EAAQ+Z,EAAO9Z,OACfA,EAAS8Z,EAAO/Z,WAKtBE,KAAK0R,SAAS,CAAEiI,WAAY,IAAI/V,EAAS9D,EAAOC,EAAQ8D,OAEnC,oBAAZiS,GAEY,aAAZA,IADT9V,KAAK0R,SAAS,CAAEiI,WAAY,IAAIlU,EAAuB,IAAM5B,KAK/D7D,KAAK0R,SAAS,CACZkI,UAAU,GAAD,mBAAM5Z,KAAKuH,MAAMqS,WAAjB,CAA4B5Z,KAAKuH,MAAMoS,eAGlD3Z,KAAKd,MAAM4a,QAAQ1V,KAAK,OAAQ,CAAEmD,MAAOvH,KAAKuH,MAAMoS,e,0BAEtD,SAAaI,M,4BACb,SAAeA,M,oBAEf,WAAU,IAAD,OACP,OACE,yBAAK1a,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0a,KAAK,QACV,kBAAC,EAAD,CAAQra,KAAK,eACb,kBAAC,GAAD,CAAQwO,IAAKlO,KAAKuH,MAAMoS,cAG1B,kBAAC,IAAD,CAAOK,OAAK,EAACD,KAAK,KACf,IADH,gCAGE,kBAAC,EAAD,CAAQra,KAAK,YACb,kBAAC,GAAD,CACE6Z,eAAgB,SAACzD,EAASoB,EAAQC,EAAatT,GAA/B,OACd,EAAKoW,eAAenE,EAASoB,EAAQC,EAAatT,IAEpD2V,aAAc,SAACO,GAAD,OAAU,EAAKG,aAAaH,IAC1CN,eAAgB,SAACM,GAAD,OAAU,EAAKI,eAAeJ,OAIlD,kBAAC,IAAD,CACEzU,OAAQ,kBACN,4BACG,IADH,6BAE4B,6BAF5B,OAEsC,kBAAC,IAAD,CAAMhG,GAAG,KAAT,oB,GAzElCwT,aAmFHsH,eAAWV,IC5F1BW,IAAS/U,OACP,kBAAC,IAAMgV,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJxI,SAASyI,eAAe,W","file":"static/js/main.814766cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ea09f389.svg\";","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n\r\nfunction NavItem(props) {\r\n\tconst right = props.right;\r\n\treturn (\r\n\t<React.Fragment>\t\r\n\t\t{ right ? \r\n\t\t<li className=\"right-nav\">\r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li>\r\n\t\t:\r\n\t\t<li> \r\n\t\t\t<Link to={props.link}>\r\n\t\t\t{props.title}\t\t\t\r\n\t\t\t</Link>\r\n\t\t</li> }\r\n\t</React.Fragment>\t\r\n\t)\r\n}\r\n\r\nfunction Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={props.side}>\r\n\t\t\t<ul className=\"Navbar\">\r\n\t\t\t\t<NavItem link=\"/\" title=\"Home\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document1\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document2\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Document3\" />\r\n\t\t\t\t<NavItem link=\"/\" title=\"Settings\" right=\"true\" />\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","class BoundingBox {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    this.coords = [xCoord, yCoord];\r\n    this.wh = [width, height];\r\n    this.endCoords = [xCoord + width, yCoord + height];\r\n  }\r\n\r\n  // dont know if i actually should define basic getters and setters\r\n  getCoords() {\r\n    return this.coords;\r\n  }\r\n  setCoords(x, y) {\r\n    this.coords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getEndCoords() {\r\n    return this.endCoords;\r\n  }\r\n  setEndCoords(x, y) {\r\n    this.endCoords = [x, y];\r\n    //also define new width and height values\r\n    this.wh = [this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]];\r\n  }\r\n\r\n  getWH() {\r\n    return this.coords;\r\n  }\r\n  setWH(w, h) {\r\n    this.wh = [w, h];\r\n    //also define new endCoords values\r\n    this.endCoords = [this.coords[0] + w, this.coords[1] + h];\r\n  }\r\n\r\n  setBounds(x, y, xEnd, yEnd) {\r\n    this.setCoords(x, y);\r\n    this.setEndCoords(xEnd, yEnd);\r\n    this.setWH(this.endCoords[0] - this.coords[0], this.endCoords[1] - this.coords[1]);\r\n  }\r\n\r\n  checkCollision(x, y) {\r\n\r\n    if (\r\n      x >= this.coords[0] &&\r\n      x <= this.endCoords[0] &&\r\n      y >= this.coords[1] &&\r\n      y <= this.endCoords[1]\r\n\r\n    ) {\r\n      // collison\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render(context, offset={x:0, y:0}, pixelRatio = 1) {\r\n    // render bounding box for testing\r\n    context.strokeStyle = \"#FF0000\"\r\n    context.lineWidth = 3\r\n\r\n    context.strokeRect(\r\n      offset.x + pixelRatio * this.coords[0],\r\n      offset.y + pixelRatio * this.coords[1],\r\n      pixelRatio * this.wh[0],\r\n      pixelRatio * this.wh[1]\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoundingBox;\r\n","import BoundingBox from \"./BoundingBox\";\r\n\r\nclass BaseShape {\r\n  constructor(xCoord, yCoord, width, height) {\r\n    // every object inherits a boundingbox\r\n    this.boundingBox = new BoundingBox(xCoord, yCoord, width, height);\r\n\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n  }\r\n  moveBounds(x, y) {\r\n    let coords = this.boundingBox.getCoords()\r\n    let endCoords = this.boundingBox.getEndCoords()\r\n\r\n    this.boundingBox.setBounds(coords[0] + x, coords[1] + y, endCoords[0] + x, endCoords[1] + y)\r\n  }\r\n  move(x, y) {\r\n    this.moveBounds(x, y)\r\n\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n  }\r\n\r\n  render() { }\r\n}\r\n\r\nclass Rectangle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    width,\r\n    height,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n\r\n    super(xCoord, yCoord, Math.abs(width), Math.abs(height))\r\n    //super(bCoords[0], bCoords[1], bCoords[2], bCoords[3]);\r\n\r\n    if (mode === \"centered\") {\r\n      this.xOffset = -width / 2;\r\n      this.yOffset = -height / 2;\r\n    } else {\r\n      this.xOffset = 0;\r\n      this.yOffset = 0;\r\n    }\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.fillRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * Math.abs(this.width), //width and height cant take on negative values\r\n      pixelRatio * Math.abs(this.height)\r\n    );\r\n    context.strokeRect(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.xOffset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.yOffset),\r\n      pixelRatio * Math.abs(this.width),\r\n      pixelRatio * Math.abs(this.height)\r\n    );\r\n  }\r\n}\r\n\r\nclass Circle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    radius,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined // mode=center means x and y coords are at the center of the objects\r\n  ) {\r\n    super(xCoord-radius, yCoord-radius, radius*2, radius*2);\r\n    \r\n    //console.log(\"CIRCLE: \" + xCoord, yCoord, radius);\r\n    if (mode === \"centered\") {\r\n      this.Offset = 0;\r\n    } else {\r\n      this.Offset = radius;\r\n    }\r\n\r\n    this.radius = radius;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n\r\n    context.lineWidth = this.borderWidth * pixelRatio; //TODO: lineWidth parameter;\r\n    context.strokeStyle = this.borderColor;\r\n\r\n    context.beginPath();\r\n    context.arc(\r\n      baseCoord.w + pixelRatio * (this.xCoord + this.Offset),\r\n      baseCoord.h + pixelRatio * (this.yCoord + this.Offset),\r\n      this.radius * pixelRatio,\r\n      0 * Math.PI, // starting point\r\n      2 * Math.PI // end point -> 2pi=360°\r\n    );\r\n    context.fill();\r\n    if (this.borderWidth > 0) context.stroke();\r\n\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nclass Triangle extends BaseShape {\r\n  constructor(\r\n    xCoord,\r\n    yCoord,\r\n    width,\r\n    height,\r\n    fillColor = \"#000000\",\r\n    borderColor = \"#393939\",\r\n    borderWidth = 25,\r\n    mode = undefined\r\n  ) {\r\n    super(xCoord, yCoord, Math.abs(width), Math.abs(height)); //width and height cant take on negative values\r\n\r\n    if (mode === \"centered\") {\r\n      this.xOffset = -width/2;\r\n      this.yOffset = -height/2;\r\n    } else {\r\n      this.xOffset = 0;\r\n      this.yOffset = 0;\r\n    }\r\n\r\n\r\n    this.xCoord = xCoord;\r\n    this.yCoord = yCoord;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillColor = fillColor;\r\n    this.borderColor = borderColor;\r\n    this.borderWidth = borderWidth;\r\n\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.fillStyle = this.fillColor;\r\n    context.lineWidth = pixelRatio * this.borderWidth;\r\n    context.strokeStyle = this.borderColor;\r\n    \r\n    let xCoord = baseCoord.w + pixelRatio * (this.xCoord + this.xOffset);\r\n    let yCoord = baseCoord.h + pixelRatio * (this.yCoord + this.yOffset);\r\n    let width = pixelRatio * this.width\r\n    let height = pixelRatio * this.height\r\n\r\n    context.beginPath();\r\n    context.moveTo(xCoord, yCoord);\r\n    context.lineTo(xCoord + width, yCoord);\r\n    context.lineTo(xCoord + width/2, yCoord + height);\r\n    context.lineTo(xCoord, yCoord);\r\n\r\n    context.fill();\r\n\r\n    context.closePath();\r\n    \r\n    if (this.borderWidth > 0) {context.stroke();}\r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default BaseShape;\r\nexport { Rectangle, Circle, Triangle };\r\n","import BaseShape from \"./BasicShapes\";\r\nimport BoundingBox from \"./BoundingBox\";\r\n\r\n\r\nclass Text extends BaseShape {\r\n    constructor(x, y, text = \"\", font = \"Iosevka Bold\", fontSize = 100, fillStyle = \"#393939\") {\r\n        super(x, y, 0, 0)\r\n        this.text = text\r\n        this.font = font\r\n        this.fontSize = fontSize\r\n        this.fillStyle = fillStyle\r\n\r\n        this.setWidthHeight()\r\n\r\n        this.setBounds(x, y)\r\n    }\r\n\r\n    setBounds(x=this.xCoord, y=this.yCoord) {\r\n        this.boundingBox.setBounds(x, y - this.height, x + this.width, y)\r\n    }\r\n\r\n    move(x, y) {\r\n    this.xCoord += x\r\n    this.yCoord += y\r\n\r\n    this.setBounds(this.xCoord, this.yCoord)\r\n\r\n    }\r\n\r\n\r\n    setWidthHeight() {\r\n        this.width = this.text.length * this.fontSize / 2\r\n        this.height = this.fontSize\r\n    }\r\n\r\n    setText(text) {\r\n        this.text = text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    addText(text) {\r\n        this.text += text\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    removeLastChar() {\r\n        this.text = this.text.slice(0, -1)\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n    clearText() {\r\n        this.text = \"\"\r\n        this.setWidthHeight()\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n    }\r\n\r\n\r\n    setFont(fontfamily) {\r\n        this.font = fontfamily\r\n    }\r\n    setFontSize(fontSize) {\r\n        this.fontSize = fontSize\r\n    }\r\n\r\n    render(context, pixelRatio, baseCoord) {\r\n        context.font = `${this.fontSize * pixelRatio}px ${this.font}` // i.e. 30px iosevka demibold\r\n        context.fillStyle = this.fillStyle\r\n\r\n        this.width = context.measureText(this.text).width / pixelRatio\r\n        this.setBounds(this.xCoord, this.yCoord)\r\n\r\n        context.fillText(\r\n            this.text,\r\n            baseCoord.w + pixelRatio * this.xCoord,\r\n            baseCoord.h + pixelRatio * this.yCoord\r\n        )\r\n\r\n        // this.boundingBox.render(context, {x : baseCoord.w, y: baseCoord.h}, pixelRatio)\r\n    }\r\n\r\n}\r\n\r\nexport default Text","import Text from \"./Objects/Text\";\r\n\r\nclass Artboard {\r\n  //\r\n  constructor(width, height, bgColor) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.bgColor = bgColor;\r\n\r\n    this.margin = 10; // margin to be set around the artboard\r\n\r\n    // variable to store all objects in document\r\n    // objects at the end of the list are on top of the other ones --> layer system\r\n    this.objects = [];\r\n    this.draw = this.draw.bind(this);\r\n\r\n    this.editable = true;\r\n  }\r\n\r\n  addObject(obj) {\r\n    this.objects.push(obj);\r\n  }\r\n\r\n  addObjects(objs) {\r\n    objs.forEach((obj) => {\r\n      this.objects.push(obj);\r\n    });\r\n  }\r\n\r\n  removeObject(obj) {\r\n    this.objects.splice(this.objects.indexOf(obj), 1);\r\n  }\r\n\r\n  getBackgroundColour() {\r\n    return this.bgColor;\r\n  }\r\n\r\n  ratioedCoords(x, y) {\r\n    // convert canvas coordinates to artboard coordinates\r\n    //-> scaled by pixelRatio\r\n    var artMeta = this.getArtboardMetadata();\r\n    return { x: x / artMeta.pixelRatio, y: y / artMeta.pixelRatio };\r\n  }\r\n  relativeCoords(x, y) {\r\n    // converts global coordinates to ones that are relative to the artboard\r\n    //-> i.e.if coord is left of artboard relative coord is negative\r\n    var artMeta = this.getArtboardMetadata();\r\n    return { x: x - artMeta.baseCoord.w, y: y - artMeta.baseCoord.h };\r\n  }\r\n  localCoords(x, y) {\r\n    // ratioedCoords + relativeCoords\r\n    var artMeta = this.getArtboardMetadata();\r\n    return {\r\n      x: (x - artMeta.baseCoord.w) / artMeta.pixelRatio,\r\n      y: (y - artMeta.baseCoord.h) / artMeta.pixelRatio,\r\n    };\r\n  }\r\n\r\n  getArtboardMetadata() {\r\n    let scrW = window.innerWidth;\r\n    let scrH = window.innerHeight;\r\n    var m = this.margin * 6;\r\n\r\n    if (scrW / scrH > this.width / this.height) {\r\n      var orient = \"v\";\r\n      var artH = scrH - m;\r\n      var artW = this.width * (artH / this.height);\r\n      var baseW = (scrW - artW) / 2;\r\n      var baseH = this.margin;\r\n    } else if (scrW / scrH < this.width / this.height) {\r\n      var orient = \"h\";\r\n      var artW = scrW - m;\r\n      var artH = this.height * (artW / this.width);\r\n      var baseW = this.margin;\r\n      var baseH = (scrH - artH) / 2;\r\n    } else {\r\n      var orient = \"sq\";\r\n      if (scrW >= scrH) {\r\n        var artW = scrW - m;\r\n        var artH = this.height * (this.width / scrW);\r\n      } else {\r\n        var artH = scrH - m;\r\n        var artW = this.width * (this.height / scrH);\r\n      }\r\n    }\r\n\r\n    if (orient === \"v\") {\r\n      var pixelRatio = artW / this.width;\r\n    } else {\r\n      var pixelRatio = artH / this.height;\r\n    }\r\n\r\n    return {\r\n      width: artW,\r\n      height: artH,\r\n      orient: orient,\r\n      baseCoord: { w: baseW, h: baseH },\r\n      pixelRatio: pixelRatio,\r\n    };\r\n  }\r\n\r\n  drawArtboard(context, artMeta) {\r\n    context.fillStyle = this.bgColor;\r\n    context.fillRect(\r\n      artMeta.baseCoord.w,\r\n      artMeta.baseCoord.h,\r\n      artMeta.width,\r\n      artMeta.height\r\n    );\r\n  }\r\n\r\n  drawObjects(context, artMeta) {\r\n    this.objects.forEach((obj) => {\r\n      obj.render(context, artMeta.pixelRatio, artMeta.baseCoord);\r\n    });\r\n  }\r\n\r\n  draw(context) {\r\n    const artMeta = this.getArtboardMetadata();\r\n\r\n    this.drawArtboard(context, artMeta);\r\n    this.drawObjects(context, artMeta);\r\n  }\r\n}\r\n\r\nclass infiniteScrollArtboard extends Artboard {\r\n  constructor(width, bgColor) {\r\n    super(width, 2 * width, bgColor);\r\n  }\r\n\r\n  drawArtboard(context, artMeta) {\r\n    context.fillStyle = this.bgColor;\r\n    context.fillRect(\r\n      0,\r\n      0,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n  }\r\n}\r\n\r\nclass infiniteArtboard extends Artboard {\r\n  constructor(width, bgColor) {\r\n    super(width, 2 * width, bgColor);\r\n  }\r\n\r\n  drawArtboard(context, artMeta) {\r\n    context.fillStyle = this.bgColor;\r\n    context.fillRect(artMeta.baseCoord.w, 0, artMeta.width, window.innerHeight);\r\n  }\r\n}\r\n\r\nclass noArtboard extends Artboard {\r\n  constructor(bgColor) {\r\n    super(1000, 1000, bgColor);\r\n    this.objects = [\r\n      new Text(\r\n        0,\r\n        (window.innerHeight / 3) * 2,\r\n        \"No Document created\",\r\n        \"Iosevka heavy\",\r\n        100,\r\n        \"#393939\"\r\n      ),\r\n    ];\r\n\r\n    this.editable = false;\r\n  }\r\n}\r\n\r\nexport default Artboard;\r\nexport { noArtboard, infiniteScrollArtboard, infiniteArtboard };\r\n","export default {\r\n  DOC_TYPES: [\"regular\", \"infinite-scroll\", \"infinite\"],\r\n  DOC_FORMATS: [\r\n    { name: \"A5\", width: 1748, height: 2480 },\r\n    { name: \"A4\", width: 2480, height: 3508 },\r\n    { name: \"A3\", width: 3508, height: 4961 },\r\n    { name: \"A2\", width: 4961, height: 7016 },\r\n    { name: \"A1\", width: 7016, height: 9933 },\r\n  ],\r\n  DOC_ORIENTATIONS: [\"vertical\", \"horizontal\"],\r\n  COLORS: {\r\n    lightlightgrey: \"#F8F8F8\",\r\n    lightgrey: \"#EBEBEB\",\r\n    grey: \"#DCDCDC\",\r\n    darkgrey: \"#393939\",\r\n    lightorange: \"#F3AA59\",\r\n    midorange: \"#FA7D36\",\r\n    midblue: \"#0D79F2\",\r\n  },\r\n};\r\n","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nclass BasePanelComponent {\r\n  constructor(x, y) {\r\n    this.coords = { x: x, y: y };\r\n\r\n    this.boundingBox = new BoundingBox(0, 0, 0, 0);\r\n  }\r\n\r\n  handleColission() {\r\n    console.log(\"clicked\", this);\r\n  }\r\n\r\n  render(context, panelOffset) {}\r\n}\r\n\r\nclass PanelButton extends BasePanelComponent {\r\n  constructor(x, y, w, h) {\r\n    super(x, y);\r\n\r\n    this.width = w;\r\n    this.height = h;\r\n\r\n    this.fS = GLOBALS.COLORS.grey;\r\n    this.sS = GLOBALS.COLORS.darkgrey;\r\n    this.lW = 5;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.lW,\r\n      w + this.lW,\r\n      h + this.lW\r\n    ); // NOTE: this expands boundingBox by 5px for all PanelButton derivatives as well\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.fillStyle = this.fS;\r\n    context.strokeStyle = this.sS;\r\n    context.lineWidth = this.lW;\r\n\r\n    // console.log(\r\n    //                 panelOffset.x + this.coords.x,\r\n    //     panelOffset.y + this.coords.y,\r\n    // )\r\n    context.fillRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    context.strokeRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelText extends BasePanelComponent {\r\n  constructor(x, y, text, size = 15) {\r\n    super(x, y);\r\n\r\n    this.text = text;\r\n    // this.width = w\r\n    // this.height = h\r\n    this.height = size;\r\n    this.fixBoundY = (this.height * 4) / 5;\r\n\r\n    this.width = (this.height * this.text.length) / 2;\r\n\r\n    this.font = `${this.height}px iosevka semibold`;\r\n    this.fS = GLOBALS.COLORS.darkgrey;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.fixBoundY,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.font = this.font;\r\n    context.fillStyle = this.fS;\r\n\r\n    context.fillText(\r\n      this.text,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelFunctionalText extends PanelText {\r\n  constructor(x, y, textFunc, size) {\r\n    super(x, y, textFunc, size);\r\n  }\r\n  render(context, panelOffset) {\r\n    context.font = this.font;\r\n    context.fillStyle = this.fS;\r\n\r\n    context.fillText(\r\n      this.text(),\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelTitle extends PanelText {\r\n  constructor(x, y, text, size = 25) {\r\n    super(x, y, text, size);\r\n\r\n    this.height = size;\r\n    this.fixBoundY = (this.height * 4) / 5;\r\n\r\n    this.width = (this.height * this.text.length) / 2;\r\n    this.font = `${this.height}px iosevka bold`;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.fixBoundY,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n}\r\n\r\nclass PanelTextSwitch extends PanelText {\r\n  constructor(x, y, text) {\r\n    super(x, y, text);\r\n\r\n    this.state = false;\r\n    this.switchFill = { off: GLOBALS.COLORS.grey, on: GLOBALS.COLORS.midblue };\r\n    this.switchDiameter = this.height;\r\n    this.textXOffset = 1.5 * this.switchDiameter;\r\n    this.width = this.width + this.textXOffset;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.fixBoundY,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n\r\n  handleColission() {\r\n    this.state = !this.state;\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.font = this.font;\r\n    context.fillStyle = this.fS;\r\n\r\n    context.strokeStyle = this.fS;\r\n    context.lineWidth = 3;\r\n\r\n    context.fillText(\r\n      this.text,\r\n      panelOffset.x + this.coords.x + this.textXOffset,\r\n      panelOffset.y + this.coords.y\r\n    );\r\n\r\n    if (this.state) {\r\n      context.fillStyle = this.switchFill.on;\r\n    } else {\r\n      context.fillStyle = this.switchFill.off;\r\n    }\r\n\r\n    context.fillRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y - this.fixBoundY,\r\n      this.switchDiameter,\r\n      this.switchDiameter\r\n    );\r\n\r\n    context.strokeRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y - this.fixBoundY,\r\n      this.switchDiameter,\r\n      this.switchDiameter\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelSlider extends BasePanelComponent {\r\n  constructor(x, y, w, h = 28, func = undefined) {\r\n    super(x, y);\r\n\r\n    this.width = w;\r\n    this.height = h;\r\n\r\n    this.func = func;\r\n\r\n    this.fS = GLOBALS.COLORS.darkgrey;\r\n    this.sS = GLOBALS.COLORS.darkgrey;\r\n    this.lW = 5;\r\n\r\n    this.sliderPosition = 0.5; // number 0-1 position of knob along slider\r\n    this.knobWidth = this.height / 2;\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      x,\r\n      y - this.lW,\r\n      w + this.lW,\r\n      h + this.lW\r\n    ); // NOTE: this expands boundingBox by 5px for all PanelButton derivatives as well\r\n\r\n    this.setSliderPos(this.sliderPosition);\r\n  }\r\n\r\n  handleColission(x, y) {\r\n    let xPercent = (x - this.coords.x) / this.width;\r\n    this.setSliderPos(xPercent);\r\n  }\r\n\r\n  getSliderPos() {\r\n    return this.sliderPosition;\r\n  }\r\n  setSliderPos(pos) {\r\n    if (pos < 0) {\r\n      this.sliderPosition = 0;\r\n    } else if (pos > 1) {\r\n      this.sliderPosition = 1;\r\n    } else {\r\n      this.sliderPosition = pos;\r\n    }\r\n    if (this.func) {\r\n      this.func(this.sliderPosition);\r\n    }\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.fillStyle = this.fS;\r\n    context.strokeStyle = this.sS;\r\n    context.lineWidth = this.lW;\r\n\r\n    //\r\n    context.beginPath();\r\n    context.moveTo(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y + this.height / 2\r\n    );\r\n    context.lineTo(\r\n      panelOffset.x + this.coords.x + this.width,\r\n      panelOffset.y + this.coords.y + this.height / 2\r\n    );\r\n    context.stroke();\r\n    context.closePath();\r\n\r\n    context.fillRect(\r\n      panelOffset.x +\r\n        this.coords.x +\r\n        this.sliderPosition * (this.width - this.knobWidth),\r\n      panelOffset.y + this.coords.y,\r\n      this.knobWidth,\r\n      this.height\r\n    );\r\n    context.strokeStyle = GLOBALS.COLORS.grey;\r\n    context.strokeRect(\r\n      panelOffset.x +\r\n        this.coords.x +\r\n        this.sliderPosition * (this.width - this.knobWidth),\r\n      panelOffset.y + this.coords.y,\r\n      this.knobWidth,\r\n      this.height\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nexport default BasePanelComponent;\r\nexport {\r\n  PanelButton,\r\n  PanelText,\r\n  PanelFunctionalText,\r\n  PanelTitle,\r\n  PanelTextSwitch,\r\n  PanelSlider,\r\n};\r\n","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport {\r\n  PanelButton,\r\n  PanelText,\r\n  PanelTitle,\r\n  PanelTextSwitch,\r\n} from \"./PanelComponents\";\r\n\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nclass Panel {\r\n  constructor(x, y, width, height, margin, border, rightSided = false) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.margin = margin;\r\n    this.border = border;\r\n    this.bhalf = this.border / 2;\r\n\r\n    this.components = [];\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      this.x - this.bhalf,\r\n      this.y - this.bhalf,\r\n      this.width + this.border,\r\n      this.height + this.border\r\n    );\r\n  }\r\n\r\n  checkBoundsCollision(x, y) {\r\n    let panelXY = this.getXY();\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      panelXY.x - this.bhalf,\r\n      panelXY.y - this.bhalf,\r\n      this.width + this.border,\r\n      this.height + this.border\r\n    );\r\n    if (this.boundingBox.checkCollision(x, y)) {\r\n      this.components.map((comp) => {\r\n        if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y))\r\n          comp.handleColission(x - panelXY.x, y - panelXY.y);\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getXY() {\r\n    // if panel x or y coords are negative, the panel is sticky towards that bottom/ right side\r\n    let x, y;\r\n\r\n    if (this.x < 0) {\r\n      x = window.innerWidth + this.x;\r\n    } else x = this.x;\r\n    if (this.y < 0) {\r\n      y = window.innerHeight + this.y;\r\n    } else y = this.y;\r\n    return { x: x, y: y };\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    this.components.map((comp) => {\r\n      let panelOffset = panelXY; // {x: x, y: y} panel offset to\r\n      comp.render(context, panelOffset);\r\n    });\r\n  }\r\n  render(context) {\r\n    context.fillStyle = GLOBALS.COLORS.grey;\r\n    context.strokeStyle = GLOBALS.COLORS.darkgrey;\r\n    context.lineWidth = this.border;\r\n\r\n    let panelXY = this.getXY();\r\n\r\n    context.fillRect(panelXY.x, panelXY.y, this.width, this.height);\r\n    context.strokeRect(panelXY.x, panelXY.y, this.width, this.height);\r\n\r\n    this.renderComponents(context, panelXY);\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import BoundingBox from \"../Objects/BoundingBox\";\r\nimport Panel from \"./BasePanel\";\r\nimport { PanelButton } from \"./PanelComponents\";\r\nimport GLOBALS from \"../../../Globals\";\r\nclass PanelToolButton extends PanelButton {\r\n  constructor(x, y, w, h, tool) {\r\n    super(x, y, w, h);\r\n\r\n    this.tool = tool;\r\n    this.fS = GLOBALS.COLORS.lightgrey;\r\n    this.activeSS = GLOBALS.COLORS.midorange;\r\n    this.lW = 6;\r\n  }\r\n\r\n  render(context, panelOffset, active = false) {\r\n    context.fillStyle = this.fS;\r\n    context.strokeStyle = this.sS;\r\n    if (active) context.strokeStyle = this.activeSS;\r\n    context.lineWidth = this.lW;\r\n\r\n    context.fillRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n\r\n    let icon = new Image();\r\n    icon.src = this.tool.icon;\r\n    context.drawImage(\r\n      icon,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y\r\n    );\r\n\r\n    context.strokeRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    // this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass Toolbox extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = (width / 2) * Math.ceil(toolManager.tools.length / 2);\r\n    let margin = 16;\r\n    let border = 8;\r\n\r\n    super(-150, -(70 + height), width, height, margin, border);\r\n    this.toolManager = toolManager;\r\n\r\n    this.toolWidth = 36;\r\n\r\n    this.componenets = [];\r\n    for (let i = 0; i < this.toolManager.tools.length; i++) {\r\n      let offsetX = this.margin + (this.margin + this.toolWidth) * (i % 2);\r\n      let offsetY =\r\n        this.margin +\r\n        (this.margin + this.toolWidth) * Math.ceil((i + 0.5) / 2 - 1);\r\n      this.components.push(\r\n        new PanelToolButton(\r\n          offsetX,\r\n          offsetY,\r\n          this.toolWidth,\r\n          this.toolWidth,\r\n          this.toolManager.tools[i]\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  handleColission(tool) {\r\n    if (tool !== this.toolManager.activeTool) {\r\n      this.toolManager.toolDeselect();\r\n      this.toolManager.activeTool = tool;\r\n      this.toolManager.toolSelect();\r\n    }\r\n  }\r\n\r\n  checkBoundsCollision(x, y) {\r\n    let panelXY = this.getXY();\r\n\r\n    this.boundingBox = new BoundingBox(\r\n      panelXY.x - this.bhalf,\r\n      panelXY.y - this.bhalf,\r\n      this.width + this.border,\r\n      this.height + this.border\r\n    );\r\n    if (this.boundingBox.checkCollision(x, y)) {\r\n      this.components.map((comp) => {\r\n        if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y))\r\n          this.handleColission(comp.tool);\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    let panelOffset = panelXY; // {x: x, y: y} panel offset to\r\n    this.components.map((comp) => {\r\n      let active = false;\r\n      if (comp.tool === this.toolManager.activeTool) active = true; // if tool is the active tool it needs to rendered distictively\r\n\r\n      comp.render(context, panelOffset, active);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Toolbox;\r\nexport { PanelToolButton }\r\n","import BaseShape from \"./BasicShapes\";\r\n\r\nfunction Point(x, y) {\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\n// TODO: smoothed paths: quadratic curves\r\nclass Path extends BaseShape {\r\n  constructor(points = [], strokeWidth = 10, strokeColor = \"#0D79F2\") {\r\n    super(0, 0, 0, 0);\r\n\r\n    this.points = []; // ...splits x and y into separate parameters\r\n    this.addPoints(points);\r\n\r\n    this.strokeWidth = strokeWidth;\r\n    this.strokeColor = strokeColor;\r\n\r\n    this.addPoint = this.addPoint.bind(this);\r\n    this.addPoints = this.addPoint.bind(this);\r\n  }\r\n\r\n  addPoint(x, y) {\r\n    this.points.push(new Point(x, y));\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n  addPoints(points) {\r\n    points.forEach((p) => {\r\n      this.points.push(new Point(p[0], p[1]));\r\n    });\r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n\r\n  }\r\n\r\n  determineNewBounds() {\r\n    // determine min and mix coordinates for selecting boundingBox\r\n    let minX = this.points[0].x;\r\n    let minY = this.points[0].y;\r\n    let maxX = this.points[0].x;\r\n    let maxY = this.points[0].y;\r\n    this.points.map(point => {\r\n      if (point.x < minX) minX = point.x;\r\n      if (point.y < minY) minY = point.y;\r\n      if (point.x > maxX) maxX = point.x;\r\n      if (point.y > maxY) maxY = point.y;\r\n    }) \r\n    return [\r\n      minX, minY,\r\n      maxX, maxY,\r\n    ];\r\n  }\r\n\r\n  // TODO: move Method for Path Objects \r\n  move(x, y) {\r\n    this.points.map(point => {\r\n      point.x += x\r\n      point.y += y\r\n    })\r\n    \r\n    this.boundingBox.setBounds(...this.determineNewBounds());\r\n  }\r\n\r\n  pointDistance(p1, p2) {\r\n    let deltaX = p1.x - p2.x \r\n    let deltaY = p1.y - p2.y\r\n    let dist = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2))\r\n    return dist\r\n  }\r\n  cleanUp() {\r\n    // remove points from path that are too close together, therefore enforce straighter, cleaner lines \r\n    var pointsAmount = 5\r\n    var pointsLength = this.points.length\r\n    var pointsRemoved = 0;\r\n    var distCutoff = 2.45\r\n\r\n\r\n    for (let i = 1; i < this.points.length; i++) {\r\n      if (this.pointDistance(this.points[i - 1], this.points[i]) < distCutoff) {\r\n\r\n        if (i < this.points.length - pointsAmount) {\r\n          pointsRemoved += pointsAmount\r\n          this.points.splice(i, pointsAmount)\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(`[path cleanup] ${pointsRemoved} points removed of ${pointsLength}` )\r\n  }\r\n\r\n  render(context, pixelRatio, baseCoord) {\r\n    context.lineWidth = pixelRatio * this.strokeWidth;\r\n    context.strokeStyle = this.strokeColor;\r\n\r\n    context.beginPath();\r\n    this.points.forEach((p) => {\r\n      context.lineTo(\r\n        baseCoord.w + pixelRatio * p.x,\r\n        baseCoord.h + pixelRatio * p.y\r\n      );\r\n    });\r\n    context.stroke();\r\n    context.closePath();\r\n\r\n    // context.beginPath();\r\n    // context.strokeStyle = \"#00FF00\";\r\n    // context.moveTo(baseCoord.w + pixelRatio * this.points[0].x, baseCoord.h + pixelRatio * this.points[0].y)\r\n    // for (var i = 1; i < this.points.length; i ++)\r\n    // {\r\n    //   var controlX = (baseCoord.w + pixelRatio * this.points[i - 1].x + baseCoord.w + pixelRatio * this.points[i].x) / 2;\r\n    //   var controlY = (baseCoord.h + pixelRatio * this.points[i - 1].y + baseCoord.h + pixelRatio * this.points[i].y) / 2;\r\n    //   context.quadraticCurveTo(\r\n    //     baseCoord.w + pixelRatio * this.points[i].x,\r\n    //     baseCoord.h + pixelRatio * this.points[i].y,\r\n    //     controlX,\r\n    //     controlY\r\n    //   );\r\n    // }\r\n    \r\n    // context.stroke();\r\n    // context.closePath();\r\n\r\n    // show points\r\n    // this.points.forEach((p) => {\r\n    //   context.fillRect(\r\n    //     baseCoord.w + pixelRatio * p.x,\r\n    //     baseCoord.h + pixelRatio * p.y,\r\n    //     7,\r\n    //     7\r\n    //   )\r\n    // });\r\n  }\r\n}\r\n\r\nexport default Path;\r\n","import Panel from \"./BasePanel\";\r\nimport BoundingBox from \"./../Objects/BoundingBox\";\r\nimport BasePanelComponent, {\r\n  PanelButton,\r\n  PanelFunctionalText,\r\n  PanelSlider,\r\n  PanelText,\r\n  PanelTitle,\r\n} from \"./PanelComponents\";\r\nimport { selectionT, pencilT, eraserT, textT } from \"../Tools\";\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nclass PanelColorButton extends PanelButton {\r\n  constructor(x, y, d, color, selectorComponent) {\r\n    super(x, y, d, d);\r\n\r\n    this.fS = color;\r\n    this.sS = GLOBALS.COLORS.darkgrey;\r\n    this.lW = 3;\r\n\r\n    this.selectorComponent = selectorComponent;\r\n  }\r\n}\r\n\r\nclass PanelColorSelectorComponent extends BasePanelComponent {\r\n  constructor(x, y, elementsX, diameter = 10, toolManager) {\r\n    let colors = [\r\n      \"#FF0000\",\r\n      \"#00FF00\",\r\n      \"#0000FF\",\r\n      \"#FFFF00\",\r\n      \"#FF00FF\",\r\n      \"#00FFFF\",\r\n      \"#FF8000\",\r\n      \"#FF0080\",\r\n      \"#FF8080\",\r\n      \"#80FF00\",\r\n      \"#00FF80\",\r\n      \"#80FF80\",\r\n      \"#8000FF\",\r\n      \"#0080FF\",\r\n      \"#8080FF\",\r\n      \"#FFFFFF\",\r\n      \"#BFBFBF\",\r\n      \"#808080\",\r\n      \"#404040\",\r\n      \"#000000\",\r\n    ];\r\n\r\n    let margin = Math.round((diameter / 5) * 2);\r\n    let elementsY = Math.ceil(colors.length / elementsX);\r\n    let w = margin + elementsX * (margin + diameter);\r\n    let h = margin + elementsY * (margin + diameter);\r\n    super(x, y, w, h);\r\n\r\n    this.margin = margin;\r\n    this.elementsX = elementsX;\r\n    this.elementsY = elementsY;\r\n    this.diameter = diameter;\r\n\r\n    this.colors = colors;\r\n    this.activeColor = colors[0];\r\n\r\n    this.toolManager = toolManager;\r\n\r\n    this.boundingBox = new BoundingBox(x, y, w, h);\r\n\r\n    this.subComponents = [\r\n      new PanelColorButton(\r\n        this.coords.x + this.margin,\r\n        this.coords.y + this.margin + this.elementsY * (margin + diameter),\r\n        this.diameter * 2,\r\n        this.toolManager,\r\n        this\r\n      ),\r\n    ];\r\n    for (let i = 0; i < colors.length; i++) {\r\n      this.subComponents.push(\r\n        new PanelColorButton(\r\n          this.coords.x +\r\n            this.margin +\r\n            (i % this.elementsX) * (margin + diameter),\r\n          this.coords.y +\r\n            this.margin +\r\n            Math.floor(i / this.elementsX) * (margin + diameter),\r\n          this.diameter,\r\n          this.colors[i],\r\n          this\r\n        )\r\n      );\r\n    }\r\n\r\n    this.setActiveColor();\r\n  }\r\n\r\n  setActiveColor() {\r\n    this.subComponents[0].fS = this.activeColor;\r\n    this.toolManager.strokeStyle = this.activeColor;\r\n  }\r\n  getActiveColor() {\r\n    return this.activeColor;\r\n  }\r\n\r\n  handleColission(x, y) {\r\n    this.subComponents.map((comp) => {\r\n      if (comp.boundingBox.checkCollision(x, y)) {\r\n        this.activeColor = comp.fS;\r\n\r\n        this.setActiveColor();\r\n        return comp;\r\n      }\r\n    });\r\n  }\r\n\r\n  renderComponents(context, panelOffset) {\r\n    this.subComponents.map((comp) => {\r\n      comp.render(context, panelOffset);\r\n    });\r\n  }\r\n  render(context, panelOffset) {\r\n    this.renderComponents(context, panelOffset);\r\n  }\r\n}\r\n\r\nclass PanelShapeButton extends PanelButton {\r\n  constructor(x, y, d, shape) {\r\n    super(x, y, d, d);\r\n\r\n    this.diameter = d;\r\n    this.shape = shape;\r\n  }\r\n\r\n  render(context, panelOffset) {\r\n    context.fillStyle = this.fS;\r\n    context.strokeStyle = this.sS;\r\n    context.lineWidth = this.lW;\r\n\r\n    context.fillRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n\r\n    let icon = new Image();\r\n    icon.src = this.shape;\r\n    // console.log(\"OFFSET:\", panelOffset.x + this.coords.x,\r\n    //   panelOffset.y + this.coords.y);\r\n    context.drawImage(\r\n      icon,\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.diameter,\r\n      this.diameter\r\n    );\r\n\r\n    context.strokeRect(\r\n      panelOffset.x + this.coords.x,\r\n      panelOffset.y + this.coords.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    //this.boundingBox.render(context, panelOffset)\r\n  }\r\n}\r\n\r\nclass PanelShapeSelectorComponent extends BasePanelComponent {\r\n  constructor(x, y, elementsX, diameter = 10, toolManager) {\r\n    let shapes = [\"circle\", \"rectangle\", \"triangle\"];\r\n\r\n    let margin = Math.round((diameter / 5) * 2);\r\n    let elementsY = Math.ceil(shapes.length / elementsX);\r\n    let w = margin + elementsX * (margin + diameter);\r\n    let h = margin + elementsY * (margin + diameter);\r\n    //console.log(x, y, w, h, margin)\r\n    super(x, y, w, h);\r\n\r\n    this.margin = margin;\r\n    this.elementsX = elementsX;\r\n    this.elementsY = elementsY;\r\n    this.diameter = diameter;\r\n\r\n    this.shapes = shapes;\r\n    this.activeShape = shapes[2];\r\n\r\n    this.icons = [];\r\n    for (let i = 0; i < shapes.length; i++) {\r\n      this.icons.push(\"assets/icons/tools/\" + this.shapes[i] + \".png\");\r\n    }\r\n\r\n    this.icon = this.icons[2]; //current icon\r\n\r\n    this.toolManager = toolManager;\r\n\r\n    this.boundingBox = new BoundingBox(x, y, w, h);\r\n\r\n    this.subComponents = [\r\n      new PanelShapeButton(\r\n        this.coords.x + this.margin,\r\n        this.coords.y + this.margin + this.elementsY * (margin + diameter),\r\n        this.diameter * 2,\r\n        this.icon\r\n      ),\r\n    ];\r\n    for (let i = 0; i < shapes.length; i++) {\r\n      this.subComponents.push(\r\n        new PanelShapeButton(\r\n          this.coords.x +\r\n            this.margin +\r\n            (i % this.elementsX) * (margin + diameter),\r\n          this.coords.y +\r\n            this.margin +\r\n            Math.floor(i / this.elementsX) * (margin + diameter),\r\n          this.diameter,\r\n          this.icons[i]\r\n        )\r\n      );\r\n    }\r\n\r\n    this.setActiveShape();\r\n  }\r\n  setActiveShape() {\r\n    this.subComponents[0].shape = this.icon;\r\n    this.toolManager.shape = this.activeShape;\r\n  }\r\n\r\n  handleColission(x, y) {\r\n    this.subComponents.map((comp) => {\r\n      if (comp.boundingBox.checkCollision(x, y)) {\r\n        this.icon = comp.shape; //comp.icon\r\n        this.activeShape = this.icon.substring(19, this.icon.length - 4); //cut string to shapename\r\n\r\n        this.setActiveShape();\r\n        return comp;\r\n      }\r\n    });\r\n  }\r\n\r\n  renderComponents(context, panelOffset) {\r\n    this.subComponents.map((comp) => {\r\n      comp.render(context, panelOffset);\r\n    });\r\n  }\r\n  render(context, panelOffset) {\r\n    this.renderComponents(context, panelOffset);\r\n  }\r\n}\r\n\r\nclass ToolSettingsPanel extends Panel {\r\n  constructor(toolManager) {\r\n    let width = 120;\r\n    let height = 160;\r\n    let margin = 16;\r\n    let border = 8;\r\n\r\n    super(-280, -(70 + height), width, height, margin, border);\r\n    this.toolManager = toolManager;\r\n\r\n    this.components = [\r\n      new PanelTitle(5, 20, \"Tool Settings\", 17),\r\n      new PanelFunctionalText(\r\n        6,\r\n        32,\r\n        () => {\r\n          return \"->\" + this.toolManager.activeTool.name;\r\n        },\r\n        12\r\n      ),\r\n    ];\r\n    this.toolSettings = {\r\n      select: {\r\n        components: [],\r\n        size: { height: 160 },\r\n      },\r\n      pencil: {\r\n        components: [\r\n          new PanelColorSelectorComponent(4, 35, 5, 15, this.toolManager),\r\n          new PanelText(10, 176, \"Line Width\", 13),\r\n          new PanelSlider(10, 180, 100, 20, (pos) => {\r\n            this.toolManager.strokeWidthPencil = pos * 40;\r\n          }),\r\n        ],\r\n        size: { height: 210 },\r\n      },\r\n      eraser: {\r\n        components: [\r\n          new PanelText(10, 56, \"Line Width\", 13),\r\n          new PanelSlider(10, 60, 100, 20, (pos) => {\r\n            this.toolManager.strokeWidthEraser = pos * 40;\r\n          }),\r\n        ],\r\n        size: { height: 160 },\r\n      },\r\n      text: {\r\n        components: [\r\n          new PanelText(10, 56, \"Font Size\", 13),\r\n          new PanelSlider(10, 60, 100, 20, (pos) => {\r\n            this.toolManager.fontSize = pos * 250;\r\n          }),\r\n        ],\r\n        size: { height: 160 },\r\n      },\r\n      shapes: {\r\n        components: [\r\n          new PanelShapeSelectorComponent(4, 35, 3, 25, this.toolManager),\r\n          new PanelText(10, 156, \"Border Width\", 13),\r\n          new PanelSlider(10, 160, 100, 20, (pos) => {\r\n            this.toolManager.borderWidth = pos * 40;\r\n          }),\r\n        ],\r\n        size: { height: 210 },\r\n      },\r\n    };\r\n  }\r\n\r\n  checkBoundsCollision(x, y) {\r\n    let panelXY = this.getXY();\r\n    this.boundingBox = new BoundingBox(\r\n      panelXY.x - this.bhalf,\r\n      panelXY.y - this.bhalf,\r\n      this.width + this.border,\r\n      this.height + this.border\r\n    );\r\n\r\n    if (this.boundingBox.checkCollision(x, y)) {\r\n      let components = [\r\n        ...this.components,\r\n        ...this.toolSettings[this.toolManager.activeTool.name].components,\r\n      ];\r\n\r\n      components.map((comp) => {\r\n        if (comp.boundingBox.checkCollision(x - panelXY.x, y - panelXY.y)) {\r\n          comp.handleColission(x - panelXY.x, y - panelXY.y);\r\n        }\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  renderComponents(context, panelXY) {\r\n    let panelOffset = panelXY; // {x: x, y: y} panel offset to\r\n\r\n    let components = [\r\n      ...this.components,\r\n      ...this.toolSettings[this.toolManager.activeTool.name].components,\r\n    ]; // list of all components\r\n    components.map((comp) => {\r\n      let active = false;\r\n      if (comp.tool === this.toolManager.activeTool) active = true; // if tool is the active tool it needs to rendered distictively\r\n\r\n      comp.render(context, panelOffset, active);\r\n    });\r\n  }\r\n\r\n  render(context) {\r\n    this.height =\r\n      this.toolSettings[this.toolManager.activeTool.name].size.height;\r\n    this.y = -(70 + this.height);\r\n\r\n    context.fillStyle = GLOBALS.COLORS.grey;\r\n    context.strokeStyle = GLOBALS.COLORS.darkgrey;\r\n    context.lineWidth = this.border;\r\n\r\n    let panelXY = this.getXY();\r\n\r\n    context.fillRect(panelXY.x, panelXY.y, this.width, this.height);\r\n    context.strokeRect(panelXY.x, panelXY.y, this.width, this.height);\r\n\r\n    this.renderComponents(context, panelXY);\r\n  }\r\n}\r\n\r\nexport default ToolSettingsPanel;\r\nexport { PanelShapeSelectorComponent };\r\n","import Toolbox from \"./Panels/Toolbox\";\r\nimport { Circle, Rectangle, Triangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport GLOBALS from \"../../Globals\";\r\nimport Text from \"./Objects/Text\";\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport ToolSettingsPanel from './Panels/ToolSettings';\r\n\r\n\r\nfunction getCoords(e) {\r\n  console.log(e)\r\n  if (e.type === \"touchstart\") {\r\n    return e.changedTouches[0].pageX, e.changedTouches[0].pageY\r\n  } else {\r\n    return e.pageX, e.pageY\r\n  }\r\n}\r\n\r\n// function object\r\nclass SelectionTool {\r\n  constructor() {\r\n    this.selectedObject = NaN;\r\n    this.moving = false;\r\n    this.lastPos = { x: NaN, y: NaN };\r\n\r\n    this.lastEventUp = false; // was last event mouseup -> next click event can be ignored\r\n\r\n    this.name = \"select\";\r\n    this.icon = \"assets/icons/tools/select.png\";\r\n  }\r\n\r\n  collisionOnObjects(coords, Doc) {\r\n    let objects = Doc.objects.slice(0).reverse(); // create reveresed copy of objects list\r\n    let pixelRatio = Doc.getArtboardMetadata().pixelRatio;\r\n\r\n    for (var i = 0; i < objects.length; i++) {\r\n      let obj = objects[i];\r\n\r\n      if (obj.boundingBox.checkCollision(coords.x, coords.y, pixelRatio)) {\r\n        return obj;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  select(obj) {\r\n    this.selectedObject = obj;\r\n  }\r\n\r\n  use(e, Doc) {\r\n    if (this.selectedObject && e.type === \"keydown\" && e.key === \"Delete\") {\r\n      Doc.removeObject(this.selectedObject);\r\n      this.selectedObject = NaN;\r\n      this.moving = false;\r\n    }\r\n\r\n    if (this.lastEventUp && e.type === \"click\") {\r\n      return;\r\n    } // if last event was mouseup mouse move has just finished and therefore a click at the position of mouseup is not needed\r\n    this.lastEventUp = false;\r\n\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n    if (e.type === \"click\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, Doc);\r\n    } else if (e.type === \"mousedown\" || e.type === \"touchstart\") {\r\n      this.selectedObject = this.collisionOnObjects(coords, Doc);\r\n      if (this.selectedObject) {\r\n        this.moving = true;\r\n      }\r\n      \r\n      this.lastPos.x = coords.x\r\n      this.lastPos.y = coords.y\r\n      \r\n\r\n    } else if (this.moving && (e.type === \"mousemove\" || e.type === \"touchmove\")) {\r\n      let xDelta = coords.x - this.lastPos.x\r\n      let yDelta = coords.y - this.lastPos.y\r\n\r\n      this.selectedObject.move(xDelta, yDelta)\r\n\r\n      this.lastPos.x = coords.x\r\n      this.lastPos.y = coords.y\r\n\r\n\r\n    } else if (this.selectedObject && (e.type === \"mouseup\" || e.type === \"touchend\")) {\r\n      this.moving = false\r\n      this.lastEventUp = true\r\n   }\r\n\r\n      this.lastPos.x = coords.x;\r\n      this.lastPos.y = coords.y;\r\n  } \r\n  \r\n\r\n  deselect() {\r\n    return this.selectedObject;\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.selectedObject) {\r\n      let x = this.selectedObject.boundingBox.coords[0];\r\n      let y = this.selectedObject.boundingBox.coords[1];\r\n      let w = this.selectedObject.boundingBox.wh[0];\r\n      let h = this.selectedObject.boundingBox.wh[1];\r\n\r\n      let pixelRatio = artMeta.pixelRatio;\r\n      let baseCoord = artMeta.baseCoord;\r\n\r\n      let offset = 32;\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = GLOBALS.COLORS.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset * 2),\r\n        pixelRatio * (h + offset * 2)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass PencilTool {\r\n  constructor() {\r\n    this.currentPath = NaN;\r\n    this.lastPath = NaN;\r\n    this.eventCount = 0;\r\n    this.pointsToAdd = [];\r\n    this.lastMoveEvent = new Date();\r\n\r\n    this.toolManager = undefined;\r\n\r\n    this.name = \"pencil\";\r\n    // this.use = this.use.bind(this);\r\n    this.icon = \"assets/icons/tools/pencil.png\";\r\n  }\r\n\r\n  select(obj) {}\r\n\r\n  use(e, Doc) {\r\n    this.eventCount += 1;\r\n    \r\n    if (e.type === \"touchstart\") { \r\n      var coords = Doc.localCoords(\r\n        getCoords(e)[0],\r\n        getCoords(e)[1],\r\n        window.innerWidth,\r\n        window.innerHeight\r\n      ); \r\n    } else {\r\n      var coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n    }\r\n\r\n    // let coords = Doc.localCoords(\r\n    //   getCoords(e)[0],\r\n    //   getCoords(e)[1],\r\n    //   window.innerWidth,\r\n    //   window.innerHeight\r\n    // );\r\n    // console.log(getCoords(e)[0])\r\n\r\n    if (e.type === \"mousedown\" || e.type === \"touchstart\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        this.toolManager.strokeWidthPencil,\r\n        this.toolManager.strokeStyle\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n    } else if (\r\n      this.inUse &&\r\n      (e.type === \"mousemove\" || e.type === \"touchmove\")\r\n    ) {\r\n      this.currentPath.addPoint(coords.x, coords.y);\r\n      // this.currentPath.cleanUp()\r\n    } else if (this.inUse && (e.type === \"mouseup\" || e.type === \"touchend\")) {\r\n      this.currentPath.addPoints(coords.x, coords.y);\r\n      this.currentPath.cleanUp();\r\n      // Doc.addObject(new Circle(coords.x, coords.y, 8, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.lastPath = this.currentPath;\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n\r\n  deselect() {\r\n    return this.lastPath;\r\n  }\r\n\r\n  graphic(context, artMeta) {}\r\n}\r\n\r\nclass EraserTool extends PencilTool {\r\n  constructor() {\r\n    super();\r\n\r\n    this.toolManager = undefined;\r\n\r\n    this.name = \"eraser\";\r\n    this.icon = \"assets/icons/tools/eraser.png\";\r\n  }\r\n  use(e, Doc) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n\r\n    if (e.type === \"mousedown\" || e.type === \"touchstart\") {\r\n      this.inUse = true;\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0)); //colour --> getBackgroundColour Artboard Class\r\n      this.currentPath = new Path(\r\n        [[coords.x, coords.y]],\r\n        this.toolManager.strokeWidthEraser,\r\n        Doc.getBackgroundColour()\r\n      );\r\n      Doc.addObject(this.currentPath);\r\n    } else if(this.inUse && (e.type === \"mousemove\" || e.type === \"touchmove\")) {\r\n      this.currentPath.addPoint(coords.x,coords.y);\r\n    } else if(this.inUse && (e.type === \"mouseup\" || e.type === \"touchend\")) {\r\n      this.currentPath.addPoints(coords.x,coords.y);\r\n      // Doc.addObject(new Circle(coords.x, coords.y, this.radius, \"red\", undefined, 0));\r\n\r\n      this.inUse = false;\r\n      this.currentPath = NaN;\r\n    }\r\n  }\r\n}\r\n\r\nclass TextTool {\r\n  constructor() {\r\n    this.activeObject = NaN;\r\n\r\n    this.toolManager = undefined;\r\n\r\n    this.name = \"text\";\r\n\r\n    this.icon = \"assets/icons/tools/text.png\";\r\n  }\r\n\r\n  select(obj) {\r\n    if (obj instanceof Text) {\r\n      this.activeObject = obj;\r\n    }\r\n  }\r\n\r\n  use(e, Doc) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n\r\n    if (e.type === \"click\") {\r\n      this.activeObject = new Text(\r\n        coords.x,\r\n        coords.y,\r\n        \"\",\r\n        this.toolManager.font,\r\n        this.toolManager.fontSize\r\n      );\r\n    } else if (e.type === \"mousedown\") {\r\n      this.activeObject = new Text(\r\n        coords.x,\r\n        coords.y,\r\n        \"\",\r\n        this.toolManager.font,\r\n        this.toolManager.fontSize\r\n      );\r\n      Doc.objects.push(this.activeObject);\r\n    } else if (this.activeObject && e.type === \"keypress\") {\r\n      this.activeObject.addText(e.key);\r\n    } else if (this.activeObject && e.type === \"keydown\") {\r\n      if (e.key === \"Escape\") {\r\n        // console.log(this.activeObject.text.length);\r\n        if (this.activeObject.text.length == 0) {\r\n          Doc.removeObject(this.activeObject);\r\n        } //check if textlength 0\r\n        this.activeObject = NaN;\r\n      } else if (e.key === \"Backspace\") {\r\n        this.activeObject.removeLastChar();\r\n      }\r\n    }\r\n\r\n    if (this.activeObject) {\r\n      this.activeObject.fontSize = this.toolManager.fontSize;\r\n      this.activeObject.setWidthHeight();\r\n      this.activeObject.setBounds();\r\n    }\r\n  }\r\n\r\n  deselect() {\r\n    if (this.activeObject && this.activeObject.text.length == 0) {\r\n      this.toolManager.Doc.removeObject(this.activeObject);\r\n      this.activeObject = NaN;\r\n    }\r\n    return this.activeObject;\r\n  }\r\n\r\n  graphic(context, artMeta) {\r\n    // show selection box\r\n    if (this.activeObject) {\r\n      let x = this.activeObject.boundingBox.coords[0];\r\n      let y = this.activeObject.boundingBox.coords[1];\r\n      let w = this.activeObject.boundingBox.wh[0];\r\n      let h = this.activeObject.boundingBox.wh[1];\r\n\r\n      let pixelRatio = artMeta.pixelRatio;\r\n      let baseCoord = artMeta.baseCoord;\r\n\r\n      let offset = 32;\r\n      // context.fillStyle = \"#00FF00\";\r\n      context.lineWidth = 3; //TODO: lineWidth parameter;\r\n      context.strokeStyle = GLOBALS.COLORS.midorange;\r\n\r\n      context.strokeRect(\r\n        baseCoord.w + pixelRatio * (x - offset),\r\n        baseCoord.h + pixelRatio * (y - offset),\r\n        pixelRatio * (w + offset * 2) + 10,\r\n        pixelRatio * (h + offset * 2)\r\n      );\r\n\r\n      // text cursor\r\n      context.fillRect(\r\n        baseCoord.w +\r\n          pixelRatio * (this.activeObject.xCoord + this.activeObject.width) +\r\n          4,\r\n        baseCoord.h +\r\n          pixelRatio * (this.activeObject.yCoord - this.activeObject.height),\r\n        3,\r\n        pixelRatio * this.activeObject.height\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass ShapeTool {\r\n  constructor() {\r\n    this.icon = \"assets/icons/tools/shapes.png\";\r\n    this.shapes = [\"circle\", \"rectangle\", \"triangle\"];\r\n\r\n    this.name = \"shapes\";\r\n\r\n    this.currentShape = undefined;\r\n    this.lastShape = this.currentShape;\r\n    this.toolManager = undefined;\r\n  }\r\n  select() {}\r\n\r\n  use(e, Doc) {\r\n    let coords = Doc.localCoords(\r\n      e.pageX,\r\n      e.pageY,\r\n      window.innerWidth,\r\n      window.innerHeight\r\n      );\r\n      \r\n      let shape = this.toolManager.shape //this.shapes[2];\r\n\r\n      if (e.type === \"mousedown\" || e.type === \"touchstart\") {\r\n        //console.log(coords.x, coords.y)\r\n        this.inUse = true;\r\n        this.x1 = coords.x;\r\n        this.y1 = coords.y;\r\n        \r\n        if (shape === \"circle\") {\r\n          this.currentShape = new Circle(this.x1, this.y1, 0); //x, y, r, fC, bC, bW\r\n        } else if (shape === \"rectangle\") {\r\n          this.currentShape = new Rectangle(this.x1, this.y1, 0, 0);\r\n        } else if (shape === \"triangle\") {\r\n          this.currentShape = new Triangle(this.x1, this.y1, 0, 0);\r\n        } else { console.log(\"ERROR SHAPE-SELECTION\") }\r\n\r\n        this.currentShape.borderWidth = this.toolManager.borderWidth;\r\n        Doc.addObject(this.currentShape)\r\n        \r\n        //console.log(this.currentShape)\r\n      } else if (this.inUse && (e.type === \"mousemove\" || e.type === \"touchmove\")) {\r\n        \r\n        //console.log(this.currentShape)\r\n        \r\n        if (this.currentShape instanceof Triangle) {\r\n          this.currentShape.width = coords.x - this.x1\r\n          this.currentShape.height = coords.y - this.y1\r\n\r\n        } else if (this.currentShape instanceof Circle) {\r\n          this.currentShape.radius = Math.sqrt(Math.pow((this.x1 - coords.x), 2) + Math.pow((this.y1 - coords.y), 2));\r\n        \r\n        } else if (this.currentShape instanceof Rectangle) {\r\n          this.currentShape.width = coords.x - this.x1\r\n          this.currentShape.height = coords.y - this.y1\r\n\r\n          if (this.currentShape.width < 0 && this.currentShape.height > 0) {\r\n            this.currentShape.xCoord = coords.x;\r\n          } else if (this.currentShape.width > 0 && this.currentShape.height < 0) {\r\n            this.currentShape.yCoord = coords.y;\r\n          } else if (this.currentShape.width < 0 && this.currentShape.height < 0) {\r\n            this.currentShape.xCoord = coords.x;\r\n            this.currentShape.yCoord = coords.y;\r\n          } else {}\r\n        }\r\n      }\r\n      \r\n      else if (this.inUse && (e.type === \"mouseup\" || e.type === \"touchend\")) {\r\n        if (this.currentShape.width == 0 || this.currentShape.height == 0) {\r\n            Doc.removeObject(this.currentShape);\r\n            this.currentShape = NaN;\r\n            return;\r\n          }\r\n\r\n      if (this.currentShape instanceof Circle) {\r\n        var x = this.currentShape.xCoord - this.currentShape.radius;\r\n        var y = this.currentShape.yCoord - this.currentShape.radius;\r\n        var width = this.currentShape.radius * 2;\r\n        var height = this.currentShape.radius * 2;\r\n      } else {\r\n        var x = this.currentShape.xCoord;\r\n        var y = this.currentShape.yCoord;\r\n        var width = this.currentShape.width;\r\n        var height = this.currentShape.height;\r\n\r\n        if (this.currentShape instanceof Triangle) {\r\n          if (width < 0 && height > 0) {\r\n            x += width;\r\n          } else if (width > 0 && height < 0) {\r\n            y += height;\r\n          } else if (width < 0 && height < 0) {\r\n            x += width;\r\n            y += height;\r\n          } else {\r\n          }\r\n        }\r\n      }\r\n      //console.log(\"TOOLSCOORD: \" + x, y, width, height)\r\n      this.currentShape.boundingBox.setBounds(\r\n        x,\r\n        y,\r\n        x + Math.abs(width),\r\n        y + Math.abs(height)\r\n      );\r\n      this.inUse = false;\r\n      this.lastShape = this.currentShape;\r\n      this.currentShape = undefined;\r\n    }\r\n  }\r\n  deselect() {\r\n    return this.lastShape;\r\n  }\r\n  graphic(context, artMeta) {}\r\n}\r\n\r\nvar selectionT = new SelectionTool();\r\nvar pencilT = new PencilTool();\r\nvar eraserT = new EraserTool();\r\nvar textT = new TextTool();\r\nvar shapeT = new ShapeTool();\r\n\r\nclass ToolManager {\r\n  constructor(Doc) {\r\n    this.Doc = Doc;\r\n    this.tools = [];\r\n    this.tools.push(selectionT, pencilT, eraserT, textT, shapeT);\r\n    this.toolUse = this.toolUse.bind(this);\r\n    this.activeTool = this.tools[0];\r\n    this.strokeWidthPencil = 10;\r\n    this.strokeWidthEraser = 10;\r\n    this.strokeStyle = \"#111111\";\r\n    this.font = \"Iosevka bold\";\r\n    this.fontSize = 100;\r\n\r\n    this.lastObj = NaN;\r\n\r\n    pencilT.toolManager = this;\r\n    eraserT.toolManager = this;\r\n    textT.toolManager = this;\r\n\r\n    this.shape = \"triangle\";\r\n    this.borderWidth = 25;\r\n\r\n    this.lastObj = NaN;\r\n\r\n    pencilT.toolManager = this;\r\n    eraserT.toolManager = this;\r\n    textT.toolManager = this;\r\n    shapeT.toolManager = this;\r\n\r\n    this.panel = new Toolbox(this);\r\n    this.settingsPanel = new ToolSettingsPanel(this);\r\n  }\r\n\r\n  toolSelect() {\r\n    this.activeTool.select(this.lastObj);\r\n  }\r\n  toolUse(e) {\r\n    this.activeTool.use(e, this.Doc);\r\n  }\r\n  toolDeselect() {\r\n    this.lastObj = this.activeTool.deselect();\r\n  }\r\n\r\n  toolGraphic(context) {\r\n    const artMeta = this.Doc.getArtboardMetadata();\r\n    // function to display tool related graphics on redraw; i.e. selection box if selection tool is this.activeTool\r\n    this.activeTool.graphic(context, artMeta);\r\n  }\r\n}\r\n\r\nexport default ToolManager;\r\nexport { selectionT, pencilT, eraserT, textT, shapeT };\r\n","import React, { useRef, useEffect, useState, Component } from \"react\";\r\nimport Artboard, { noArtboard } from \"./Artboard\";\r\nimport ToolManager from \"./Tools\";\r\nimport { Circle, Rectangle, Triangle } from \"./Objects/BasicShapes\";\r\nimport Path from \"./Objects/Paths\";\r\nimport Text from \"./Objects/Text\";\r\n\r\nimport Panel from \"./Panels/BasePanel\";\r\nimport SettingsToolPanel from \"./Panels/ToolSettings\";\r\nimport {\r\n  PanelButton,\r\n  PanelSlider,\r\n  PanelText,\r\n  PanelTextSwitch,\r\n  PanelTitle,\r\n} from \"./Panels/PanelComponents\";\r\nimport GLOBALS from \"../../Globals\";\r\n\r\nvar FPS = 120;\r\nvar CANVAS_BG = \"#F3F3F3\";\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Doc: this.props.Doc ? this.props.Doc : new noArtboard(CANVAS_BG),\r\n      Tools: undefined,\r\n      Panels: undefined,\r\n    };\r\n\r\n    this.canvasRef = React.createRef();\r\n\r\n    this._isMounted = false;\r\n\r\n    this.resizeCallback = (() =>\r\n      this.handleResize(this.canvasRef.current.getContext(\"2d\"))).bind(this);\r\n    this.mouseKeyCallback = ((e) => this.handleCanvasEvent(e)).bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    var toolManager = new ToolManager(this.state.Doc);\r\n    this.setState({ Tools: toolManager });\r\n    // testing panels\r\n    var testPanel = new Panel(20, -350, 200, 300, 16, 8);\r\n    testPanel.components = [\r\n      new PanelButton(20, 100, 20, 20),\r\n      new PanelTitle(20, 30, \"Test\"),\r\n      new PanelText(20, 50, \"testing testing please\"),\r\n      new PanelTextSwitch(20, 80, \"testing\"),\r\n      new PanelSlider(15, 130, 170),\r\n    ];\r\n    this.setState({\r\n      Panels: [toolManager.panel, toolManager.settingsPanel, testPanel],\r\n    });\r\n\r\n    // get canvas\r\n    const canvas = this.canvasRef.current;\r\n\r\n    window.addEventListener(\"resize\", this.resizeCallback);\r\n    canvas.addEventListener(\"click\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"mousedown\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"mouseup\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"mousemove\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"touchstart\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"touchmove\", this.mouseKeyCallback);\r\n    canvas.addEventListener(\"touchend\", this.mouseKeyCallback);\r\n    document.addEventListener(\"keypress\", this.mouseKeyCallback);\r\n    document.addEventListener(\"keydown\", this.mouseKeyCallback);\r\n\r\n    setInterval(() => this.forceUpdate(), 1000 / FPS);\r\n  }\r\n\r\n  // runs after every page render -> checks for events\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // set new tool manager and panels if document changes\r\n    if (prevState.Doc !== this.state.Doc) {\r\n      var toolManager = new ToolManager(this.state.Doc);\r\n      this.setState({ Tools: toolManager });\r\n      // testing panels\r\n      var testPanel = new Panel(20, -350, 200, 300, 16, 8);\r\n      testPanel.components = [\r\n        new PanelButton(20, 100, 20, 20),\r\n        new PanelTitle(20, 30, \"Test\"),\r\n        new PanelText(20, 50, \"testing testing please\"),\r\n        new PanelTextSwitch(20, 80, \"testing\"),\r\n        new PanelSlider(15, 130, 170),\r\n      ];\r\n      this.setState({\r\n        Panels: [toolManager.panel, toolManager.settingsPanel, testPanel],\r\n      });\r\n    }\r\n\r\n    const context = this.canvasRef.current.getContext(\"2d\");\r\n    this.updateCanvas(context);\r\n\r\n    };\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n\r\n    // get canvas\r\n    const canvas = this.canvasRef.current;\r\n\r\n    window.removeEventListener(\"resize\", this.resizeCallback);\r\n    canvas.removeEventListener(\"click\", this.mouseKeyCallback);\r\n    canvas.removeEventListener(\"mousedown\", this.mouseKeyCallback);\r\n    canvas.removeEventListener(\"mouseup\", this.mouseKeyCallback);\r\n    canvas.removeEventListener(\"mousemove\", this.mouseKeyCallback);\r\n    canvas.removeEventListener(\"touchmove\", this.mouseKeyCallback);\r\n    document.removeEventListener(\"keypress\", this.mouseKeyCallback);\r\n    document.removeEventListener(\"keydown\", this.mouseKeyCallback);\r\n  }\r\n\r\n  updateCanvas(context) {\r\n    // reset canvas\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n    context.fillStyle = CANVAS_BG;\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n    this.state.Doc.draw(context);\r\n    this.state.Tools.toolGraphic(context);\r\n\r\n    // show panels\r\n    this.state.Panels.map((panel) => {\r\n      panel.render(context);\r\n    });\r\n  }\r\n\r\n  handleResize(context) {\r\n    // TODO: limit the amount of resizes for performace purposes\r\n\r\n    this.canvasRef.current.width = window.innerWidth;\r\n    this.canvasRef.current.height = window.innerHeight;\r\n    this.updateCanvas(context);\r\n  }\r\n\r\n  handleCanvasEvent(e) {\r\n\r\n    if (e.type === \"click\") { // ignore click event after mouseup as click is always raised after holding mouse down\r\n      return\r\n    }\r\n\r\n    // if (e.type !== \"mousemove\") { beforeMouseMove = e.type }\r\n    // || (beforeMouseMove === \"mousedown\" && e.type === \"mousemove\")\r\n    // TODO: enable smooth dragging of slider panel component  with code above, without interrupting tool use/ changing panel settings\r\n\r\n    // check click / mousedown collision with panels\r\n    if (e.type === \"click\" || e.type === \"mousedown\") { \r\n      for (let i = 0; i < this.state.Panels.length; i++) {\r\n        let panel = this.state.Panels[i]\r\n        if (panel.checkBoundsCollision(e.pageX, e.pageY)) {\r\n          return\r\n        }\r\n      }\r\n    } \r\n    if (this.state.Doc.editable) this.state.Tools.toolUse(e);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={this.canvasRef}\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        style={{ position: \"absolute\", bottom: 0, left: 0 }}\r\n        id=\"theCanvas\"\r\n      >\r\n        {\" \"}\r\n      </canvas>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GLOBALS from \"../../../Globals\";\r\n\r\nconst ModalBox = styled.div`\r\n  position: fixed;\r\n  display: block;\r\n  z-index: 1000;\r\n  background-color: ${GLOBALS.COLORS.lightgrey};\r\n  outline-style: solid;\r\n  outline-color: ${GLOBALS.COLORS.darkgrey};\r\n  outline-width: 1.2vh;\r\n  width: 70vw;\r\n  heigh: 50vh;\r\n  min-width: 75vw;\r\n  max-width: 95vw;\r\n  max-height: 95vh;\r\n  aspect-ratio: 2;\r\n  top: 50vh;\r\n  left: 50vw;\r\n  transform: translate(-50%, -50%);\r\n  @media (max-aspect-ratio: 4/3) {\r\n    aspect-ratio: 1/2;\r\n  }\r\n`;\r\nconst ModalTitle = styled.div`\r\n  font-family: Iosevka Extended Heavy;\r\n  font-size: calc(12px + ${({ size }) => size || 4}vh);\r\n  color: ${GLOBALS.COLORS.darkgrey};\r\n  margin-top: 3vh;\r\n  user-select: none;\r\n`;\r\n\r\nconst ModalTextButtonStyle = styled.button`\r\n  // ${({ side }) => (side == \"right\" ? `left: 40%;` : `left: 5%;`)};\r\n  // top: 100px;\r\n  background-color: ${GLOBALS.COLORS.grey};\r\n  color: ${GLOBALS.COLORS.darkgrey};\r\n  font-size: 1vh;\r\n  border: 4px solid ${GLOBALS.COLORS.darkgrey};\r\n  aspect-ratio: 2;\r\n  font-family: Iosevka bold;\r\n  font-size: calc(12px + 1.5vw);\r\n  height: calc((12px + 1.5vw) * 1.6);\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    border: 4px solid ${GLOBALS.COLORS.lightorange};\r\n  }\r\n  &:focus {\r\n    border: 4px solid ${GLOBALS.COLORS.lightorange};\r\n  }\r\n`;\r\n\r\nconst ModalTextButton = (props) => {\r\n  if (props.redirect && !props.func) {\r\n    return (\r\n      <div style={props.style}>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <Link\r\n            to={props.redirect}\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\" }}\r\n            onClick={() => {}}\r\n          >\r\n            {props.text}\r\n          </Link>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\r\n  } else if (!props.redirect && props.func) {\r\n    return (\r\n      <div style={props.style}>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <div\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\" }}\r\n            onClick={() => props.func()}\r\n          >\r\n            {props.text}\r\n          </div>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <ModalTextButtonStyle side={props.side}>\r\n          <div\r\n            style={{ margin: \"0.2vw\", fontFamily: \"inherit\", color: \"inherit\" }}\r\n            onClick={() => {}}\r\n          >\r\n            {props.text}\r\n          </div>\r\n        </ModalTextButtonStyle>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst BaseModal = (props) => {\r\n  if (props.isOpen === \"true\") {\r\n    return (\r\n      <ModalBox>\r\n        <ModalTextButton text=\"Back\" side=\"left\" func={props.func} />\r\n      </ModalBox>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default BaseModal;\r\nexport { ModalBox, ModalTextButton, ModalTitle, ModalTextButtonStyle };\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport GLOBALS from \"../../../../Globals\";\r\n\r\nconst DropDownStyle = styled.div`\r\n  display: inline-block;\r\n  float: left;\r\n  position: relative;\r\n  width: ${(props) => props.width};\r\n  text-align: center;\r\n`;\r\n\r\nconst OptionsDiv = styled.div`\r\n  position: absolute;\r\n  float: left;\r\n  width: calc(100% - ${(props) => props.size} / 8);\r\n  transform-origin: top;\r\n  transform: scaleY(${(props) => (props.isOpen ? 1 : 0)});\r\n  z-index: 2000;\r\n  border: calc(${(props) => props.size} / 16) solid ${GLOBALS.COLORS.darkgrey};\r\n`;\r\n\r\nconst OptionButton = styled.button`\r\n  display: block;\r\n  padding: 0vh 0.6vw;\r\n  // margin: -0.5vw 0;\r\n  width: 100%;\r\n  border: 0px solid ${GLOBALS.COLORS.darkgrey};\r\n  &:hover {\r\n    outline: calc(${(props) => props.size} / 14) solid\r\n      ${GLOBALS.COLORS.lightorange};\r\n    cursor: pointer;\r\n  }\r\n  &:focus {\r\n    outline: calc(${(props) => props.size} / 14) solid\r\n      ${GLOBALS.COLORS.midorange};\r\n  }\r\n`;\r\nconst OptionButtonText = styled.div`\r\n  font-family: Iosevka bold;\r\n  font-size: calc(${(props) => props.size} / 2.7);\r\n  transform: scale(1.3);\r\n  user-select: none;\r\n`;\r\n\r\nconst SelectedOptionButton = styled.button`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.2vh 0.6vw;\r\n  font-family: Iosevka bold;\r\n  font-size: calc(${(props) => props.size} / 2.5);\r\n  border: calc(${(props) => props.size} / 10) solid ${GLOBALS.COLORS.darkgrey};\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    border: calc(${(props) => props.size} / 10) solid\r\n      ${GLOBALS.COLORS.lightorange};\r\n    cursor: pointer;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border: calc(${(props) => props.size} / 10) solid\r\n      ${GLOBALS.COLORS.midorange};\r\n    border-radius: 0;\r\n  }\r\n`;\r\n\r\nconst Option = (props) => {\r\n  return (\r\n    <OptionButton\r\n      size={props.size}\r\n      onClick={props.onClick}\r\n      onMouseDown={(event) => event.preventDefault()}\r\n    >\r\n      <OptionButtonText size={props.size}>{props.text}</OptionButtonText>\r\n    </OptionButton>\r\n  );\r\n};\r\nconst SelectedOption = (props) => {\r\n  return (\r\n    <SelectedOptionButton\r\n      onClick={props.toggle}\r\n      onBlur={props.setOFF}\r\n      size={props.size}\r\n    >\r\n      {props.currentOption}\r\n    </SelectedOptionButton>\r\n  );\r\n};\r\n\r\nclass Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      defaultOption: props.default,\r\n      currentOption: props.default,\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentOption !== prevState.currentOption) {\r\n      this.props.onChange(this.state.currentOption);\r\n    }\r\n  }\r\n\r\n  setCurrent(option) {\r\n    this.setState({ currentOption: option });\r\n    this.props.onChange(this.state.currentOption);\r\n    this.toggleOpen();\r\n  }\r\n  toggleOpen() {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n    if (this.state.isOpen === true) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const options = [];\r\n    this.props.options.map((opt, i) => {\r\n      if (this.state.showAllOptions && opt.name === this.state.currentOption) {\r\n      } else {\r\n        options.push(\r\n          <Option\r\n            text={opt.name}\r\n            size={this.props.width}\r\n            key={i}\r\n            onClick={() => {\r\n              this.setCurrent(opt);\r\n              document.activeElement.blur();\r\n            }}\r\n          ></Option>\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <DropDownStyle width={this.props.width} height={this.props.height}>\r\n        <SelectedOption\r\n          size={this.props.width}\r\n          currentOption={this.state.currentOption.name}\r\n          toggle={() => this.toggleOpen()}\r\n          setOFF={() => this.setState({ isOpen: false })}\r\n        />\r\n        <OptionsDiv isOpen={this.state.isOpen} size={this.props.width}>\r\n          {options}\r\n        </OptionsDiv>\r\n      </DropDownStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GLOBALS from \"../../../../Globals\";\r\n\r\nconst HVButtons = styled.button`\r\n  width: ${(props) => (props.horizontal ? \"3vw\" : \"2vw\")};\r\n  height: ${(props) => (props.horizontal ? \"2vw\" : \"3vw\")};\r\n  margin: 0 0.2vw;\r\n  background-color: ${(props) =>\r\n    props.active === true\r\n      ? GLOBALS.COLORS.midorange\r\n      : GLOBALS.COLORS.lightgrey};\r\n  border: 0.4vw solid ${GLOBALS.COLORS.darkgrey};\r\n\r\n  &:hover {\r\n    border: 0.4vw solid\r\n      ${(props) =>\r\n        props.active === false\r\n          ? GLOBALS.COLORS.lightorange\r\n          : GLOBALS.COLORS.darkgrey};\r\n  }\r\n  cursor: pointer;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nclass HVSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hv: \"horizontal\",\r\n    };\r\n    this.props.onChange(this.state.hv);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.hv !== prevState.hv) {\r\n      this.props.onChange(this.state.hv);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <HVButtons\r\n          active={this.state.hv === \"horizontal\"}\r\n          horizontal=\"dag\"\r\n          onClick={() => this.setState({ hv: \"horizontal\" })}\r\n        ></HVButtons>\r\n        <HVButtons\r\n          active={this.state.hv === \"vertical\"}\r\n          onClick={() => this.setState({ hv: \"vertical\" })}\r\n        ></HVButtons>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HVSelector;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SVGImage = styled.img`\r\n  user-select: none;\r\n  user-drag: none;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nclass DocTypeSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      docType: props.docTypes[0],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.docType !== prevState.docType) {\r\n      this.props.setDocType(this.state.docType);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[0]\r\n              ? process.env.PUBLIC_URL +\r\n                \"/assets/icons/ui/regular_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL + \"/assets/icons/ui/regular_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[0] })}\r\n          style={{ width: this.props.width, gridColumn: 1 }}\r\n        />\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[1]\r\n              ? process.env.PUBLIC_URL +\r\n                \"/assets/icons/ui/infinite_scroll_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL +\r\n                \"/assets/icons/ui/infinite_scroll_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[1] })}\r\n          style={{ width: this.props.width, gridColumn: 2 }}\r\n        />\r\n        <SVGImage\r\n          src={\r\n            this.state.docType === this.props.docTypes[2]\r\n              ? process.env.PUBLIC_URL +\r\n                \"/assets/icons/ui/infinite_doc-selected.svg\"\r\n              : process.env.PUBLIC_URL + \"/assets/icons/ui/infinite_doc.svg\"\r\n          }\r\n          onClick={() => this.setState({ docType: this.props.docTypes[2] })}\r\n          style={{ width: this.props.width, gridColumn: 3 }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocTypeSelector;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ModalBox, ModalTextButton, ModalTitle } from \"./BaseModal\";\r\nimport Dropdown from \"./components/DropDown\";\r\nimport { useEffect } from \"react\";\r\nimport HVSelector from \"./components/HVSelector\";\r\nimport DocTypeSelector from \"./components/DocTypes\";\r\nimport { useRef } from \"react\";\r\n\r\nimport GLOBALS from \"../../../Globals\";\r\nimport RGBSelector from \"./components/RGBSelector\";\r\n\r\nconst TextDiv = styled.div`\r\n  float: left;\r\n  transform: translateY(0.3vw);\r\n  margin-right: 0.2vw;\r\n  font-family: Iosevka heavy;\r\n  font-size: 2vw;\r\n  color: GLOBALS.COLORS.darkgrey;\r\n  user-select: none;\r\n  user-drag: none;\r\n`;\r\n\r\nconst FilesTypesSelection = (props) => {\r\n  const svgWidth = \"18vw\";\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"grid\", width: \"100%\", justifyItems: \"center\" }}>\r\n        <DocTypeSelector\r\n          docTypes={GLOBALS.DOC_TYPES}\r\n          setDocType={props.setDocType}\r\n          width={svgWidth}\r\n        />\r\n        <div style={{ position: \"relative\", width: \"60%\", gridColumn: 1 }}>\r\n          <TextDiv>Din</TextDiv>\r\n          <Dropdown\r\n            onChange={props.setFormat}\r\n            width=\"4vw\"\r\n            default={GLOBALS.DOC_FORMATS[0]}\r\n            options={GLOBALS.DOC_FORMATS}\r\n            style={{\r\n              float: \"right\",\r\n            }}\r\n          />\r\n\r\n          <HVSelector onChange={props.setOrientation} />\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            gridColumn: 2,\r\n            gridRow: 3,\r\n          }}\r\n        >\r\n          <TextDiv>Background</TextDiv>\r\n          <div\r\n            style={{\r\n              // width: \"100%\",\r\n              // height: \"100%\",\r\n              backgroundColor: GLOBALS.COLORS.lightgrey,\r\n              // border: \".6vw solid \" + GLOBALS.COLORS.darkgrey,\r\n            }}\r\n          >\r\n            <input\r\n              type=\"color\"\r\n              value={props.bgColor}\r\n              style={{\r\n                width: \"6vw\",\r\n                height: \"4vw\",\r\n                boxSizing: \"border-box\",\r\n                backgroundColor: GLOBALS.COLORS.darkgrey,\r\n                // border: \".6vw solid \" + GLOBALS.COLORS.darkgrey,\r\n              }}\r\n              onChange={(e) => props.setBG(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ButtonContainerDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: auto;\r\n  margin-top: 2vh;\r\n  margin-bottom: 1vh;\r\n`;\r\n\r\nconst NewFileModal = (props) => {\r\n  const [docType, setDocType] = useState(GLOBALS.DOC_TYPES[0]);\r\n  const [format, setFormat] = useState(GLOBALS.DOC_FORMATS[0]);\r\n  const [orientation, setOrientation] = useState(GLOBALS.DOC_ORIENTATIONS[0]);\r\n  const [bgColor, setBG] = useState(\"#FFFFFF\");\r\n\r\n  if (props.isOpen === \"true\") {\r\n    return (\r\n      <ModalBox style={{ overflowY: \"scroll\" }}>\r\n        <ModalTitle> Create New Document </ModalTitle>\r\n\r\n        <div\r\n          style={{\r\n            height: \"83%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <FilesTypesSelection\r\n            setDocType={setDocType}\r\n            setFormat={setFormat}\r\n            setOrientation={setOrientation}\r\n            bgColor={bgColor}\r\n            setBG={setBG}\r\n            modalRef\r\n          />\r\n          <ButtonContainerDiv>\r\n            <ModalTextButton\r\n              style={{ float: \"left\", transform: \"translate(1.5vw)\" }}\r\n              text=\"Back\"\r\n              side=\"left\"\r\n              func={props.func}\r\n            />\r\n            <ModalTextButton\r\n              style={{ float: \"right\", transform: \"translate(-2vw)\" }}\r\n              text=\"Create\"\r\n              side=\"right\"\r\n              func={() =>\r\n                props.appCallback(docType, format, orientation, bgColor)\r\n              }\r\n            />\r\n          </ButtonContainerDiv>\r\n        </div>\r\n      </ModalBox>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default NewFileModal;\r\n","// NOT USED\r\n// USING DEFAULT HTML5 COLOR PICKER INSTEAD\r\n// MAY BE USED IN THE FUTURE\r\n\r\nimport React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GLOBALS from \"../../../../Globals\";\r\n\r\nconst RGBButton = styled.button`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  background-color: ${(props) => props.color};\r\n  border: 0.6vw solid ${GLOBALS.COLORS.darkgrey};\r\n  width: 6vw;\r\n  height: 4vw;\r\n`;\r\n\r\nconst RGBDiv = styled.div`\r\n  position: fixed;\r\n  background-color: ${GLOBALS.COLORS.grey};\r\n  padding: 1vw;\r\n  transform: translate(20%, -70%);\r\n  border: 0.6vw solid ${GLOBALS.COLORS.darkgrey};\r\n  z-index: 9000;\r\n`;\r\n\r\nconst RGBCanvas = styled.canvas`\r\n  aspect-ratio: 1/1;\r\n`;\r\n\r\nclass RGBSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpened: false,\r\n    };\r\n    this.canvasRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // var canvas = this.canvasRef.current;\r\n    // var ctx = canvas.getContext(\"2d\");\r\n    // ctx.fillStyle = this.props.bgColor;\r\n    // for (let i = 0; i < canvas.width; i++) {\r\n    //   for (let j = 0; j < canvas.height; j++) {\r\n    //     let rgb = this.HSLtoRGB((i * 360) / canvas.width, 1, j / canvas.height);\r\n    //     ctx.fillStyle = this.RGBtoHEX(rgb.r, rgb.g, rgb.b);\r\n    //     ctx.fillRect(i, canvas.height - j, 1, 1);\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  RGBtoHSL(r, g, b) {\r\n    var red = r / 255;\r\n    var green = g / 255;\r\n    var blue = b / 255;\r\n\r\n    var cMax = Math.max([red, green, blue]);\r\n    var cMin = Math.max([red, green, blue]);\r\n    var delta = cMax - cMin;\r\n\r\n    var Hue, Saturation, Lightness;\r\n    if (delta === 0) {\r\n      Hue = 0;\r\n    } else if (cMax === red) {\r\n      Hue = (60 * ((green - blue) / delta)) % 6;\r\n    } else if (cMax === green) {\r\n      Hue = 60 * ((blue - red) / delta + 2);\r\n    } else if (cMax === blue) {\r\n      Hue = 60 * ((red - green) / delta + 4);\r\n    }\r\n    return { h: Hue, s: Saturation, l: Lightness };\r\n  }\r\n\r\n  HSLtoRGB(h, s, l) {\r\n    var C = 1 - Math.abs(2 * l - 1) * s;\r\n    var X = C * (1 - Math.abs(((h / 60) % 2) - 1));\r\n    var m = l - C / 2;\r\n\r\n    var red, green, blue;\r\n    if (0 <= h && h < 60) {\r\n      red = C;\r\n      green = X;\r\n      blue = 0;\r\n    } else if (60 <= h && h < 120) {\r\n      red = X;\r\n      green = C;\r\n      blue = 0;\r\n    } else if (120 <= h && h < 180) {\r\n      red = 0;\r\n      green = C;\r\n      blue = X;\r\n    } else if (180 <= h && h < 240) {\r\n      red = 0;\r\n      green = X;\r\n      blue = C;\r\n    } else if (240 <= h && h < 300) {\r\n      red = X;\r\n      green = 0;\r\n      blue = C;\r\n    } else if (300 <= h && h < 360) {\r\n      red = C;\r\n      green = 0;\r\n      blue = X;\r\n    }\r\n\r\n    return { r: (red + m) * 255, g: (green + m) * 255, b: (blue + m) * 255 };\r\n  }\r\n\r\n  HEXlength(a) {\r\n    return a.length > 1 ? a : \"0\" + a;\r\n  }\r\n  RGBtoHEX(r, g, b) {\r\n    var red = Math.round(r).toString(16);\r\n    var green = Math.round(g).toString(16);\r\n    var blue = Math.round(b).toString(16);\r\n    return `#${this.HEXlength(red)}${this.HEXlength(green)}${this.HEXlength(\r\n      blue\r\n    )}`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <RGBButton>\r\n          <RGBDiv>\r\n            <RGBCanvas\r\n              ref={this.canvasRef}\r\n              width={window.innerHeight * 0.4}\r\n              height={window.innerHeight * 0.4}\r\n            ></RGBCanvas>\r\n          </RGBDiv>\r\n        </RGBButton> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RGBSelector;\r\n","import React from 'react'\r\nimport { ModalBox, ModalTextButton, ModalTitle } from './BaseModal'\r\n\r\nconst ImportFileModal = (props) => {\r\n    if (props.isOpen === \"true\") {\r\n        return (\r\n          <ModalBox>\r\n            <ModalTitle> Import File </ModalTitle>\r\n            <ModalTextButton text=\"Import\" func={props.appCallback} />\r\n            <ModalTextButton text=\"Back\" side=\"left\" func={props.func} />\r\n          </ModalBox>\r\n        );\r\n    }\r\n    else {\r\n        return ( <></> )\r\n    }\r\n}\r\n\r\nexport default ImportFileModal;","import React from 'react'\r\nimport { ModalBox, ModalTextButton, ModalTitle } from './BaseModal'\r\n\r\nconst OpenFileModal = (props) => {\r\n    if (props.isOpen === \"true\") {\r\n        return (\r\n          <ModalBox>\r\n            <ModalTitle> Open Document </ModalTitle>\r\n            <ModalTextButton text=\"Open\" func={props.appCallback} />\r\n            <ModalTextButton text=\"Back\" side=\"left\" func={props.func} />\r\n          </ModalBox>\r\n        );\r\n    }\r\n    else {\r\n        return ( <></> )\r\n    }\r\n}\r\n\r\nexport default OpenFileModal;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeModal from \"./Modals/BaseModal\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect } from \"react\";\r\nimport NewFileModal from \"./Modals/NewFileModal\";\r\nimport ImportFileModal from \"./Modals/ImportFileModal\";\r\nimport OpenFileModal from \"./Modals/OpenFileModal\";\r\n\r\nimport appLogo from \"../../logo.svg\";\r\nimport \"./Home.css\";\r\n\r\nconst Blurred = styled.div`\r\n  filter: blur(${(props) => (props.blur === \"true\" ? \"20\" : \"0\")}px);\r\n  transition: filter ease-in 50ms;\r\n`;\r\n\r\nfunction Home(props) {\r\n  const [isOpenNew, setOpenNew] = useState(\"false\");\r\n  const [isOpenImport, setOpenImport] = useState(\"false\");\r\n  const [isOpenOpen, setOpenOpen] = useState(\"false\");\r\n  const [isOpenAny, setOpenAny] = useState(\"false\"); // is any modal opened?\r\n\r\n  // const prevOpenFiles = [];\r\n  const prevOpenFiles = [\r\n    \"11111.???\",\r\n    \"2222222.???\",\r\n    \"33333333.???\",\r\n    \"4444.???\",\r\n    \"55555.???\",\r\n  ];\r\n  var belowContent;\r\n  if (prevOpenFiles && prevOpenFiles.length > 0) {\r\n    let smallButtons = [];\r\n    prevOpenFiles.map((f, i) => {\r\n      smallButtons.push(<SmallButton key={i} title={f} link=\"/\" />);\r\n    });\r\n    belowContent = <div className=\"small-buttons\">{smallButtons}</div>;\r\n  } else {\r\n    belowContent = <NewUserWelcome />;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isOpenNew === \"true\" ||\r\n      isOpenImport === \"true\" ||\r\n      isOpenOpen === \"true\"\r\n    ) {\r\n      setOpenAny(\"true\");\r\n    } else if (\r\n      isOpenNew === \"false\" &&\r\n      isOpenImport === \"false\" &&\r\n      isOpenOpen === \"false\"\r\n    ) {\r\n      setOpenAny(\"false\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <NewFileModal\r\n        isOpen={isOpenNew}\r\n        redirect=\"new\"\r\n        appCallback={props.createCallback}\r\n        func={() => {\r\n          setOpenNew(\"false\");\r\n        }}\r\n      />\r\n      <OpenFileModal\r\n        isOpen={isOpenOpen}\r\n        redirect=\"\"\r\n        appCallback={props.openCallback}\r\n        func={() => {\r\n          setOpenOpen(\"false\");\r\n        }}\r\n      />\r\n      <ImportFileModal\r\n        isOpen={isOpenImport}\r\n        redirect=\"\"\r\n        appCallback={props.importCallback}\r\n        func={() => {\r\n          setOpenImport(\"false\");\r\n        }}\r\n      />\r\n      <Blurred blur={isOpenAny}>\r\n        <div className=\"home\">\r\n          <div className=\"main-buttons\">\r\n            <MainButton\r\n              title=\"New Document\"\r\n              subtitle=\"fileformat\"\r\n              svgTranslate={-13}\r\n              src={process.env.PUBLIC_URL + \"/assets/icons/ui/new_file.svg\"}\r\n              onClick={() => {\r\n                isOpenNew === \"false\"\r\n                  ? setOpenNew(\"true\")\r\n                  : setOpenNew(\"false\");\r\n              }}\r\n            />\r\n            <MainButton\r\n              title=\"Open\"\r\n              subtitle=\"fileformat\"\r\n              src={process.env.PUBLIC_URL + \"/assets/icons/ui/open_file.svg\"}\r\n              svgScale={1.3}\r\n              svgTranslate={-20}\r\n              onClick={() => {\r\n                isOpenOpen === \"false\"\r\n                  ? setOpenOpen(\"true\")\r\n                  : setOpenOpen(\"false\");\r\n              }}\r\n            />\r\n            <MainButton\r\n              title=\"Import\"\r\n              subtitle=\"pdf png jgp flipchart\"\r\n              src={process.env.PUBLIC_URL + \"/assets/icons/ui/import_file.svg\"}\r\n              svgTranslate={-13}\r\n              onClick={() => {\r\n                isOpenImport === \"false\"\r\n                  ? setOpenImport(\"true\")\r\n                  : setOpenImport(\"false\");\r\n              }}\r\n            />\r\n          </div>\r\n          {belowContent}\r\n        </div>\r\n\r\n        <footer></footer>\r\n      </Blurred>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MainButton = (props) => {\r\n  const translate = props.svgTranslate ? props.svgTranslate : -20;\r\n  const scale = props.svgScale ? props.svgScale * 100 : 100;\r\n\r\n  return (\r\n    <div className=\"main-file-button\" onClick={props.onClick}>\r\n      <div className=\"main-file-button-top\">\r\n        <img\r\n          src={props.src}\r\n          style={{\r\n            height: `${scale}%`,\r\n            transform: `translateY(${translate}%)`,\r\n          }}\r\n        />\r\n        <h1> {props.title} </h1>\r\n      </div>\r\n      <div className=\"main-file-button-bottom\">\r\n        <h3> {props.subtitle} </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SmallButtonPreview = (props) => {\r\n  return (\r\n    <div className=\"small-file-button-top\">\r\n      <div>\r\n        <img src={props.src} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SmallButton = (props) => {\r\n  return (\r\n    <Link to={props.link} className=\"small-file-button\">\r\n      <SmallButtonPreview src={props.previewSrc} />\r\n      <div className=\"small-file-button-bottom\">\r\n        <h3> {props.title} </h3>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst NewUserWelcome = (props) => {\r\n  return (\r\n    <div className=\"user-welcome\">\r\n      <img src={appLogo} alt=\"logo\" />\r\n      <div className=\"description\" style={{}}>\r\n        <h1>Welcome to Expanded Board</h1>\r\n        <br />\r\n        <h3>You haven't opened any Documents yet</h3>\r\n        <hr style={{ width: \"100%\" }} />\r\n        <h4>\r\n          You can create, open or import a Document and access previous ones on\r\n          this page\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { Component, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  withRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport Canvas from \"./components/Canvas/Canvas.jsx\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Artboard, { infiniteScrollArtboard } from \"./components/Canvas/Artboard\";\r\nimport GLOBALS from \"./Globals\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentDoc: undefined,\r\n      documents: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentDoc !== prevState.currentDoc) {\r\n    }\r\n  }\r\n\r\n  createDocument(docType, format, orientation, bgColor) {\r\n    if (docType === \"regular\") {\r\n      var width, height;\r\n\r\n      GLOBALS.DOC_FORMATS.map((FORMAT, i) => {\r\n        if (format === FORMAT) {\r\n          width = FORMAT.width;\r\n          height = FORMAT.height;\r\n          if (orientation === \"horizontal\") {\r\n            width = FORMAT.height;\r\n            height = FORMAT.width;\r\n          }\r\n        }\r\n      });\r\n\r\n      this.setState({ currentDoc: new Artboard(width, height, bgColor) });\r\n\r\n    } else if (docType === \"infinite-scroll\") {\r\n      this.setState({ currentDoc: new infiniteScrollArtboard(2000, bgColor) });\r\n    } else if (docType === \"infinite\") {\r\n      this.setState({ currentDoc: new infiniteScrollArtboard(2000, bgColor) });\r\n    }\r\n\r\n    this.setState({\r\n      documents: [...this.state.documents, this.state.currentDoc],\r\n    });\r\n\r\n    this.props.history.push(\"/new\", { state: this.state.currentDoc });\r\n  }\r\n  openDocument(path) {}\r\n  importDocument(path) {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/new\">\r\n            <Navbar side=\"nav-bottom\" />\r\n            <Canvas Doc={this.state.currentDoc} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            {\" \"}\r\n            // \"/\" path Route always last\r\n            <Navbar side=\"nav-top\" />\r\n            <Home\r\n              createCallback={(docType, format, orientation, bgColor) =>\r\n                this.createDocument(docType, format, orientation, bgColor)\r\n              }\r\n              openCallback={(path) => this.openDocument(path)}\r\n              importCallback={(path) => this.importDocument(path)}\r\n            />\r\n          </Route>\r\n\r\n          <Route\r\n            render={() => (\r\n              <h1>\r\n                {\" \"}\r\n                404 Error: Page not Found <br /> Go <Link to=\"/\"> Home </Link>\r\n              </h1>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}